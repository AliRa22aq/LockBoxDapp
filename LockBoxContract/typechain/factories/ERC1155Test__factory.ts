/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155Test, ERC1155TestInterface } from "../ERC1155Test";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051806060016040528060278152602001620016b96027913962000037816200003e565b506200013a565b80516200005390600290602084019062000057565b5050565b8280546200006590620000fd565b90600052602060002090601f016020900481019282620000895760008555620000d4565b82601f10620000a457805160ff1916838001178555620000d4565b82800160010185558215620000d4579182015b82811115620000d4578251825591602001919060010190620000b7565b50620000e2929150620000e6565b5090565b5b80821115620000e25760008155600101620000e7565b600181811c908216806200011257607f821691505b602082108114156200013457634e487b7160e01b600052602260045260246000fd5b50919050565b61156f806200014a6000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80632eb2c2d6116100665780632eb2c2d6146101155780634e1273f414610128578063a22cb46514610148578063e985e9c51461015b578063f242432a1461019757600080fd5b8062fdd58e1461009757806301ffc9a7146100bd5780630e89341c146100e05780631b2ef1ca14610100575b600080fd5b6100aa6100a5366004610fd4565b6101aa565b6040519081526020015b60405180910390f35b6100d06100cb3660046110c8565b610241565b60405190151581526020016100b4565b6100f36100ee366004611107565b610293565b6040516100b491906112a9565b61011361010e36600461111f565b610327565b005b610113610123366004610e91565b610346565b61013b610136366004610ffd565b6103dd565b6040516100b49190611268565b610113610156366004610f9a565b61053f565b6100d0610169366004610e5f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101136101a5366004610f37565b61054a565b60006001600160a01b03831661021b5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061027257506001600160e01b031982166303a24d0760e21b145b8061028d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102a2906113cf565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce906113cf565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b50505050509050919050565b610342338383604051806020016040528060008152506105d1565b5050565b6001600160a01b03851633148061036257506103628533610169565b6103c95760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610212565b6103d685858585856106db565b5050505050565b606081518351146104425760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610212565b6000835167ffffffffffffffff81111561046c57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610495578160200160208202803683370190505b50905060005b8451811015610537576104fc8582815181106104c757634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106104ef57634e487b7160e01b600052603260045260246000fd5b60200260200101516101aa565b82828151811061051c57634e487b7160e01b600052603260045260246000fd5b602090810291909101015261053081611437565b905061049b565b509392505050565b6103423383836108d4565b6001600160a01b03851633148061056657506105668533610169565b6105c45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610212565b6103d685858585856109b5565b6001600160a01b0384166106315760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610212565b3361064b8160008761064288610ad2565b6103d688610ad2565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061067b9084906113b7565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46103d681600087878787610b2b565b815183511461073d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610212565b6001600160a01b0384166107635760405162461bcd60e51b815260040161021290611304565b3360005b845181101561086657600085828151811061079257634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106107be57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561080e5760405162461bcd60e51b815260040161021290611349565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061084b9084906113b7565b925050819055505050508061085f90611437565b9050610767565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108b692919061127b565b60405180910390a46108cc818787878787610c96565b505050505050565b816001600160a01b0316836001600160a01b031614156109485760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610212565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109db5760405162461bcd60e51b815260040161021290611304565b336109eb81878761064288610ad2565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610a2c5760405162461bcd60e51b815260040161021290611349565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610a699084906113b7565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ac9828888888888610b2b565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b1a57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156108cc5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b6f9089908990889088908890600401611223565b602060405180830381600087803b158015610b8957600080fd5b505af1925050508015610bb9575060408051601f3d908101601f19168201909252610bb6918101906110eb565b60015b610c6657610bc561147e565b806308c379a01415610bff5750610bda611496565b80610be55750610c01565b8060405162461bcd60e51b815260040161021291906112a9565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610212565b6001600160e01b0319811663f23a6e6160e01b14610ac95760405162461bcd60e51b8152600401610212906112bc565b6001600160a01b0384163b156108cc5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610cda90899089908890889088906004016111c5565b602060405180830381600087803b158015610cf457600080fd5b505af1925050508015610d24575060408051601f3d908101601f19168201909252610d21918101906110eb565b60015b610d3057610bc561147e565b6001600160e01b0319811663bc197c8160e01b14610ac95760405162461bcd60e51b8152600401610212906112bc565b80356001600160a01b0381168114610d7757600080fd5b919050565b600082601f830112610d8c578081fd5b81356020610d9982611393565b604051610da6828261140a565b8381528281019150858301600585901b87018401881015610dc5578586fd5b855b85811015610de357813584529284019290840190600101610dc7565b5090979650505050505050565b600082601f830112610e00578081fd5b813567ffffffffffffffff811115610e1a57610e1a611468565b604051610e31601f8301601f19166020018261140a565b818152846020838601011115610e45578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610e71578182fd5b610e7a83610d60565b9150610e8860208401610d60565b90509250929050565b600080600080600060a08688031215610ea8578081fd5b610eb186610d60565b9450610ebf60208701610d60565b9350604086013567ffffffffffffffff80821115610edb578283fd5b610ee789838a01610d7c565b94506060880135915080821115610efc578283fd5b610f0889838a01610d7c565b93506080880135915080821115610f1d578283fd5b50610f2a88828901610df0565b9150509295509295909350565b600080600080600060a08688031215610f4e578081fd5b610f5786610d60565b9450610f6560208701610d60565b93506040860135925060608601359150608086013567ffffffffffffffff811115610f8e578182fd5b610f2a88828901610df0565b60008060408385031215610fac578182fd5b610fb583610d60565b915060208301358015158114610fc9578182fd5b809150509250929050565b60008060408385031215610fe6578182fd5b610fef83610d60565b946020939093013593505050565b6000806040838503121561100f578182fd5b823567ffffffffffffffff80821115611026578384fd5b818501915085601f830112611039578384fd5b8135602061104682611393565b604051611053828261140a565b8381528281019150858301600585901b870184018b1015611072578889fd5b8896505b8487101561109b5761108781610d60565b835260019690960195918301918301611076565b50965050860135925050808211156110b1578283fd5b506110be85828601610d7c565b9150509250929050565b6000602082840312156110d9578081fd5b81356110e481611520565b9392505050565b6000602082840312156110fc578081fd5b81516110e481611520565b600060208284031215611118578081fd5b5035919050565b60008060408385031215611131578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b8381101561116f57815187529582019590820190600101611153565b509495945050505050565b60008151808452815b8181101561119f57602081850181015186830182015201611183565b818111156111b05782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111f190830186611140565b82810360608401526112038186611140565b90508281036080840152611217818561117a565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061125d9083018461117a565b979650505050505050565b6020815260006110e46020830184611140565b60408152600061128e6040830185611140565b82810360208401526112a08185611140565b95945050505050565b6020815260006110e4602083018461117a565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff8211156113ad576113ad611468565b5060051b60200190565b600082198211156113ca576113ca611452565b500190565b600181811c908216806113e357607f821691505b6020821081141561140457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561143057611430611468565b6040525050565b600060001982141561144b5761144b611452565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561149357600481823e5160e01c5b90565b600060443d10156114a45790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156114d457505050505090565b82850191508151818111156114ec5750505050505090565b843d87010160208285010111156115065750505050505090565b6115156020828601018761140a565b509095945050505050565b6001600160e01b03198116811461153657600080fd5b5056fea2646970667358221220b0bb26efc96e31e9a87c6e163f2b6091cc07f5da8974d251ee9a9e148477a16364736f6c6343000804003368747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e";

export class ERC1155Test__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Test> {
    return super.deploy(overrides || {}) as Promise<ERC1155Test>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155Test {
    return super.attach(address) as ERC1155Test;
  }
  connect(signer: Signer): ERC1155Test__factory {
    return super.connect(signer) as ERC1155Test__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155TestInterface {
    return new utils.Interface(_abi) as ERC1155TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Test {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Test;
  }
}
