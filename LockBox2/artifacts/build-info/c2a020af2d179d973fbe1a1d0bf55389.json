{
  "id": "c2a020af2d179d973fbe1a1d0bf55389",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.0",
  "solcLongVersion": "0.8.0+commit.c7dfd78e",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/ERC721Holder.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\n\r\ncontract ERC721Holder is IERC721Receiver {\r\n    /**\r\n     * @dev See {IERC721Receiver-onERC721Received}.\r\n     *\r\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address,\r\n        address,\r\n        uint256,\r\n        bytes memory\r\n    ) public virtual override returns (bytes4) {\r\n        return this.onERC721Received.selector;\r\n    }\r\n\r\n}"
      },
      "contracts/LockBox.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./IERC721.sol\";\r\nimport \"./ERC721Holder.sol\";\r\n\r\n\r\ncontract LockBox is ERC721Holder {\r\n\r\n    uint public counter;\r\n    uint public boxFee = 0.1 ether;\r\n    uint public updateFee = 0.000001 ether;\r\n\r\n    mapping (uint => LockBoxInfo) public lockBoxInfo;\r\n\r\n    enum AssetNumber {ONE,TWO}\r\n    enum AssetType {NFT, TOKEN, COIN}\r\n    enum Status {PENDING, SUCCEED, FAILED}\r\n    enum ClaimStatus {NOT_CLAIMED, CLAIMED}\r\n    enum LockStatus {NOT_LOCKED, LOCKED}\r\n    enum ApprovalStatus {NOT_APPROVED, APPROVED}\r\n\r\n    modifier onlyOwner(uint _id) {\r\n        require(msg.sender == lockBoxInfo[_id].lockBoxOwner, \"Not owner\");\r\n        _;\r\n    }\r\n\r\n    struct Asset {\r\n        AssetType assetType;\r\n        address owner;\r\n        address assetAddress;\r\n        uint assetID;\r\n        uint assetQuantity;\r\n        LockStatus lockStatus;\r\n        ApprovalStatus approvalStatus;\r\n        ClaimStatus claimStatus;\r\n        address claimedBy;\r\n    }\r\n\r\n    struct LockBoxInfo {\r\n        address lockBoxOwner;\r\n        uint expiryTime;\r\n        // uint lockBoxWallet;\r\n        Status status;\r\n        Asset assetA;\r\n        Asset assetB;\r\n    }\r\n\r\n\r\n    function createLockBox(\r\n        AssetType _assetAtype, address _assetAaddress, uint _assetAID, uint _assetAQuantity,\r\n        AssetType _assetBtype, address _assetBaddress, uint _assetBID, uint _assetBQuantity,\r\n        uint _expiryTime\r\n        ) public payable {\r\n        \r\n        require(msg.value >= boxFee, \"Please pay the fee\");\r\n\r\n        counter++;\r\n\r\n        Asset memory _assetA = Asset (\r\n            _assetAtype, \r\n            msg.sender,\r\n            _assetAaddress,\r\n            _assetAID,\r\n            _assetAQuantity,\r\n            LockStatus.NOT_LOCKED,\r\n            ApprovalStatus.NOT_APPROVED,\r\n            ClaimStatus.NOT_CLAIMED,\r\n            address(0)\r\n        );\r\n\r\n        Asset memory _assetB = Asset (\r\n            _assetBtype, \r\n            address(0),\r\n            _assetBaddress,\r\n            _assetBID,\r\n            _assetBQuantity,\r\n            LockStatus.NOT_LOCKED,\r\n            ApprovalStatus.NOT_APPROVED,\r\n            ClaimStatus.NOT_CLAIMED,\r\n            address(0)\r\n        );\r\n\r\n        LockBoxInfo memory _lockBox =  LockBoxInfo(\r\n            msg.sender,\r\n            _expiryTime,\r\n            Status.PENDING,\r\n            _assetA,\r\n            _assetB\r\n        );\r\n\r\n\r\n        lockBoxInfo[counter] = _lockBox;\r\n    \r\n    }\r\n\r\n    function lockAsset(uint _id) public payable {\r\n\r\n        LockBoxInfo memory _lockBox = lockBoxInfo[_id];\r\n        \r\n        require(_lockBox.status == Status.PENDING, \"LockBox is not pending anymore\");\r\n        require( block.timestamp < _lockBox.expiryTime, \"lockbox is expired\"  );\r\n        \r\n        // bool isAllowed = msg.sender == _lockBox.assetA.owner || msg.sender == _lockBox.assetB.owner; \r\n        // require(isAllowed, \"Not allowed\");\r\n\r\n        if(msg.sender == _lockBox.assetA.owner){\r\n            require(_lockBox.assetA.lockStatus == LockStatus.NOT_LOCKED, \"Asset is already locked\" );\r\n\r\n                    // Submit Asset A\r\n            if(_lockBox.assetA.assetType == AssetType.NFT) {\r\n                IERC721(_lockBox.assetA.assetAddress).transferFrom(msg.sender, address(this), _lockBox.assetA.assetID);\r\n                lockBoxInfo[_id].assetA.lockStatus = LockStatus.LOCKED;\r\n            }\r\n            else if(_lockBox.assetA.assetType == AssetType.TOKEN) {\r\n                IERC20(_lockBox.assetA.assetAddress).transferFrom(msg.sender, address(this), _lockBox.assetA.assetQuantity);\r\n                lockBoxInfo[_id].assetA.lockStatus = LockStatus.LOCKED;\r\n\r\n            }\r\n            else if(_lockBox.assetA.assetType == AssetType.COIN) {\r\n                require(msg.value >= _lockBox.assetA.assetQuantity, \"Insufficient locking funds\" );\r\n                lockBoxInfo[_id].assetA.lockStatus = LockStatus.LOCKED;\r\n            }\r\n        }\r\n\r\n        else {\r\n\r\n            lockBoxInfo[_id].assetB.owner = msg.sender;\r\n\r\n            require(_lockBox.assetB.lockStatus == LockStatus.NOT_LOCKED, \"Asset is already locked\" );\r\n            // require( block.timestamp < _lockBox.expiryTime, \"lockbox is expired\"  );\r\n\r\n                    // Submit Asset A\r\n            if(_lockBox.assetB.assetType == AssetType.NFT) {\r\n                IERC721(_lockBox.assetB.assetAddress).transferFrom(msg.sender, address(this), _lockBox.assetB.assetID);\r\n                lockBoxInfo[_id].assetB.lockStatus = LockStatus.LOCKED;\r\n            }\r\n            else if(_lockBox.assetB.assetType == AssetType.TOKEN) {\r\n                IERC20(_lockBox.assetB.assetAddress).transferFrom(msg.sender, address(this), _lockBox.assetB.assetQuantity);\r\n                lockBoxInfo[_id].assetB.lockStatus = LockStatus.LOCKED;\r\n\r\n            }\r\n            else if(_lockBox.assetB.assetType == AssetType.COIN) {\r\n                require(msg.value >= _lockBox.assetB.assetQuantity, \"Insufficient locking funds\" );\r\n                lockBoxInfo[_id].assetB.lockStatus = LockStatus.LOCKED;\r\n            }\r\n\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    function approveAsset(uint _id) public {\r\n\r\n        LockBoxInfo memory _lockBox = lockBoxInfo[_id];\r\n        \r\n        require(_lockBox.status == Status.PENDING, \"LockBox is not pending anymore\");\r\n        require( block.timestamp < _lockBox.expiryTime, \"Lockbox is expired\" );\r\n        require(msg.sender == _lockBox.assetA.owner || msg.sender == _lockBox.assetB.owner, \"Not allowed\");\r\n\r\n        if(msg.sender == _lockBox.assetA.owner){\r\n            \r\n            require(_lockBox.assetA.lockStatus == LockStatus.LOCKED, \"Asset id not locked\" );\r\n            require(_lockBox.assetA.approvalStatus == ApprovalStatus.NOT_APPROVED, \"Asset is already approved\");\r\n            \r\n\r\n            lockBoxInfo[_id].assetA.approvalStatus = ApprovalStatus.APPROVED;\r\n\r\n            if(_lockBox.assetB.approvalStatus == ApprovalStatus.APPROVED){\r\n                lockBoxInfo[_id].status = Status.SUCCEED;\r\n            }\r\n\r\n        }\r\n\r\n        if(msg.sender == _lockBox.assetB.owner){\r\n\r\n            require(_lockBox.assetB.lockStatus == LockStatus.LOCKED, \"Asset id not locked\" );\r\n            require(_lockBox.assetB.approvalStatus == ApprovalStatus.NOT_APPROVED, \"Asset is already approved\");\r\n            \r\n\r\n            lockBoxInfo[_id].assetB.approvalStatus = ApprovalStatus.APPROVED;\r\n\r\n            if(_lockBox.assetA.approvalStatus == ApprovalStatus.APPROVED){\r\n                lockBoxInfo[_id].status = Status.SUCCEED;\r\n            }\r\n        }\r\n\r\n\r\n        \r\n    }\r\n    \r\n    function claimAsset(uint _id) public  {\r\n\r\n        LockBoxInfo memory _lockBox = lockBoxInfo[_id];\r\n        require(_lockBox.status != Status.FAILED, \"LockBox is canceled\");\r\n        require(msg.sender == _lockBox.assetA.owner || msg.sender == _lockBox.assetB.owner, \"Not allowed\");\r\n\r\n        if(msg.sender == _lockBox.assetA.owner) {\r\n\r\n            if(_lockBox.status == Status.SUCCEED){\r\n                require( _lockBox.assetB.claimStatus == ClaimStatus.NOT_CLAIMED, \"Asset B is already claimed\" );\r\n                require( _lockBox.assetB.lockStatus == LockStatus.LOCKED, \"Asset B is not locked\" );\r\n                require( _lockBox.assetB.approvalStatus == ApprovalStatus.APPROVED, \"Asset B is not approved\" );\r\n\r\n                lockBoxInfo[_id].assetB.claimedBy = msg.sender;\r\n                lockBoxInfo[_id].assetB.claimStatus = ClaimStatus.CLAIMED;\r\n\r\n                if(_lockBox.assetB.assetType == AssetType.NFT) {\r\n                    IERC721(_lockBox.assetB.assetAddress).transferFrom(address(this), msg.sender, _lockBox.assetB.assetID);\r\n                }\r\n                else if(_lockBox.assetB.assetType == AssetType.TOKEN) {\r\n                    IERC20(_lockBox.assetB.assetAddress).transfer(msg.sender, _lockBox.assetB.assetQuantity);\r\n                }\r\n                else if(_lockBox.assetB.assetType == AssetType.COIN) {\r\n                    payable(_lockBox.assetA.owner).transfer(_lockBox.assetB.assetQuantity);\r\n                }\r\n            }\r\n\r\n            else if(_lockBox.status == Status.FAILED){\r\n                \r\n                require( _lockBox.assetA.claimStatus == ClaimStatus.NOT_CLAIMED, \"Asset A is already claimed\" );\r\n                require( _lockBox.assetA.lockStatus == LockStatus.LOCKED, \"Asset A is not locked\" );\r\n                require( _lockBox.assetA.approvalStatus == ApprovalStatus.APPROVED, \"Asset A is not approved\" );\r\n    \r\n                lockBoxInfo[_id].assetA.claimedBy = msg.sender;\r\n                lockBoxInfo[_id].assetA.claimStatus = ClaimStatus.CLAIMED;\r\n\r\n                if(_lockBox.assetA.assetType == AssetType.NFT) {\r\n                    IERC721(_lockBox.assetA.assetAddress).transferFrom(address(this), msg.sender, _lockBox.assetA.assetID);\r\n                }\r\n                else if(_lockBox.assetA.assetType == AssetType.TOKEN) {\r\n                    IERC20(_lockBox.assetA.assetAddress).transfer(msg.sender, _lockBox.assetA.assetQuantity);\r\n                }\r\n                else if(_lockBox.assetA.assetType == AssetType.COIN) {\r\n                    payable(_lockBox.assetA.owner).transfer(_lockBox.assetA.assetQuantity);\r\n                }\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if(msg.sender == _lockBox.assetB.owner) {\r\n            \r\n            if(_lockBox.status == Status.SUCCEED) {\r\n                \r\n                require( _lockBox.assetA.claimStatus == ClaimStatus.NOT_CLAIMED, \"Asset A is already claimed\" );\r\n                require( _lockBox.assetA.lockStatus == LockStatus.LOCKED, \"Asset A is not locked\" );\r\n                require( _lockBox.assetA.approvalStatus == ApprovalStatus.APPROVED, \"Asset A is not approved\" );\r\n\r\n                lockBoxInfo[_id].assetA.claimedBy = msg.sender;\r\n                lockBoxInfo[_id].assetA.claimStatus = ClaimStatus.CLAIMED;\r\n\r\n                if(_lockBox.assetA.assetType == AssetType.NFT) {\r\n                    IERC721(_lockBox.assetA.assetAddress).transferFrom(address(this), msg.sender, _lockBox.assetA.assetID);\r\n                }\r\n                else if(_lockBox.assetA.assetType == AssetType.TOKEN) {\r\n                    IERC20(_lockBox.assetA.assetAddress).transfer(msg.sender, _lockBox.assetA.assetQuantity);\r\n                }\r\n                else if(_lockBox.assetA.assetType == AssetType.COIN) {\r\n                    payable(_lockBox.assetB.owner).transfer(_lockBox.assetA.assetQuantity);\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n            else if(_lockBox.status == Status.FAILED) {\r\n\r\n                require( _lockBox.assetB.claimStatus == ClaimStatus.NOT_CLAIMED, \"Asset B is already claimed\" );\r\n                require( _lockBox.assetB.lockStatus == LockStatus.LOCKED, \"Asset B is not locked\" );\r\n\r\n                lockBoxInfo[_id].assetB.claimStatus = ClaimStatus.CLAIMED;\r\n                lockBoxInfo[_id].assetB.claimedBy = msg.sender;\r\n\r\n                if(_lockBox.assetB.assetType == AssetType.NFT) {\r\n                    IERC721(_lockBox.assetB.assetAddress).transferFrom(address(this), msg.sender, _lockBox.assetB.assetID);\r\n                }\r\n                else if(_lockBox.assetB.assetType == AssetType.TOKEN) {\r\n                    IERC20(_lockBox.assetB.assetAddress).transfer(msg.sender, _lockBox.assetB.assetQuantity);\r\n                }\r\n                else if(_lockBox.assetB.assetType == AssetType.COIN) {\r\n                    payable(_lockBox.assetB.owner).transfer(_lockBox.assetB.assetQuantity);\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function cancelLockBox(uint _id) public {\r\n        LockBoxInfo memory _lockBox = lockBoxInfo[_id];\r\n        \r\n        require(_lockBox.lockBoxOwner == msg.sender, \"Not allowed\");\r\n        require(_lockBox.status == Status.PENDING , \"Lockbox is not pending anymore\");\r\n        \r\n        require(\r\n            _lockBox.assetA.approvalStatus == ApprovalStatus.NOT_APPROVED &&\r\n            _lockBox.assetB.approvalStatus == ApprovalStatus.NOT_APPROVED ,\r\n             \"Cannot cancel the lockbox now\"\r\n        );\r\n\r\n        lockBoxInfo[_id].status = Status.FAILED;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // function lockAssetA(uint _id) public payable {\r\n\r\n    //     LockBoxInfo memory _lockBox = lockBoxInfo[_id];\r\n    //     require(msg.sender == _lockBox.assetA.owner, \"Not lockbox owner\");\r\n    //     require( block.timestamp < _lockBox.expiryTime, \"lockbox is expired\"  );\r\n\r\n    //     // Submit Asset A\r\n    //     if(_lockBox.assetA.assetType == AssetType.NFT) {\r\n    //         IERC721(_lockBox.assetA.assetAddress).transferFrom(msg.sender, address(this), _lockBox.assetA.assetID);\r\n    //         lockBoxInfo[_id].assetA.lockStatus = LockStatus.LOCKED;\r\n    //     }\r\n    //     else if(_lockBox.assetA.assetType == AssetType.TOKEN) {\r\n    //         IERC20(_lockBox.assetA.assetAddress).transferFrom(msg.sender, address(this), _lockBox.assetA.assetQuantity);\r\n    //         lockBoxInfo[_id].assetA.lockStatus = LockStatus.LOCKED;\r\n\r\n    //     }\r\n    //     else if(_lockBox.assetA.assetType == AssetType.COIN) {\r\n    //         require(msg.value >= _lockBox.assetA.assetQuantity, \"\" );\r\n    //         // lockBoxInfo[_id].lockBoxWallet += msg.value;\r\n    //         lockBoxInfo[_id].assetA.lockStatus = LockStatus.LOCKED;\r\n    //     }\r\n\r\n\r\n    // }\r\n\r\n    // function lockAssetB(uint _id) public payable {\r\n\r\n    //     LockBoxInfo memory _lockBox = lockBoxInfo[_id];\r\n    //     require( block.timestamp < _lockBox.expiryTime, \"\" );\r\n        \r\n    //     // Submit Asset B\r\n    //     if(_lockBox.assetB.assetType == AssetType.NFT) {\r\n    //         IERC721(_lockBox.assetB.assetAddress).transferFrom(msg.sender, address(this), _lockBox.assetB.assetID);\r\n    //         lockBoxInfo[_id].assetB.owner = msg.sender;\r\n    //         lockBoxInfo[_id].assetB.lockStatus = LockStatus.LOCKED;\r\n    //     }\r\n    //     else if(_lockBox.assetB.assetType == AssetType.TOKEN) {\r\n    //         IERC20(_lockBox.assetB.assetAddress).transferFrom(msg.sender, address(this), _lockBox.assetB.assetQuantity);\r\n    //         lockBoxInfo[_id].assetB.owner = msg.sender;\r\n    //         lockBoxInfo[_id].assetB.lockStatus = LockStatus.LOCKED;\r\n\r\n    //     }\r\n    //     else if(_lockBox.assetB.assetType == AssetType.COIN) {\r\n    //         require(msg.value >= _lockBox.assetB.assetQuantity, \"\");\r\n    //         // lockBoxInfo[_id].lockBoxWallet += msg.value;\r\n    //         lockBoxInfo[_id].assetB.owner = msg.sender;\r\n    //         lockBoxInfo[_id].assetB.lockStatus = LockStatus.LOCKED;\r\n    //     }\r\n\r\n\r\n\r\n    // } \r\n\r\n    // function approveAssetA(uint _id) public {\r\n\r\n    //     LockBoxInfo memory _lockBox = lockBoxInfo[_id];\r\n\r\n    //     require(_lockBox.assetA.lockStatus == LockStatus.LOCKED, \"\" );\r\n    //     require(_lockBox.assetA.approvalStatus == ApprovalStatus.NOT_APPROVED, \"\");\r\n        \r\n    //     require(msg.sender == _lockBox.assetA.owner, \"\");\r\n\r\n    //     require( block.timestamp < _lockBox.expiryTime, \"\" );\r\n    //     lockBoxInfo[_id].assetA.approvalStatus = ApprovalStatus.APPROVED;\r\n\r\n    //     if(_lockBox.assetB.approvalStatus == ApprovalStatus.APPROVED){\r\n    //         lockBoxInfo[_id].status = Status.SUCCEED;\r\n    //     }\r\n        \r\n    // }\r\n\r\n    // function approveAssetB(uint _id) public {\r\n\r\n    //     LockBoxInfo memory _lockBox = lockBoxInfo[_id];\r\n    //     require(msg.sender == _lockBox.assetB.owner, \"Only owner of asset B is allowed\");\r\n\r\n    //     require(_lockBox.assetB.lockStatus == LockStatus.LOCKED, \"\" );\r\n    //     require(_lockBox.assetB.approvalStatus == ApprovalStatus.NOT_APPROVED, \"\");\r\n\r\n    //     require( block.timestamp < _lockBox.expiryTime , \"\" );\r\n    //     lockBoxInfo[_id].assetB.approvalStatus = ApprovalStatus.APPROVED;\r\n\r\n    //     if(_lockBox.assetA.approvalStatus == ApprovalStatus.APPROVED){\r\n    //         lockBoxInfo[_id].status = Status.SUCCEED;\r\n    //     }\r\n\r\n    // }\r\n\r\n    // function claimAssetA(uint _id) public  {\r\n\r\n    //     LockBoxInfo memory _lockBox = lockBoxInfo[_id];\r\n    //     require(msg.sender == _lockBox.assetB.owner, \"Only owner of asset B is allowed\");\r\n\r\n    //     require( _lockBox.status == Status.SUCCEED, \"The lockbox is not successful\" );\r\n    //     require( _lockBox.assetA.claimStatus == ClaimStatus.NOT_CLAIMED, \"Asset already claimed\" );\r\n\r\n    //     lockBoxInfo[_id].assetA.claimStatus = ClaimStatus.CLAIMED;\r\n    //     // Claim Asset A\r\n    //     if(_lockBox.assetA.assetType == AssetType.NFT) {\r\n    //         IERC721(_lockBox.assetA.assetAddress).transferFrom(address(this), msg.sender, _lockBox.assetA.assetID);\r\n    //     }\r\n    //     else if(_lockBox.assetA.assetType == AssetType.TOKEN) {\r\n    //         IERC20(_lockBox.assetA.assetAddress).transfer(msg.sender, _lockBox.assetA.assetQuantity);\r\n    //     }\r\n    //     else if(_lockBox.assetA.assetType == AssetType.COIN) {\r\n    //         payable(_lockBox.assetB.owner).transfer(_lockBox.assetA.assetQuantity);\r\n    //     }\r\n\r\n\r\n    // }\r\n\r\n    // function claimAssetB(uint _id) public  {\r\n\r\n    //     LockBoxInfo memory _lockBox = lockBoxInfo[_id];\r\n    //     require(msg.sender == _lockBox.assetA.owner, \"Only owner of asset A is allowed\");\r\n    //     require( _lockBox.status == Status.SUCCEED, \"The lockbox is not successful\" );\r\n    //     require( _lockBox.assetB.claimStatus == ClaimStatus.NOT_CLAIMED, \"Asset already claimed\" );\r\n\r\n    //     lockBoxInfo[_id].assetB.claimStatus = ClaimStatus.CLAIMED;\r\n\r\n    //     // Claim Asset B\r\n    //     if( _lockBox.assetB.assetType == AssetType.NFT ) {\r\n    //         IERC721(_lockBox.assetB.assetAddress).approve(msg.sender, _lockBox.assetB.assetID);\r\n    //         IERC721(_lockBox.assetB.assetAddress).transferFrom(address(this), msg.sender, _lockBox.assetB.assetID);\r\n    //         // lockBoxInfo[_id].assetA.lockStatus = LockStatus.LOCKED;\r\n    //     }\r\n    //     else if( _lockBox.assetB.assetType == AssetType.TOKEN ) {\r\n    //         IERC20(_lockBox.assetB.assetAddress).transfer(msg.sender, _lockBox.assetB.assetQuantity);\r\n    //     }\r\n    //     else if( _lockBox.assetB.assetType == AssetType.COIN ) {\r\n    //         payable(_lockBox.assetA.owner).transfer(_lockBox.assetB.assetQuantity);\r\n    //     }\r\n\r\n    \r\n    // }\r\n\r\n}"
      },
      "contracts/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
      },
      "contracts/IERC721.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
      },
      "contracts/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/ERC721Holder.sol": {
        "ERC721Holder": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506101b2806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004361003e366004610085565b610059565b6040516100509190610151565b60405180910390f35b630a85bd0160e11b949350505050565b80356001600160a01b038116811461008057600080fd5b919050565b6000806000806080858703121561009a578384fd5b6100a385610069565b935060206100b2818701610069565b935060408601359250606086013567ffffffffffffffff808211156100d5578384fd5b818801915088601f8301126100e8578384fd5b8135818111156100fa576100fa610166565b604051601f8201601f191681018501838111828210171561011d5761011d610166565b60405281815283820185018b1015610133578586fd5b81858501868301379081019093019390935250939692955090935050565b6001600160e01b031991909116815260200190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e0650ecd0dd9c64578b48c424fb63bcafc728357124c38a585ce98974ebc9c8064736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x85 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xA3 DUP6 PUSH2 0x69 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 PUSH2 0xB2 DUP2 DUP8 ADD PUSH2 0x69 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD5 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE8 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xFA JUMPI PUSH2 0xFA PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD DUP6 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x11D JUMPI PUSH2 0x11D PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD DUP6 ADD DUP12 LT ISZERO PUSH2 0x133 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP2 DUP6 DUP6 ADD DUP7 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 PUSH6 0xECD0DD9C645 PUSH25 0xB48C424FB63BCAFC728357124C38A585CE98974EBC9C806473 PUSH16 0x6C634300080000330000000000000000 ",
              "sourceMap": "995:407:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1713:5",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:5",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "65:124:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "75:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "97:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "84:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "84:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "75:5:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "167:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "176:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "179:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "169:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "169:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "169:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "126:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "137:5:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "152:3:5",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "157:1:5",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "148:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "148:11:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "161:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "144:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "144:19:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "133:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "133:31:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "123:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "123:42:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "116:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "116:50:5"
                              },
                              "nodeType": "YulIf",
                              "src": "113:2:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "44:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "55:5:5",
                            "type": ""
                          }
                        ],
                        "src": "14:175:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "324:1048:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "371:26:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "380:6:5"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "388:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "373:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "373:22:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "373:22:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "345:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "354:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "341:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "341:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "366:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "337:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "337:33:5"
                              },
                              "nodeType": "YulIf",
                              "src": "334:2:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "406:41:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "437:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "416:20:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "416:31:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "406:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "456:12:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "466:2:5",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "460:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "477:50:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "512:9:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "523:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "508:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "508:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "487:20:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "487:40:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "477:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "536:42:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "563:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "574:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "559:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "559:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "546:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "546:32:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "536:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "587:46:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "618:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "629:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "614:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "614:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "601:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "601:32:5"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "591:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "642:28:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "652:18:5",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "646:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "697:26:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "706:6:5"
                                        },
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "714:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "699:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "699:22:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "699:22:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "685:6:5"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "693:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "682:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "682:14:5"
                              },
                              "nodeType": "YulIf",
                              "src": "679:2:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "732:32:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "746:9:5"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "757:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "742:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "742:22:5"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "736:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "812:26:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "821:6:5"
                                        },
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "829:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "814:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "814:22:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "814:22:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "791:2:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "795:4:5",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "787:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "787:13:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "802:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "783:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "783:27:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "776:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "776:35:5"
                              },
                              "nodeType": "YulIf",
                              "src": "773:2:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "847:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "870:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "857:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "857:16:5"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "851:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "896:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "898:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "898:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "898:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "888:2:5"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "892:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "885:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "885:10:5"
                              },
                              "nodeType": "YulIf",
                              "src": "882:2:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "927:23:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "947:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "941:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "941:9:5"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "931:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "959:67:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "985:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "_4",
                                                "nodeType": "YulIdentifier",
                                                "src": "1001:2:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1005:4:5",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "997:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "997:13:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1016:2:5",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "1012:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1012:7:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "993:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "993:27:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "981:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "981:40:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1023:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "977:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "977:49:5"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "963:10:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1085:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1087:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1087:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1087:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1044:10:5"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1056:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1041:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1041:18:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1064:10:5"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1076:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1061:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1061:22:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1038:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1038:46:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1035:2:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1123:2:5",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1127:10:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1116:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1116:22:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1116:22:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1154:6:5"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1162:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1147:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1147:18:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1147:18:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1211:26:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1220:6:5"
                                        },
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1228:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1213:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1213:22:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1213:22:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1188:2:5"
                                          },
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "1192:2:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1184:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1184:11:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1197:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1180:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1180:20:5"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1202:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1177:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1177:33:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1174:2:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1263:6:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1271:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1259:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1259:15:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1280:2:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1284:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1276:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1276:11:5"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1289:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1246:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1246:46:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1246:46:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "1316:6:5"
                                          },
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "1324:2:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1312:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1312:15:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1329:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1308:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1308:24:5"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1334:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1301:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1301:40:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1301:40:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1350:16:5",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1360:6:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1350:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "266:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "277:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "289:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "297:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "305:6:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "313:6:5",
                            "type": ""
                          }
                        ],
                        "src": "194:1178:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1476:103:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1486:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1498:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1509:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1494:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1494:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1486:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1528:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1543:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1555:3:5",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1560:10:5",
                                            "type": "",
                                            "value": "0xffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "1551:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1551:20:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1539:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1539:33:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1521:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1521:52:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1521:52:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1445:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1456:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1467:4:5",
                            "type": ""
                          }
                        ],
                        "src": "1377:202:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1616:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1633:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1640:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1645:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1636:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1636:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1626:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1626:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1626:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1673:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1676:4:5",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1666:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1666:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1666:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1697:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1700:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1690:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1690:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1690:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1584:127:5"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let _1 := 32\n        value1 := abi_decode_t_address(add(headStart, _1))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value3, value3) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value3, value3) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value3, value3) }\n        calldatacopy(add(memPtr, _1), add(_3, _1), _4)\n        mstore(add(add(memPtr, _4), _1), value3)\n        value3 := memPtr\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
                  "id": 5,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004361003e366004610085565b610059565b6040516100509190610151565b60405180910390f35b630a85bd0160e11b949350505050565b80356001600160a01b038116811461008057600080fd5b919050565b6000806000806080858703121561009a578384fd5b6100a385610069565b935060206100b2818701610069565b935060408601359250606086013567ffffffffffffffff808211156100d5578384fd5b818801915088601f8301126100e8578384fd5b8135818111156100fa576100fa610166565b604051601f8201601f191681018501838111828210171561011d5761011d610166565b60405281815283820185018b1015610133578586fd5b81858501868301379081019093019390935250939692955090935050565b6001600160e01b031991909116815260200190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e0650ecd0dd9c64578b48c424fb63bcafc728357124c38a585ce98974ebc9c8064736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x85 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xA3 DUP6 PUSH2 0x69 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 PUSH2 0xB2 DUP2 DUP8 ADD PUSH2 0x69 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD5 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE8 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xFA JUMPI PUSH2 0xFA PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD DUP6 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x11D JUMPI PUSH2 0x11D PUSH2 0x166 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD DUP6 ADD DUP12 LT ISZERO PUSH2 0x133 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP2 DUP6 DUP6 ADD DUP7 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 PUSH6 0xECD0DD9C645 PUSH25 0xB48C424FB63BCAFC728357124C38A585CE98974EBC9C806473 PUSH16 0x6C634300080000330000000000000000 ",
              "sourceMap": "995:407:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1190:207;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1190:207:0;;;;;;:::o;14:175:5:-;84:20;;-1:-1:-1;;;;;133:31:5;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:1178::-;;;;;366:3;354:9;345:7;341:23;337:33;334:2;;;388:6;380;373:22;334:2;416:31;437:9;416:31;:::i;:::-;406:41;;466:2;487:40;523:2;512:9;508:18;487:40;:::i;:::-;477:50;;574:2;563:9;559:18;546:32;536:42;;629:2;618:9;614:18;601:32;652:18;693:2;685:6;682:14;679:2;;;714:6;706;699:22;679:2;757:6;746:9;742:22;732:32;;802:7;795:4;791:2;787:13;783:27;773:2;;829:6;821;814:22;773:2;870;857:16;892:2;888;885:10;882:2;;;898:18;;:::i;:::-;947:2;941:9;1016:2;997:13;;-1:-1:-1;;993:27:5;981:40;;977:49;;1041:18;;;1061:22;;;1038:46;1035:2;;;1087:18;;:::i;:::-;1123:2;1116:22;1147:18;;;1184:11;;;1180:20;;1177:33;-1:-1:-1;1174:2:5;;;1228:6;1220;1213:22;1174:2;1289;1284;1280;1276:11;1271:2;1263:6;1259:15;1246:46;1312:15;;;1308:24;;;1301:40;;;;-1:-1:-1;324:1048:5;;;;-1:-1:-1;324:1048:5;;-1:-1:-1;;324:1048:5:o;1377:202::-;-1:-1:-1;;;;;;1539:33:5;;;;1521:52;;1509:2;1494:18;;1476:103::o;1584:127::-;1645:10;1640:3;1636:20;1633:1;1626:31;1676:4;1673:1;1666:15;1700:4;1697:1;1690:15"
            },
            "methodIdentifiers": {
              "onERC721Received(address,address,uint256,bytes)": "150b7a02"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC721Holder.sol\":{\"keccak256\":\"0x138ffde8123533f48c93782b1c84a770c836754855eb8ce369ac144a7acec1bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c97bdab4ce7a325d7e1b5cc61f9693263789d247df8104d0262eb38f9fb905\",\"dweb:/ipfs/QmZDX9Jh7FR6rvRk1qJGYpEemfCzLQBcEsHbvvw8ncasWw\"]}},\"version\":1}"
        },
        "IERC721Receiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "onERC721Received(address,address,uint256,bytes)": "150b7a02"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721Holder.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC721Holder.sol\":{\"keccak256\":\"0x138ffde8123533f48c93782b1c84a770c836754855eb8ce369ac144a7acec1bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c97bdab4ce7a325d7e1b5cc61f9693263789d247df8104d0262eb38f9fb905\",\"dweb:/ipfs/QmZDX9Jh7FR6rvRk1qJGYpEemfCzLQBcEsHbvvw8ncasWw\"]}},\"version\":1}"
        }
      },
      "contracts/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}"
        }
      },
      "contracts/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xfa9db05dbbfc45ad2ac4e05ba5b6de325face548c07a549c06b70190d3a8d8e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17111608070f8ed682e9bc9fa935a0e2dedce81fadb4c54a445c6163b38bc74e\",\"dweb:/ipfs/QmXbAfckVcmuSee8FUGQaLD2o7nMwtoE1xp8CWagLPA1MR\"]}},\"version\":1}"
        }
      },
      "contracts/IERC721.sol": {
        "IERC721": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x486e7ce5d4f79638a587d78af78241dd176b1ba853b0e1c2a086cccf1d13d6d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11dbec61bab3d8876df013757ae9e54f70a4901fe8115fabff1e33c36e347b98\",\"dweb:/ipfs/QmWRKN35GMhoVVkoSgRc2mWLXigMZNSTwJoGdD51g4H4dX\"]}},\"version\":1}"
        }
      },
      "contracts/LockBox.sol": {
        "LockBox": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                }
              ],
              "name": "approveAsset",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "boxFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                }
              ],
              "name": "cancelLockBox",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                }
              ],
              "name": "claimAsset",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "counter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum LockBox.AssetType",
                  "name": "_assetAtype",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "_assetAaddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_assetAID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_assetAQuantity",
                  "type": "uint256"
                },
                {
                  "internalType": "enum LockBox.AssetType",
                  "name": "_assetBtype",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "_assetBaddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_assetBID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_assetBQuantity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_expiryTime",
                  "type": "uint256"
                }
              ],
              "name": "createLockBox",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_id",
                  "type": "uint256"
                }
              ],
              "name": "lockAsset",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "lockBoxInfo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "lockBoxOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "expiryTime",
                  "type": "uint256"
                },
                {
                  "internalType": "enum LockBox.Status",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "enum LockBox.AssetType",
                      "name": "assetType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "assetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetID",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetQuantity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum LockBox.LockStatus",
                      "name": "lockStatus",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum LockBox.ApprovalStatus",
                      "name": "approvalStatus",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum LockBox.ClaimStatus",
                      "name": "claimStatus",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "claimedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct LockBox.Asset",
                  "name": "assetA",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "enum LockBox.AssetType",
                      "name": "assetType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "assetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetID",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetQuantity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum LockBox.LockStatus",
                      "name": "lockStatus",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum LockBox.ApprovalStatus",
                      "name": "approvalStatus",
                      "type": "uint8"
                    },
                    {
                      "internalType": "enum LockBox.ClaimStatus",
                      "name": "claimStatus",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "claimedBy",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct LockBox.Asset",
                  "name": "assetB",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "updateFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405267016345785d8a000060015564e8d4a5100060025534801561002557600080fd5b5061376d806100356000396000f3fe6080604052600436106100915760003560e01c8063864d7e1411610059578063864d7e141461012d5780638a88cbbe1461014d578063d3c2a59214610160578063d3f29c3314610180578063f1c5797d146101a057610091565b80630a1053fb14610096578063150b7a02146100c15780631629614e146100ee57806361bc221a14610103578063758cdcf014610118575b600080fd5b3480156100a257600080fd5b506100ab6101d1565b6040516100b891906136c8565b60405180910390f35b3480156100cd57600080fd5b506100e16100dc36600461305c565b6101d7565b6040516100b8919061332c565b6101016100fc3660046131d3565b6101e7565b005b34801561010f57600080fd5b506100ab610b4a565b34801561012457600080fd5b506100ab610b50565b34801561013957600080fd5b506101016101483660046131d3565b610b56565b61010161015b36600461314f565b611231565b34801561016c57600080fd5b5061010161017b3660046131d3565b61170c565b34801561018c57600080fd5b5061010161019b3660046131d3565b6127c9565b3480156101ac57600080fd5b506101c06101bb3660046131d3565b612caf565b6040516100b89594939291906132e0565b60015481565b630a85bd0160e11b949350505050565b6000818152600360209081526040808320815160a08101835281546001600160a01b03168152600182015493810193909352600280820154919284019160ff169081111561024557634e487b7160e01b600052602160045260246000fd5b600281111561026457634e487b7160e01b600052602160045260246000fd5b8152604080516101208101909152600383018054602090930192829060ff1660028111156102a257634e487b7160e01b600052602160045260246000fd5b60028111156102c157634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff169081111561032857634e487b7160e01b600052602160045260246000fd5b600181111561034757634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff16600181111561037d57634e487b7160e01b600052602160045260246000fd5b600181111561039c57634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff1660018111156103d257634e487b7160e01b600052602160045260246000fd5b60018111156103f157634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b03166020918201529082526040805161012081019091526008840180549390920192909190829060ff16600281111561045157634e487b7160e01b600052602160045260246000fd5b600281111561047057634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff16908111156104d757634e487b7160e01b600052602160045260246000fd5b60018111156104f657634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff16600181111561052c57634e487b7160e01b600052602160045260246000fd5b600181111561054b57634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff16600181111561058157634e487b7160e01b600052602160045260246000fd5b60018111156105a057634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b031660209091015290525090506000816040015160028111156105ea57634e487b7160e01b600052602160045260246000fd5b146106105760405162461bcd60e51b81526004016106079061350b565b60405180910390fd5b806020015142106106335760405162461bcd60e51b815260040161060790613665565b8060600151602001516001600160a01b0316336001600160a01b031614156108c1576000816060015160a00151600181111561067f57634e487b7160e01b600052602160045260246000fd5b1461069c5760405162461bcd60e51b8152600401610607906134d4565b600060608201515160028111156106c357634e487b7160e01b600052602160045260246000fd5b1415610762578060600151604001516001600160a01b03166323b872dd33308460600151606001516040518463ffffffff1660e01b8152600401610709939291906132a3565b600060405180830381600087803b15801561072357600080fd5b505af1158015610737573d6000803e3d6000fd5b505050600083815260036020526040902060070180546001925060ff191682805b02179055506108bc565b6001606082015151600281111561078957634e487b7160e01b600052602160045260246000fd5b141561084357606081015160408082015160809092015190516323b872dd60e01b81526001600160a01b03909216916323b872dd916107ce91339130916004016132a3565b602060405180830381600087803b1580156107e857600080fd5b505af11580156107fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108209190613128565b50600082815260036020526040902060070180546001919060ff19168280610758565b6002606082015151600281111561086a57634e487b7160e01b600052602160045260246000fd5b14156108bc578060600151608001513410156108985760405162461bcd60e51b815260040161060790613691565b600082815260036020526040902060070180546001919060ff191682805b02179055505b610b46565b60008281526003602052604081206008018054610100600160a81b0319163361010002179055816080015160a00151600181111561090f57634e487b7160e01b600052602160045260246000fd5b1461092c5760405162461bcd60e51b8152600401610607906134d4565b6000608082015151600281111561095357634e487b7160e01b600052602160045260246000fd5b14156109eb57608081015160408082015160609092015190516323b872dd60e01b81526001600160a01b03909216916323b872dd9161099891339130916004016132a3565b600060405180830381600087803b1580156109b257600080fd5b505af11580156109c6573d6000803e3d6000fd5b5050506000838152600360205260409020600c0180546001925060ff191682806108b6565b60016080820151516002811115610a1257634e487b7160e01b600052602160045260246000fd5b1415610acd578060800151604001516001600160a01b03166323b872dd33308460800151608001516040518463ffffffff1660e01b8152600401610a58939291906132a3565b602060405180830381600087803b158015610a7257600080fd5b505af1158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaa9190613128565b506000828152600360205260409020600c0180546001919060ff191682806108b6565b60026080820151516002811115610af457634e487b7160e01b600052602160045260246000fd5b1415610b4657806080015160800151341015610b225760405162461bcd60e51b815260040161060790613691565b6000828152600360205260409020600c0180546001919060ff191682805b02179055505b5050565b60005481565b60025481565b6000818152600360209081526040808320815160a08101835281546001600160a01b03168152600182015493810193909352600280820154919284019160ff1690811115610bb457634e487b7160e01b600052602160045260246000fd5b6002811115610bd357634e487b7160e01b600052602160045260246000fd5b8152604080516101208101909152600383018054602090930192829060ff166002811115610c1157634e487b7160e01b600052602160045260246000fd5b6002811115610c3057634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff1690811115610c9757634e487b7160e01b600052602160045260246000fd5b6001811115610cb657634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff166001811115610cec57634e487b7160e01b600052602160045260246000fd5b6001811115610d0b57634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff166001811115610d4157634e487b7160e01b600052602160045260246000fd5b6001811115610d6057634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b03166020918201529082526040805161012081019091526008840180549390920192909190829060ff166002811115610dc057634e487b7160e01b600052602160045260246000fd5b6002811115610ddf57634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff1690811115610e4657634e487b7160e01b600052602160045260246000fd5b6001811115610e6557634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff166001811115610e9b57634e487b7160e01b600052602160045260246000fd5b6001811115610eba57634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff166001811115610ef057634e487b7160e01b600052602160045260246000fd5b6001811115610f0f57634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b03166020909101529052509050600081604001516002811115610f5957634e487b7160e01b600052602160045260246000fd5b14610f765760405162461bcd60e51b81526004016106079061350b565b80602001514210610f995760405162461bcd60e51b8152600401610607906135d5565b8060600151602001516001600160a01b0316336001600160a01b03161480610fda57508060800151602001516001600160a01b0316336001600160a01b0316145b610ff65760405162461bcd60e51b815260040161060790613542565b8060600151602001516001600160a01b0316336001600160a01b03161415611111576001816060015160a00151600181111561104257634e487b7160e01b600052602160045260246000fd5b1461105f5760405162461bcd60e51b815260040161060790613341565b6000816060015160c00151600181111561108957634e487b7160e01b600052602160045260246000fd5b146110a65760405162461bcd60e51b81526004016106079061359e565b6000828152600360205260409020600701805461ff001916610100179055608081015160c00151600190818111156110ee57634e487b7160e01b600052602160045260246000fd5b1415611111576000828152600360205260409020600201805460ff191660011790555b8060800151602001516001600160a01b0316336001600160a01b03161415610b46576001816080015160a00151600181111561115d57634e487b7160e01b600052602160045260246000fd5b1461117a5760405162461bcd60e51b815260040161060790613341565b6000816080015160c0015160018111156111a457634e487b7160e01b600052602160045260246000fd5b146111c15760405162461bcd60e51b81526004016106079061359e565b6000828152600360205260409020600c01805461ff001916610100179055606081015160c001516001908181111561120957634e487b7160e01b600052602160045260246000fd5b1415610b4657600082815260036020526040902060020180546001919060ff19168280610b40565b6001543410156112535760405162461bcd60e51b81526004016106079061336e565b600080549080611262836136d1565b919050555060006040518061012001604052808b600281111561129557634e487b7160e01b600052602160045260246000fd5b81523360208201526001600160a01b038b166040820152606081018a90526080810189905260a00160008152602001600081526020016000815260200160006001600160a01b03168152509050600060405180610120016040528088600281111561131057634e487b7160e01b600052602160045260246000fd5b815260200160006001600160a01b03168152602001876001600160a01b031681526020018681526020018581526020016000600181111561136157634e487b7160e01b600052602160045260246000fd5b81526000602080830182905260408084018390526060938401839052805160a081018252338152808301898152818301858152958201899052608082018790528454855260039093529220825181546001600160a01b0319166001600160a01b039091161781559051600180830191909155925160028083018054969750939586959394929360ff1990911691849081111561140d57634e487b7160e01b600052602160045260246000fd5b021790555060608201518051600383018054909190829060ff1916600183600281111561144a57634e487b7160e01b600052602160045260246000fd5b021790555060208201518154610100600160a81b0319166101006001600160a01b03928316021782556040830151600180840180546001600160a01b0319169290931691909117909155606083015160028301556080830151600383015560a08301516004830180549192909160ff19169083818111156114db57634e487b7160e01b600052602160045260246000fd5b021790555060c082015160048201805461ff00191661010083600181111561151357634e487b7160e01b600052602160045260246000fd5b021790555060e082015160048201805462ff000019166201000083600181111561154d57634e487b7160e01b600052602160045260246000fd5b02179055506101009190910151600490910180546001600160a01b039092166301000000026301000000600160b81b031990921691909117905560808201518051600883018054909190829060ff191660018360028111156115bf57634e487b7160e01b600052602160045260246000fd5b021790555060208201518154610100600160a81b0319166101006001600160a01b03928316021782556040830151600180840180546001600160a01b0319169290931691909117909155606083015160028301556080830151600383015560a08301516004830180549192909160ff191690838181111561165057634e487b7160e01b600052602160045260246000fd5b021790555060c082015160048201805461ff00191661010083600181111561168857634e487b7160e01b600052602160045260246000fd5b021790555060e082015160048201805462ff00001916620100008360018111156116c257634e487b7160e01b600052602160045260246000fd5b02179055506101009190910151600490910180546001600160a01b039092166301000000026301000000600160b81b03199092169190911790555050505050505050505050505050565b6000818152600360209081526040808320815160a08101835281546001600160a01b03168152600182015493810193909352600280820154919284019160ff169081111561176a57634e487b7160e01b600052602160045260246000fd5b600281111561178957634e487b7160e01b600052602160045260246000fd5b8152604080516101208101909152600383018054602090930192829060ff1660028111156117c757634e487b7160e01b600052602160045260246000fd5b60028111156117e657634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff169081111561184d57634e487b7160e01b600052602160045260246000fd5b600181111561186c57634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff1660018111156118a257634e487b7160e01b600052602160045260246000fd5b60018111156118c157634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff1660018111156118f757634e487b7160e01b600052602160045260246000fd5b600181111561191657634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b03166020918201529082526040805161012081019091526008840180549390920192909190829060ff16600281111561197657634e487b7160e01b600052602160045260246000fd5b600281111561199557634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff16908111156119fc57634e487b7160e01b600052602160045260246000fd5b6001811115611a1b57634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff166001811115611a5157634e487b7160e01b600052602160045260246000fd5b6001811115611a7057634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff166001811115611aa657634e487b7160e01b600052602160045260246000fd5b6001811115611ac557634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b03166020909101529052509050600281604001516002811115611b0f57634e487b7160e01b600052602160045260246000fd5b1415611b2d5760405162461bcd60e51b815260040161060790613601565b8060600151602001516001600160a01b0316336001600160a01b03161480611b6e57508060800151602001516001600160a01b0316336001600160a01b0316145b611b8a5760405162461bcd60e51b815260040161060790613542565b8060600151602001516001600160a01b0316336001600160a01b031614156121cd57600181604001516002811115611bd257634e487b7160e01b600052602160045260246000fd5b1415611ec3576000816080015160e001516001811115611c0257634e487b7160e01b600052602160045260246000fd5b14611c1f5760405162461bcd60e51b815260040161060790613400565b6001816080015160a001516001811115611c4957634e487b7160e01b600052602160045260246000fd5b14611c665760405162461bcd60e51b81526004016106079061346e565b6001816080015160c001516001811115611c9057634e487b7160e01b600052602160045260246000fd5b14611cad5760405162461bcd60e51b81526004016106079061362e565b6000828152600360205260408120600c0180546301000000600160b81b031916336301000000021762ff00001916620100001790556080820151516002811115611d0757634e487b7160e01b600052602160045260246000fd5b1415611d8357608081015160408082015160609092015190516323b872dd60e01b81526001600160a01b03909216916323b872dd91611d4c91309133916004016132a3565b600060405180830381600087803b158015611d6657600080fd5b505af1158015611d7a573d6000803e3d6000fd5b50505050611ebe565b60016080820151516002811115611daa57634e487b7160e01b600052602160045260246000fd5b1415611e46578060800151604001516001600160a01b031663a9059cbb338360800151608001516040518363ffffffff1660e01b8152600401611dee9291906132c7565b602060405180830381600087803b158015611e0857600080fd5b505af1158015611e1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e409190613128565b50611ebe565b60026080820151516002811115611e6d57634e487b7160e01b600052602160045260246000fd5b1415611ebe578060600151602001516001600160a01b03166108fc8260800151608001519081150290604051600060405180830381858888f19350505050158015611ebc573d6000803e3d6000fd5b505b6121cd565b600281604001516002811115611ee957634e487b7160e01b600052602160045260246000fd5b14156121cd576000816060015160e001516001811115611f1957634e487b7160e01b600052602160045260246000fd5b14611f365760405162461bcd60e51b815260040161060790613567565b6001816060015160a001516001811115611f6057634e487b7160e01b600052602160045260246000fd5b14611f7d5760405162461bcd60e51b8152600401610607906133d1565b6001816060015160c001516001811115611fa757634e487b7160e01b600052602160045260246000fd5b14611fc45760405162461bcd60e51b815260040161060790613437565b600082815260036020526040812060070180546301000000600160b81b031916336301000000021762ff0000191662010000179055606082015151600281111561201e57634e487b7160e01b600052602160045260246000fd5b141561209b578060600151604001516001600160a01b03166323b872dd30338460600151606001516040518463ffffffff1660e01b8152600401612064939291906132a3565b600060405180830381600087803b15801561207e57600080fd5b505af1158015612092573d6000803e3d6000fd5b505050506121cd565b600160608201515160028111156120c257634e487b7160e01b600052602160045260246000fd5b1415612158578060600151604001516001600160a01b031663a9059cbb338360600151608001516040518363ffffffff1660e01b81526004016121069291906132c7565b602060405180830381600087803b15801561212057600080fd5b505af1158015612134573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ebc9190613128565b6002606082015151600281111561217f57634e487b7160e01b600052602160045260246000fd5b14156121cd57606081015160208101516080909101516040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156121cb573d6000803e3d6000fd5b505b8060800151602001516001600160a01b0316336001600160a01b03161415610b465760018160400151600281111561221557634e487b7160e01b600052602160045260246000fd5b1415612506576000816060015160e00151600181111561224557634e487b7160e01b600052602160045260246000fd5b146122625760405162461bcd60e51b815260040161060790613567565b6001816060015160a00151600181111561228c57634e487b7160e01b600052602160045260246000fd5b146122a95760405162461bcd60e51b8152600401610607906133d1565b6001816060015160c0015160018111156122d357634e487b7160e01b600052602160045260246000fd5b146122f05760405162461bcd60e51b815260040161060790613437565b600082815260036020526040812060070180546301000000600160b81b031916336301000000021762ff0000191662010000179055606082015151600281111561234a57634e487b7160e01b600052602160045260246000fd5b14156123c7578060600151604001516001600160a01b03166323b872dd30338460600151606001516040518463ffffffff1660e01b8152600401612390939291906132a3565b600060405180830381600087803b1580156123aa57600080fd5b505af11580156123be573d6000803e3d6000fd5b505050506108bc565b600160608201515160028111156123ee57634e487b7160e01b600052602160045260246000fd5b141561248a578060600151604001516001600160a01b031663a9059cbb338360600151608001516040518363ffffffff1660e01b81526004016124329291906132c7565b602060405180830381600087803b15801561244c57600080fd5b505af1158015612460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124849190613128565b506108bc565b600260608201515160028111156124b157634e487b7160e01b600052602160045260246000fd5b14156108bc578060800151602001516001600160a01b03166108fc8260600151608001519081150290604051600060405180830381858888f19350505050158015612500573d6000803e3d6000fd5b50610b46565b60028160400151600281111561252c57634e487b7160e01b600052602160045260246000fd5b1415610b46576000816080015160e00151600181111561255c57634e487b7160e01b600052602160045260246000fd5b146125795760405162461bcd60e51b815260040161060790613400565b6001816080015160a0015160018111156125a357634e487b7160e01b600052602160045260246000fd5b146125c05760405162461bcd60e51b81526004016106079061346e565b6000828152600360205260408120600c01805462ff0000191662010000176301000000600160b81b03191633630100000002179055608082015151600281111561261a57634e487b7160e01b600052602160045260246000fd5b141561269657608081015160408082015160609092015190516323b872dd60e01b81526001600160a01b03909216916323b872dd9161265f91309133916004016132a3565b600060405180830381600087803b15801561267957600080fd5b505af115801561268d573d6000803e3d6000fd5b50505050610b46565b600160808201515160028111156126bd57634e487b7160e01b600052602160045260246000fd5b1415612753578060800151604001516001600160a01b031663a9059cbb338360800151608001516040518363ffffffff1660e01b81526004016127019291906132c7565b602060405180830381600087803b15801561271b57600080fd5b505af115801561272f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125009190613128565b6002608082015151600281111561277a57634e487b7160e01b600052602160045260246000fd5b1415610b465760808082015160208101519101516040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156127c4573d6000803e3d6000fd5b505050565b6000818152600360209081526040808320815160a08101835281546001600160a01b03168152600182015493810193909352600280820154919284019160ff169081111561282757634e487b7160e01b600052602160045260246000fd5b600281111561284657634e487b7160e01b600052602160045260246000fd5b8152604080516101208101909152600383018054602090930192829060ff16600281111561288457634e487b7160e01b600052602160045260246000fd5b60028111156128a357634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff169081111561290a57634e487b7160e01b600052602160045260246000fd5b600181111561292957634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff16600181111561295f57634e487b7160e01b600052602160045260246000fd5b600181111561297e57634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff1660018111156129b457634e487b7160e01b600052602160045260246000fd5b60018111156129d357634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b03166020918201529082526040805161012081019091526008840180549390920192909190829060ff166002811115612a3357634e487b7160e01b600052602160045260246000fd5b6002811115612a5257634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff1690811115612ab957634e487b7160e01b600052602160045260246000fd5b6001811115612ad857634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff166001811115612b0e57634e487b7160e01b600052602160045260246000fd5b6001811115612b2d57634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff166001811115612b6357634e487b7160e01b600052602160045260246000fd5b6001811115612b8257634e487b7160e01b600052602160045260246000fd5b8152600491909101546001600160a01b0363010000009091048116602090920191909152915282519293509190911633149050612bd15760405162461bcd60e51b815260040161060790613542565b600081604001516002811115612bf757634e487b7160e01b600052602160045260246000fd5b14612c145760405162461bcd60e51b81526004016106079061339a565b6000816060015160c001516001811115612c3e57634e487b7160e01b600052602160045260246000fd5b148015612c7257506000816080015160c001516001811115612c7057634e487b7160e01b600052602160045260246000fd5b145b612c8e5760405162461bcd60e51b81526004016106079061349d565b60008281526003602052604090206002908101805460ff1916600183610b40565b600360208190526000918252604091829020805460018201546002808401548651610120810190975294840180546001600160a01b0390941696929560ff90811695949192849290911690811115612d1757634e487b7160e01b600052602160045260246000fd5b6002811115612d3657634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff1690811115612d9d57634e487b7160e01b600052602160045260246000fd5b6001811115612dbc57634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff166001811115612df257634e487b7160e01b600052602160045260246000fd5b6001811115612e1157634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff166001811115612e4757634e487b7160e01b600052602160045260246000fd5b6001811115612e6657634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b0316602090910152604080516101208101909152600883018054929392829060ff166002811115612ebe57634e487b7160e01b600052602160045260246000fd5b6002811115612edd57634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff1690811115612f4457634e487b7160e01b600052602160045260246000fd5b6001811115612f6357634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff166001811115612f9957634e487b7160e01b600052602160045260246000fd5b6001811115612fb857634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff166001811115612fee57634e487b7160e01b600052602160045260246000fd5b600181111561300d57634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b0316602090910152905085565b80356001600160a01b038116811461304857600080fd5b919050565b80356003811061304857600080fd5b60008060008060808587031215613071578384fd5b61307a85613031565b93506020613089818701613031565b935060408601359250606086013567ffffffffffffffff808211156130ac578384fd5b818801915088601f8301126130bf578384fd5b8135818111156130d1576130d161370e565b604051601f8201601f19168101850183811182821017156130f4576130f461370e565b60405281815283820185018b101561310a578586fd5b81858501868301379081019093019390935250939692955090935050565b600060208284031215613139578081fd5b81518015158114613148578182fd5b9392505050565b60008060008060008060008060006101208a8c03121561316d578485fd5b6131768a61304d565b985061318460208b01613031565b975060408a0135965060608a013595506131a060808b0161304d565b94506131ae60a08b01613031565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b6000602082840312156131e4578081fd5b5035919050565b6001600160a01b03169052565b60028110613208576132086136f8565b9052565b805161321781613724565b80835250602081015160018060a01b0380821660208501528060408401511660408501525050606081015160608301526080810151608083015260a081015161326360a08401826131f8565b5060c081015161327660c08401826131f8565b5060e081015161328960e08401826131f8565b506101008082015161329d828501826131eb565b50505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0386168152602081018590526102a0810161330185613724565b846040830152613314606083018561320c565b61332261018083018461320c565b9695505050505050565b6001600160e01b031991909116815260200190565b602080825260139082015272105cdcd95d081a59081b9bdd081b1bd8dad959606a1b604082015260600190565b602080825260129082015271506c6561736520706179207468652066656560701b604082015260600190565b6020808252601e908201527f4c6f636b626f78206973206e6f742070656e64696e6720616e796d6f72650000604082015260600190565b602080825260159082015274105cdcd95d0810481a5cc81b9bdd081b1bd8dad959605a1b604082015260600190565b6020808252601a908201527f4173736574204220697320616c726561647920636c61696d6564000000000000604082015260600190565b60208082526017908201527f41737365742041206973206e6f7420617070726f766564000000000000000000604082015260600190565b602080825260159082015274105cdcd95d0810881a5cc81b9bdd081b1bd8dad959605a1b604082015260600190565b6020808252601d908201527f43616e6e6f742063616e63656c20746865206c6f636b626f78206e6f77000000604082015260600190565b60208082526017908201527f417373657420697320616c7265616479206c6f636b6564000000000000000000604082015260600190565b6020808252601e908201527f4c6f636b426f78206973206e6f742070656e64696e6720616e796d6f72650000604082015260600190565b6020808252600b908201526a139bdd08185b1b1bddd95960aa1b604082015260600190565b6020808252601a908201527f4173736574204120697320616c726561647920636c61696d6564000000000000604082015260600190565b60208082526019908201527f417373657420697320616c726561647920617070726f76656400000000000000604082015260600190565b602080825260129082015271131bd8dad89bde081a5cc8195e1c1a5c995960721b604082015260600190565b602080825260139082015272131bd8dad09bde081a5cc818d85b98d95b1959606a1b604082015260600190565b60208082526017908201527f41737365742042206973206e6f7420617070726f766564000000000000000000604082015260600190565b6020808252601290820152711b1bd8dad89bde081a5cc8195e1c1a5c995960721b604082015260600190565b6020808252601a908201527f496e73756666696369656e74206c6f636b696e672066756e6473000000000000604082015260600190565b90815260200190565b60006000198214156136f157634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60038110613734576137346136f8565b5056fea2646970667358221220f9fcb3142d8c8119ca4f0eb8005d0be3a1b8c58dcf59a419afa15bfa1d6058b464736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x16345785D8A0000 PUSH1 0x1 SSTORE PUSH5 0xE8D4A51000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x376D DUP1 PUSH2 0x35 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x864D7E14 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x864D7E14 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x8A88CBBE EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xD3C2A592 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xD3F29C33 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xF1C5797D EQ PUSH2 0x1A0 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xA1053FB EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x1629614E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x758CDCF0 EQ PUSH2 0x118 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x36C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x305C JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x332C JUMP JUMPDEST PUSH2 0x101 PUSH2 0xFC CALLDATASIZE PUSH1 0x4 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xB4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xB50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x101 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x314F JUMP JUMPDEST PUSH2 0x1231 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x170C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x27C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x245 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x264 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x328 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x347 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x37D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x39C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP5 ADD DUP1 SLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x451 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x470 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x4D7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x52C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x54B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x581 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5A0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x350B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD TIMESTAMP LT PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3665 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x8C1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x67F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x34D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x6C3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x762 JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x737 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP1 JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x789 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x843 JUMPI PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x7CE SWAP2 CALLER SWAP2 ADDRESS SWAP2 PUSH1 0x4 ADD PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x820 SWAP2 SWAP1 PUSH2 0x3128 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x86A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x8BC JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x80 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3691 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 MUL OR SWAP1 SSTORE DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x90F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x34D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x953 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x9EB JUMPI PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x998 SWAP2 CALLER SWAP2 ADDRESS SWAP2 PUSH1 0x4 ADD PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD DUP1 SLOAD PUSH1 0x1 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP1 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA12 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xACD JUMPI DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x80 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA58 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x3128 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAF4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xB46 JUMPI DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x80 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3691 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xBB4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBD3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC11 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC30 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xC97 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xCB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xCEC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD0B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD41 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP5 ADD DUP1 SLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDC0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDDF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xE46 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE65 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE9B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xEBA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xEF0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF0F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF59 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0xF76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x350B JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD TIMESTAMP LT PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x35D5 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xFDA JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xFF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3542 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1111 JUMPI PUSH1 0x1 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1042 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x105F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3341 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1089 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x10A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x359E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 SWAP1 DUP2 DUP2 GT ISZERO PUSH2 0x10EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1111 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB46 JUMPI PUSH1 0x1 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x115D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x117A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3341 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11A4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x11C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x359E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 SWAP1 DUP2 DUP2 GT ISZERO PUSH2 0x1209 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xB46 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x1253 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x336E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP1 PUSH2 0x1262 DUP4 PUSH2 0x36D1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1295 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1310 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1361 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE DUP1 DUP4 ADD DUP10 DUP2 MSTORE DUP2 DUP4 ADD DUP6 DUP2 MSTORE SWAP6 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP8 SWAP1 MSTORE DUP5 SLOAD DUP6 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP1 DUP4 ADD DUP1 SLOAD SWAP7 SWAP8 POP SWAP4 SWAP6 DUP7 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP2 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x140D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x144A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND MUL OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 DUP1 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF NOT AND SWAP1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x14DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1513 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x154D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x100 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH4 0x1000000 MUL PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH1 0x8 DUP4 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND MUL OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 DUP1 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF NOT AND SWAP1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x1650 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1688 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x16C2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x100 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH4 0x1000000 MUL PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x176A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1789 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x184D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x186C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1916 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP5 ADD DUP1 SLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1976 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1995 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x19FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A1B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A51 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A70 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1AA6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1AC5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B0F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1B2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3601 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1B6E JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1B8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3542 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x21CD JUMPI PUSH1 0x1 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1BD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1EC3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C02 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1C1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3400 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C49 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1C66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x346E JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C90 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1CAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x362E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xC ADD DUP1 SLOAD PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND CALLER PUSH4 0x1000000 MUL OR PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D07 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1D83 JUMPI PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x1D4C SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1E46 JUMPI DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DEE SWAP3 SWAP2 SWAP1 PUSH2 0x32C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E40 SWAP2 SWAP1 PUSH2 0x3128 JUMP JUMPDEST POP PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E6D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1EBE JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 PUSH1 0x80 ADD MLOAD PUSH1 0x80 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1EBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1EE9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x21CD JUMPI PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F19 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1F36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3567 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1F7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x33D1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1FA7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1FC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3437 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND CALLER PUSH4 0x1000000 MUL OR PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x201E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x209B JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2064 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2092 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x20C2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2158 JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2106 SWAP3 SWAP2 SWAP1 PUSH2 0x32C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2134 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EBC SWAP2 SWAP1 PUSH2 0x3128 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x217F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x21CD JUMPI PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x21CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB46 JUMPI PUSH1 0x1 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2215 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2506 JUMPI PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2245 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2262 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3567 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x228C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x22A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x33D1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x22D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x22F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3437 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND CALLER PUSH4 0x1000000 MUL OR PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x234A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x23C7 JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2390 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x23EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x248A JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2432 SWAP3 SWAP2 SWAP1 PUSH2 0x32C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x244C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2460 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2484 SWAP2 SWAP1 PUSH2 0x3128 JUMP JUMPDEST POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x24B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x8BC JUMPI DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0x80 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2500 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x252C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xB46 JUMPI PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x255C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3400 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x25A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x25C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x346E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xC ADD DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND CALLER PUSH4 0x1000000 MUL OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x261A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2696 JUMPI PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x265F SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x268D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x26BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2753 JUMPI DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2701 SWAP3 SWAP2 SWAP1 PUSH2 0x32C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x271B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x272F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2500 SWAP2 SWAP1 PUSH2 0x3128 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x277A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xB46 JUMPI PUSH1 0x80 DUP1 DUP3 ADD MLOAD PUSH1 0x20 DUP2 ADD MLOAD SWAP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x27C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x2827 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2846 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2884 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x28A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x290A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2929 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x295F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x297E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x29B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x29D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP5 ADD DUP1 SLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A33 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A52 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x2AB9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2AD8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B0E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B63 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B82 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH4 0x1000000 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MSTORE DUP3 MLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 SWAP2 AND CALLER EQ SWAP1 POP PUSH2 0x2BD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2BF7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2C14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x339A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2C3E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0x2C72 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2C70 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST PUSH2 0x2C8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x349D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP1 DUP5 ADD SLOAD DUP7 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP8 MSTORE SWAP5 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP7 SWAP3 SWAP6 PUSH1 0xFF SWAP1 DUP2 AND SWAP6 SWAP5 SWAP2 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0x2D17 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2D36 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x2D9D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2DBC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2DF2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2E11 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2E47 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2E66 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2EBE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2EDD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x2F44 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2F63 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2F99 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2FB8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2FEE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x300D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 POP DUP6 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3048 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x3048 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3071 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x307A DUP6 PUSH2 0x3031 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 PUSH2 0x3089 DUP2 DUP8 ADD PUSH2 0x3031 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x30AC JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30BF JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x30D1 JUMPI PUSH2 0x30D1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD DUP6 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x30F4 JUMPI PUSH2 0x30F4 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD DUP6 ADD DUP12 LT ISZERO PUSH2 0x310A JUMPI DUP6 DUP7 REVERT JUMPDEST DUP2 DUP6 DUP6 ADD DUP7 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3139 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3148 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x316D JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x3176 DUP11 PUSH2 0x304D JUMP JUMPDEST SWAP9 POP PUSH2 0x3184 PUSH1 0x20 DUP12 ADD PUSH2 0x3031 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH2 0x31A0 PUSH1 0x80 DUP12 ADD PUSH2 0x304D JUMP JUMPDEST SWAP5 POP PUSH2 0x31AE PUSH1 0xA0 DUP12 ADD PUSH2 0x3031 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP3 POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x100 DUP11 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31E4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x3208 JUMPI PUSH2 0x3208 PUSH2 0x36F8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3217 DUP2 PUSH2 0x3724 JUMP JUMPDEST DUP1 DUP4 MSTORE POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE DUP1 PUSH1 0x40 DUP5 ADD MLOAD AND PUSH1 0x40 DUP6 ADD MSTORE POP POP PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x3263 PUSH1 0xA0 DUP5 ADD DUP3 PUSH2 0x31F8 JUMP JUMPDEST POP PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x3276 PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0x31F8 JUMP JUMPDEST POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x3289 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x31F8 JUMP JUMPDEST POP PUSH2 0x100 DUP1 DUP3 ADD MLOAD PUSH2 0x329D DUP3 DUP6 ADD DUP3 PUSH2 0x31EB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH2 0x2A0 DUP2 ADD PUSH2 0x3301 DUP6 PUSH2 0x3724 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3314 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x320C JUMP JUMPDEST PUSH2 0x3322 PUSH2 0x180 DUP4 ADD DUP5 PUSH2 0x320C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x105CDCD95D081A59081B9BDD081B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x506C65617365207061792074686520666565 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6F636B626F78206973206E6F742070656E64696E6720616E796D6F72650000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x105CDCD95D0810481A5CC81B9BDD081B1BD8DAD959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4173736574204220697320616C726561647920636C61696D6564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x41737365742041206973206E6F7420617070726F766564000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x105CDCD95D0810881A5CC81B9BDD081B1BD8DAD959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616E63656C20746865206C6F636B626F78206E6F77000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x417373657420697320616C7265616479206C6F636B6564000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6F636B426F78206973206E6F742070656E64696E6720616E796D6F72650000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x139BDD08185B1B1BDDD959 PUSH1 0xAA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4173736574204120697320616C726561647920636C61696D6564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x417373657420697320616C726561647920617070726F76656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x131BD8DAD89BDE081A5CC8195E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x131BD8DAD09BDE081A5CC818D85B98D95B1959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x41737365742042206973206E6F7420617070726F766564000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x1B1BD8DAD89BDE081A5CC8195E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C6F636B696E672066756E6473000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x36F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3734 JUMPI PUSH2 0x3734 PUSH2 0x36F8 JUMP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xFC 0xB3 EQ 0x2D DUP13 DUP2 NOT 0xCA 0x4F 0xE 0xB8 STOP 0x5D SIGNEXTEND 0xE3 LOG1 0xB8 0xC5 DUP14 0xCF MSIZE LOG4 NOT 0xAF LOG1 JUMPDEST STATICCALL SAR PUSH1 0x58 0xB4 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "145:18123:4:-:0;;;234:9;213:30;;274:14;250:38;;145:18123;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:12803:5",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:5",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "65:124:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "75:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "97:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "84:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "84:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "75:5:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "167:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "176:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "179:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "169:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "169:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "169:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "126:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "137:5:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "152:3:5",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "157:1:5",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "148:3:5"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "148:11:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "161:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "144:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "144:19:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "133:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "133:31:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "123:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "123:42:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "116:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "116:50:5"
                              },
                              "nodeType": "YulIf",
                              "src": "113:2:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "44:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "55:5:5",
                            "type": ""
                          }
                        ],
                        "src": "14:175:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "253:94:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "263:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "285:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "272:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "272:20:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "263:5:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "325:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "334:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "337:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "327:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "327:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "327:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "314:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "321:1:5",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "311:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "311:12:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "304:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "304:20:5"
                              },
                              "nodeType": "YulIf",
                              "src": "301:2:5"
                            }
                          ]
                        },
                        "name": "abi_decode_t_enum$_AssetType",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "232:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "243:5:5",
                            "type": ""
                          }
                        ],
                        "src": "194:153:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "482:1048:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "529:26:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "538:6:5"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "546:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "531:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "531:22:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "531:22:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "503:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "512:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "499:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "499:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "524:3:5",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "495:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "495:33:5"
                              },
                              "nodeType": "YulIf",
                              "src": "492:2:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "564:41:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "595:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "574:20:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "574:31:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "564:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "614:12:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "624:2:5",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "618:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "635:50:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "670:9:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "681:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "666:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "666:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "645:20:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "645:40:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "635:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "694:42:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "721:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "732:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "717:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "717:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "704:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "704:32:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "694:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "745:46:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "776:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "787:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "772:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "772:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "759:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "759:32:5"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "749:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "800:28:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "810:18:5",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "804:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "855:26:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "864:6:5"
                                        },
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "872:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "857:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "857:22:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "857:22:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "843:6:5"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "851:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "840:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "840:14:5"
                              },
                              "nodeType": "YulIf",
                              "src": "837:2:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "890:32:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "904:9:5"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "915:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "900:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "900:22:5"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "894:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "970:26:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "979:6:5"
                                        },
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "987:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "972:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "972:22:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "972:22:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "949:2:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "953:4:5",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "945:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "945:13:5"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "960:7:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "941:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "941:27:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "934:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "934:35:5"
                              },
                              "nodeType": "YulIf",
                              "src": "931:2:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1005:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1028:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1015:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1015:16:5"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "1009:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1054:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1056:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1056:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1056:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1046:2:5"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1050:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1043:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1043:10:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1040:2:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1085:23:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1105:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1099:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1099:9:5"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1089:6:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1117:67:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1143:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "_4",
                                                "nodeType": "YulIdentifier",
                                                "src": "1159:2:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1163:4:5",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "1155:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1155:13:5"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1174:2:5",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "1170:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1170:7:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1151:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1151:27:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1139:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1139:40:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1181:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1135:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1135:49:5"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1121:10:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1243:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1245:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1245:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1245:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1202:10:5"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1214:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1199:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1199:18:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1222:10:5"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1234:6:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1219:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1219:22:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1196:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1196:46:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1193:2:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1281:2:5",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1285:10:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1274:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1274:22:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1274:22:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1312:6:5"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1320:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1305:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1305:18:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1305:18:5"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1369:26:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1378:6:5"
                                        },
                                        {
                                          "name": "value3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1386:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1371:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1371:22:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1371:22:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1346:2:5"
                                          },
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "1350:2:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1342:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1342:11:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1355:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1338:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1338:20:5"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1360:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1335:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1335:33:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1332:2:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1421:6:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1429:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1417:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1417:15:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1438:2:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1442:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1434:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1434:11:5"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1447:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1404:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1404:46:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1404:46:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "1474:6:5"
                                          },
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "1482:2:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1470:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1470:15:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1487:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1466:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1466:24:5"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1492:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1459:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1459:40:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1459:40:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1508:16:5",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1518:6:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1508:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "424:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "435:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "447:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "455:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "463:6:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "471:6:5",
                            "type": ""
                          }
                        ],
                        "src": "352:1178:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1613:219:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1659:26:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1668:6:5"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1676:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1661:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1661:22:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1661:22:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1634:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1643:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1630:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1630:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1655:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1626:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1626:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1623:2:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1694:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1713:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1707:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1707:16:5"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1698:5:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1776:26:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1785:6:5"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1793:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1778:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1778:22:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1778:22:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1745:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "1766:5:5"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "1759:6:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1759:13:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1752:6:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1752:21:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1742:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1742:32:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1735:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1735:40:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1732:2:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1811:15:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1821:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1811:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1579:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1590:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1602:6:5",
                            "type": ""
                          }
                        ],
                        "src": "1535:297:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2069:582:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2116:26:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2125:6:5"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2133:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2118:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2118:22:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2118:22:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2090:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2099:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2086:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2086:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2111:3:5",
                                    "type": "",
                                    "value": "288"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2082:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2082:33:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2079:2:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2151:49:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2190:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_enum$_AssetType",
                                  "nodeType": "YulIdentifier",
                                  "src": "2161:28:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2161:39:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2151:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2209:50:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2244:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2255:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2240:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2240:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2219:20:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2219:40:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2209:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2268:42:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2295:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2306:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2291:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2291:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2278:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2278:32:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2268:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2319:42:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2346:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2357:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2342:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2342:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2329:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2329:32:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2319:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2370:59:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2413:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2424:3:5",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2409:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2409:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_enum$_AssetType",
                                  "nodeType": "YulIdentifier",
                                  "src": "2380:28:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2380:49:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2370:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2438:51:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2473:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2484:3:5",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2469:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2469:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2448:20:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2448:41:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "2438:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2498:43:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2525:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2536:3:5",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2521:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2521:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2508:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2508:33:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value6",
                                  "nodeType": "YulIdentifier",
                                  "src": "2498:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2550:43:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2577:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2588:3:5",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2573:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2573:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2560:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2560:33:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2550:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2602:43:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2629:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2640:3:5",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2625:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2625:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2612:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2612:33:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2602:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_enum$_AssetType_$290t_addresst_uint256t_uint256t_enum$_AssetType_$290t_addresst_uint256t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1971:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1982:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1994:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2002:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2010:6:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2018:6:5",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "2026:6:5",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "2034:6:5",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "2042:6:5",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "2050:6:5",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "2058:6:5",
                            "type": ""
                          }
                        ],
                        "src": "1837:814:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2726:120:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2772:26:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2781:6:5"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2789:6:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2774:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2774:22:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2774:22:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2747:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2756:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2743:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2743:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2768:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2739:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2739:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "2736:2:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2807:33:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2830:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2817:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2817:23:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2807:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2692:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2703:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2715:6:5",
                            "type": ""
                          }
                        ],
                        "src": "2656:190:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2897:60:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2914:3:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2923:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2938:3:5",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2943:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "2934:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2934:11:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2947:1:5",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "2930:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2930:19:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2919:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2919:31:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2907:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2907:44:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2907:44:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2881:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2888:3:5",
                            "type": ""
                          }
                        ],
                        "src": "2851:106:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3021:89:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3055:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "3057:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3057:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3057:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3044:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3051:1:5",
                                        "type": "",
                                        "value": "2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3041:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3041:12:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3034:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3034:20:5"
                              },
                              "nodeType": "YulIf",
                              "src": "3031:2:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3093:3:5"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3098:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3086:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3086:18:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3086:18:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_ApprovalStatus",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3005:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3012:3:5",
                            "type": ""
                          }
                        ],
                        "src": "2962:148:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3167:950:5",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3177:22:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3193:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3187:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3187:12:5"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3181:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3243:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_AssetType",
                                  "nodeType": "YulIdentifier",
                                  "src": "3208:34:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3208:38:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3208:38:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3262:3:5"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3267:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3255:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3255:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3255:15:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3279:43:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3309:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3316:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3305:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3305:16:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3299:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3299:23:5"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulTypedName",
                                  "src": "3283:12:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3331:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3349:3:5",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3354:1:5",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3345:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3345:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3358:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3341:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3341:19:5"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "3335:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3380:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3385:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3376:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3376:14:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3396:12:5"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "3410:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3392:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3392:21:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3369:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3369:45:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3369:45:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3434:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3439:4:5",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3430:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3430:14:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "3460:5:5"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3467:4:5",
                                                "type": "",
                                                "value": "0x40"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "3456:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3456:16:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "3450:5:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3450:23:5"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "3475:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3446:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3446:32:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3423:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3423:56:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3423:56:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3499:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3504:4:5",
                                        "type": "",
                                        "value": "0x60"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3495:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3495:14:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3521:5:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3528:4:5",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3517:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3517:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3511:5:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3511:23:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3488:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3488:47:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3488:47:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3555:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3560:4:5",
                                        "type": "",
                                        "value": "0x80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3551:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3551:14:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3577:5:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3584:4:5",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3573:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3573:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3567:5:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3567:23:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3544:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3544:47:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3544:47:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3600:45:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3632:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3639:4:5",
                                        "type": "",
                                        "value": "0xa0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3628:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3628:16:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3622:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3622:23:5"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3604:14:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3688:14:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3708:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3713:4:5",
                                        "type": "",
                                        "value": "0xa0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3704:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3704:14:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_ApprovalStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "3654:33:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3654:65:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3654:65:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3728:45:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3760:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3767:4:5",
                                        "type": "",
                                        "value": "0xc0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3756:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3756:16:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3750:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3750:23:5"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0_2",
                                  "nodeType": "YulTypedName",
                                  "src": "3732:14:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3816:14:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3836:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3841:4:5",
                                        "type": "",
                                        "value": "0xc0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3832:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3832:14:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_ApprovalStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "3782:33:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3782:65:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3782:65:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3856:45:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3888:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3895:4:5",
                                        "type": "",
                                        "value": "0xe0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3884:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3884:16:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3878:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3878:23:5"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0_3",
                                  "nodeType": "YulTypedName",
                                  "src": "3860:14:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "3944:14:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3964:3:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3969:4:5",
                                        "type": "",
                                        "value": "0xe0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3960:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3960:14:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_ApprovalStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "3910:33:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3910:65:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3910:65:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3984:16:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3994:6:5",
                                "type": "",
                                "value": "0x0100"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "3988:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4009:43:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4041:5:5"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "4048:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4037:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4037:14:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4031:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4031:21:5"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0_4",
                                  "nodeType": "YulTypedName",
                                  "src": "4013:14:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "4082:14:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4102:3:5"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "4107:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4098:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4098:12:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4061:20:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4061:50:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4061:50:5"
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Asset",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3151:5:5",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3158:3:5",
                            "type": ""
                          }
                        ],
                        "src": "3115:1002:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4279:218:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4289:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4301:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4312:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4297:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4297:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4289:4:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4324:29:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4342:3:5",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4347:1:5",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4338:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4338:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4351:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4334:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4334:19:5"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4328:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4369:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4384:6:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4392:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4380:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4380:15:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4362:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4362:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4362:34:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4416:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4427:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4412:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4412:18:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4436:6:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4444:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4432:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4432:15:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4405:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4405:43:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4405:43:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4468:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4479:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4464:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4464:18:5"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4484:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4457:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4457:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4457:34:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4232:9:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4243:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4251:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4259:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4270:4:5",
                            "type": ""
                          }
                        ],
                        "src": "4122:375:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4631:145:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4641:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4653:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4664:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4649:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4649:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4641:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4683:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4698:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4714:3:5",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4719:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "4710:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4710:11:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4723:1:5",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "4706:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4706:19:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4694:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4694:32:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4676:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4676:51:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4676:51:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4747:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4758:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4743:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4743:18:5"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4763:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4736:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4736:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4736:34:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4592:9:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4603:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4611:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4622:4:5",
                            "type": ""
                          }
                        ],
                        "src": "4502:274:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5090:367:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5100:27:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5112:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5123:3:5",
                                    "type": "",
                                    "value": "672"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5108:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5108:19:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5100:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5143:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5158:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5174:3:5",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5179:1:5",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "5170:3:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5170:11:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5183:1:5",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "5166:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5166:19:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5154:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5154:32:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5136:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5136:51:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5136:51:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5207:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5218:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5203:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5203:18:5"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5223:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5196:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5196:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5196:34:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5274:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_AssetType",
                                  "nodeType": "YulIdentifier",
                                  "src": "5239:34:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5239:42:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5239:42:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5301:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5312:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5297:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5297:18:5"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5317:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5290:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5290:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5290:34:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5360:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5372:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5383:2:5",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5368:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5368:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Asset",
                                  "nodeType": "YulIdentifier",
                                  "src": "5333:26:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5333:54:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5333:54:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5423:6:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5435:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5446:3:5",
                                        "type": "",
                                        "value": "384"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5431:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5431:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Asset",
                                  "nodeType": "YulIdentifier",
                                  "src": "5396:26:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5396:55:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5396:55:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_enum$_Status_$294_t_struct$_Asset_$343_memory_ptr_t_struct$_Asset_$343_memory_ptr__to_t_address_t_uint256_t_uint8_t_struct$_Asset_$343_memory_ptr_t_struct$_Asset_$343_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5027:9:5",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "5038:6:5",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "5046:6:5",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5054:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5062:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5070:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5081:4:5",
                            "type": ""
                          }
                        ],
                        "src": "4781:676:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5561:103:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5571:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5583:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5594:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5579:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5579:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5571:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5613:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5628:6:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5640:3:5",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5645:10:5",
                                            "type": "",
                                            "value": "0xffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "5636:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5636:20:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5624:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5624:33:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5606:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5606:52:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5606:52:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5530:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5541:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5552:4:5",
                            "type": ""
                          }
                        ],
                        "src": "5462:202:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5843:169:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5860:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5871:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5853:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5853:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5853:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5894:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5905:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5890:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5890:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5910:2:5",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5883:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5883:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5883:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5933:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5944:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5929:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5929:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5949:21:5",
                                    "type": "",
                                    "value": "Asset id not locked"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5922:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5922:49:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5922:49:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5980:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5992:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6003:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5988:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5988:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5980:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0b7c95d95e3aad79b906fb19b0da0d1811ed1e045473a49cd652735d360829f8__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5820:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5834:4:5",
                            "type": ""
                          }
                        ],
                        "src": "5669:343:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6191:168:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6208:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6219:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6201:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6201:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6201:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6242:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6253:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6238:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6238:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6258:2:5",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6231:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6231:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6231:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6281:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6292:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6277:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6277:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6297:20:5",
                                    "type": "",
                                    "value": "Please pay the fee"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6270:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6270:48:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6270:48:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6327:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6339:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6350:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6335:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6335:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6327:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1d22ab37d626653099bb72f7ee05734e5c3bf33278101156fd6719470a98086b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6168:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6182:4:5",
                            "type": ""
                          }
                        ],
                        "src": "6017:342:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6538:180:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6555:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6566:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6548:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6548:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6548:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6589:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6600:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6585:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6585:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6605:2:5",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6578:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6578:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6578:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6628:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6639:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6624:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6624:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6644:32:5",
                                    "type": "",
                                    "value": "Lockbox is not pending anymore"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6617:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6617:60:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6617:60:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6686:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6698:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6709:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6694:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6694:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6686:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_225c82a5e59665ef1f336a75ae448132134308e26aea73f698955973ed9430a8__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6515:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6529:4:5",
                            "type": ""
                          }
                        ],
                        "src": "6364:354:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6897:171:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6914:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6925:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6907:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6907:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6907:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6948:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6959:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6944:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6944:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6964:2:5",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6937:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6937:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6937:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6987:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6998:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6983:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6983:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7003:23:5",
                                    "type": "",
                                    "value": "Asset A is not locked"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6976:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6976:51:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6976:51:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7036:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7048:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7059:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7044:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7044:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7036:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3af6f5ac4ab1d36cf5a4cda6cb306a6702549521354f61378ee5d39b8c7a50a1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6874:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6888:4:5",
                            "type": ""
                          }
                        ],
                        "src": "6723:345:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7247:176:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7264:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7275:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7257:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7257:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7257:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7298:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7309:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7294:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7294:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7314:2:5",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7287:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7287:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7287:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7337:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7348:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7333:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7333:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7353:28:5",
                                    "type": "",
                                    "value": "Asset B is already claimed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7326:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7326:56:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7326:56:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7391:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7403:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7414:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7399:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7399:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7391:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4afd51c36af79ae02be37794b3132d2f4b0302a5fb318f129f7a9ea17bd7a1ac__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7224:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7238:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7073:350:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7602:173:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7619:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7630:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7612:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7612:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7612:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7653:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7664:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7649:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7649:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7669:2:5",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7642:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7642:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7642:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7692:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7703:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7688:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7688:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7708:25:5",
                                    "type": "",
                                    "value": "Asset A is not approved"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7681:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7681:53:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7681:53:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7743:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7755:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7766:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7751:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7751:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7743:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5329b3a7babc3bacf72ca712833cec552db3dd068d3e0efc461a6d45eaeef042__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7579:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7593:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7428:347:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7954:171:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7971:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7982:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7964:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7964:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7964:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8005:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8016:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8001:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8001:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8021:2:5",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7994:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7994:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7994:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8044:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8055:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8040:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8040:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8060:23:5",
                                    "type": "",
                                    "value": "Asset B is not locked"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8033:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8033:51:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8033:51:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8093:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8105:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8116:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8101:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8101:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8093:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_660be2c4a51de8510740c98b39cd8953e1004b8e550ba6b1eb0753e1388c073b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7931:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7945:4:5",
                            "type": ""
                          }
                        ],
                        "src": "7780:345:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8304:179:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8321:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8332:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8314:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8314:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8314:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8355:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8366:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8351:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8351:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8371:2:5",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8344:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8344:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8344:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8394:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8405:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8390:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8390:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8410:31:5",
                                    "type": "",
                                    "value": "Cannot cancel the lockbox now"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8383:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8383:59:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8383:59:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8451:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8463:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8474:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8459:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8459:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8451:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7a7f3bf16a9a6ffa5efb50883f002fbaa38568a5113cab72d8351c9d8f31dd5c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8281:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8295:4:5",
                            "type": ""
                          }
                        ],
                        "src": "8130:353:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8662:173:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8679:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8690:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8672:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8672:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8672:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8713:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8724:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8709:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8709:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8729:2:5",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8702:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8702:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8702:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8752:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8763:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8748:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8748:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8768:25:5",
                                    "type": "",
                                    "value": "Asset is already locked"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8741:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8741:53:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8741:53:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8803:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8815:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8826:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8811:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8811:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8803:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_854284b9b83c8c1fd066cb6eb38a15962848a69816ee204c8dc76e001bbfe28e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8639:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8653:4:5",
                            "type": ""
                          }
                        ],
                        "src": "8488:347:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9014:180:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9031:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9042:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9024:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9024:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9024:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9065:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9076:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9061:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9061:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9081:2:5",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9054:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9054:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9054:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9104:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9115:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9100:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9100:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9120:32:5",
                                    "type": "",
                                    "value": "LockBox is not pending anymore"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9093:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9093:60:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9093:60:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9162:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9174:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9185:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9170:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9170:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9162:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9668d6e7736ff81111fecce7ea9d3f7795a852fefdf1940edac25e0529c55fb3__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8991:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9005:4:5",
                            "type": ""
                          }
                        ],
                        "src": "8840:354:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9373:161:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9390:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9401:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9383:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9383:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9383:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9424:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9435:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9420:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9420:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9440:2:5",
                                    "type": "",
                                    "value": "11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9413:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9413:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9413:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9463:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9474:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9459:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9459:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9479:13:5",
                                    "type": "",
                                    "value": "Not allowed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9452:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9452:41:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9452:41:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9502:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9514:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9525:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9510:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9510:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9502:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9350:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9364:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9199:335:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9713:176:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9730:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9741:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9723:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9723:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9723:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9764:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9775:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9760:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9760:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9780:2:5",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9753:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9753:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9753:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9803:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9814:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9799:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9799:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9819:28:5",
                                    "type": "",
                                    "value": "Asset A is already claimed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9792:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9792:56:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9792:56:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9857:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9869:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9880:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9865:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9865:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9857:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9edbab2b2fbac3e8bd595ca8a1f4fc0c7f03cde237fa22d18abf53cbd96f2bb1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9690:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9704:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9539:350:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10068:175:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10085:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10096:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10078:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10078:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10078:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10119:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10130:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10115:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10115:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10135:2:5",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10108:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10108:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10108:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10158:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10169:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10154:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10154:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10174:27:5",
                                    "type": "",
                                    "value": "Asset is already approved"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10147:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10147:55:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10147:55:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10211:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10223:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10234:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10219:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10219:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10211:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a52d6860bf766c78d8c792b3467be6dca2c5e2083a03c9cfa98b2f8ce716cdab__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10045:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10059:4:5",
                            "type": ""
                          }
                        ],
                        "src": "9894:349:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10422:168:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10439:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10450:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10432:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10432:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10432:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10473:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10484:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10469:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10469:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10489:2:5",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10462:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10462:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10462:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10512:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10523:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10508:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10508:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10528:20:5",
                                    "type": "",
                                    "value": "Lockbox is expired"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10501:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10501:48:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10501:48:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10558:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10570:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10581:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10566:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10566:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10558:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b160a918c89a7a7db1acbe8599d5a41038a14fe41be6c5c4764c8f215eb989a2__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10399:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10413:4:5",
                            "type": ""
                          }
                        ],
                        "src": "10248:342:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10769:169:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10786:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10797:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10779:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10779:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10779:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10820:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10831:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10816:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10816:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10836:2:5",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10809:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10809:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10809:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10859:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10870:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10855:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10855:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10875:21:5",
                                    "type": "",
                                    "value": "LockBox is canceled"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10848:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10848:49:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10848:49:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10906:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10918:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10929:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10914:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10914:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10906:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ce556117ca64060e6f0505f6d2b392e8dda32994fff633c5255ef00260631428__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10746:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10760:4:5",
                            "type": ""
                          }
                        ],
                        "src": "10595:343:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11117:173:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11134:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11145:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11127:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11127:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11127:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11168:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11179:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11164:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11164:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11184:2:5",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11157:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11157:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11157:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11207:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11218:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11203:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11203:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11223:25:5",
                                    "type": "",
                                    "value": "Asset B is not approved"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11196:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11196:53:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11196:53:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11258:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11270:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11281:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11266:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11266:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11258:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d7a4a1d8866f38d3d46c2215da873907297302f930931fed0f4cdf8cb0daf09a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11094:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11108:4:5",
                            "type": ""
                          }
                        ],
                        "src": "10943:347:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11469:168:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11486:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11497:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11479:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11479:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11479:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11520:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11531:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11516:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11516:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11536:2:5",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11509:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11509:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11509:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11559:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11570:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11555:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11555:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11575:20:5",
                                    "type": "",
                                    "value": "lockbox is expired"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11548:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11548:48:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11548:48:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11605:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11617:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11628:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11613:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11613:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11605:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f1afdd737eadd04d5e6817b45af6553c2648310053b36b2e9a9c276a4bd72c43__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11446:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11460:4:5",
                            "type": ""
                          }
                        ],
                        "src": "11295:342:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11816:176:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11833:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11844:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11826:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11826:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11826:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11867:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11878:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11863:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11863:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11883:2:5",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11856:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11856:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11856:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11906:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11917:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11902:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11902:18:5"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11922:28:5",
                                    "type": "",
                                    "value": "Insufficient locking funds"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11895:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11895:56:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11895:56:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11960:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11972:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11983:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11968:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11968:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11960:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f5b1c6a12924c6b0d031c87042002ca055bce585aed300130c06595bac7e3bb4__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11793:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11807:4:5",
                            "type": ""
                          }
                        ],
                        "src": "11642:350:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12098:76:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12108:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12120:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12131:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12116:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12116:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12108:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12150:9:5"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12161:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12143:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12143:25:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12143:25:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12067:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12078:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12089:4:5",
                            "type": ""
                          }
                        ],
                        "src": "11997:177:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12226:189:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12265:115:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ret",
                                          "nodeType": "YulIdentifier",
                                          "src": "12286:3:5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "12295:3:5",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "12300:10:5",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "12291:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12291:20:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "12279:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12279:33:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12279:33:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12332:1:5",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12335:4:5",
                                          "type": "",
                                          "value": "0x11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "12325:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12325:15:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12325:15:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ret",
                                          "nodeType": "YulIdentifier",
                                          "src": "12360:3:5"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12365:4:5",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12353:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12353:17:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12353:17:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12242:5:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12253:1:5",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "12249:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12249:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "12239:2:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12239:17:5"
                              },
                              "nodeType": "YulIf",
                              "src": "12236:2:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12389:20:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12400:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12407:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12396:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12396:13:5"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "12389:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12208:5:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "12218:3:5",
                            "type": ""
                          }
                        ],
                        "src": "12179:236:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12452:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12469:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12476:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12481:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "12472:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12472:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12462:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12462:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12462:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12509:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12512:4:5",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12502:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12502:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12502:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12533:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12536:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12526:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12526:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12526:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "12420:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12584:95:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12601:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12608:3:5",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12613:10:5",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "12604:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12604:20:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12594:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12594:31:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12594:31:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12641:1:5",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12644:4:5",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12634:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12634:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12634:15:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12665:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12668:4:5",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12658:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12658:15:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12658:15:5"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "12552:127:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12739:62:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12773:22:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "12775:16:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12775:18:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12775:18:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12762:5:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12769:1:5",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "12759:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12759:12:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12752:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12752:20:5"
                              },
                              "nodeType": "YulIf",
                              "src": "12749:2:5"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_AssetType",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12728:5:5",
                            "type": ""
                          }
                        ],
                        "src": "12684:117:5"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_enum$_AssetType(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let _1 := 32\n        value1 := abi_decode_t_address(add(headStart, _1))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value3, value3) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value3, value3) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value3, value3) }\n        calldatacopy(add(memPtr, _1), add(_3, _1), _4)\n        mstore(add(add(memPtr, _4), _1), value3)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_AssetType_$290t_addresst_uint256t_uint256t_enum$_AssetType_$290t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(value4, value4) }\n        value0 := abi_decode_t_enum$_AssetType(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_t_enum$_AssetType(add(headStart, 128))\n        value5 := abi_decode_t_address(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n        value7 := calldataload(add(headStart, 224))\n        value8 := calldataload(add(headStart, 256))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_t_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_t_enum$_ApprovalStatus(value, pos)\n    {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n        mstore(pos, value)\n    }\n    function abi_encode_t_struct$_Asset(value, pos)\n    {\n        let _1 := mload(value)\n        validator_assert_t_enum$_AssetType(_1)\n        mstore(pos, _1)\n        let memberValue0 := mload(add(value, 0x20))\n        let _2 := sub(shl(160, 1), 1)\n        mstore(add(pos, 0x20), and(memberValue0, _2))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), _2))\n        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n        let memberValue0_1 := mload(add(value, 0xa0))\n        abi_encode_t_enum$_ApprovalStatus(memberValue0_1, add(pos, 0xa0))\n        let memberValue0_2 := mload(add(value, 0xc0))\n        abi_encode_t_enum$_ApprovalStatus(memberValue0_2, add(pos, 0xc0))\n        let memberValue0_3 := mload(add(value, 0xe0))\n        abi_encode_t_enum$_ApprovalStatus(memberValue0_3, add(pos, 0xe0))\n        let _3 := 0x0100\n        let memberValue0_4 := mload(add(value, _3))\n        abi_encode_t_address(memberValue0_4, add(pos, _3))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_enum$_Status_$294_t_struct$_Asset_$343_memory_ptr_t_struct$_Asset_$343_memory_ptr__to_t_address_t_uint256_t_uint8_t_struct$_Asset_$343_memory_ptr_t_struct$_Asset_$343_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 672)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        validator_assert_t_enum$_AssetType(value2)\n        mstore(add(headStart, 64), value2)\n        abi_encode_t_struct$_Asset(value3, add(headStart, 96))\n        abi_encode_t_struct$_Asset(value4, add(headStart, 384))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_stringliteral_0b7c95d95e3aad79b906fb19b0da0d1811ed1e045473a49cd652735d360829f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Asset id not locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1d22ab37d626653099bb72f7ee05734e5c3bf33278101156fd6719470a98086b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Please pay the fee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_225c82a5e59665ef1f336a75ae448132134308e26aea73f698955973ed9430a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Lockbox is not pending anymore\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3af6f5ac4ab1d36cf5a4cda6cb306a6702549521354f61378ee5d39b8c7a50a1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Asset A is not locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4afd51c36af79ae02be37794b3132d2f4b0302a5fb318f129f7a9ea17bd7a1ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Asset B is already claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5329b3a7babc3bacf72ca712833cec552db3dd068d3e0efc461a6d45eaeef042__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Asset A is not approved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_660be2c4a51de8510740c98b39cd8953e1004b8e550ba6b1eb0753e1388c073b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Asset B is not locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a7f3bf16a9a6ffa5efb50883f002fbaa38568a5113cab72d8351c9d8f31dd5c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Cannot cancel the lockbox now\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_854284b9b83c8c1fd066cb6eb38a15962848a69816ee204c8dc76e001bbfe28e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Asset is already locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9668d6e7736ff81111fecce7ea9d3f7795a852fefdf1940edac25e0529c55fb3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"LockBox is not pending anymore\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9edbab2b2fbac3e8bd595ca8a1f4fc0c7f03cde237fa22d18abf53cbd96f2bb1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Asset A is already claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a52d6860bf766c78d8c792b3467be6dca2c5e2083a03c9cfa98b2f8ce716cdab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Asset is already approved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b160a918c89a7a7db1acbe8599d5a41038a14fe41be6c5c4764c8f215eb989a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Lockbox is expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ce556117ca64060e6f0505f6d2b392e8dda32994fff633c5255ef00260631428__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"LockBox is canceled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d7a4a1d8866f38d3d46c2215da873907297302f930931fed0f4cdf8cb0daf09a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Asset B is not approved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f1afdd737eadd04d5e6817b45af6553c2648310053b36b2e9a9c276a4bd72c43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"lockbox is expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f5b1c6a12924c6b0d031c87042002ca055bce585aed300130c06595bac7e3bb4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Insufficient locking funds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_assert_t_enum$_AssetType(value)\n    {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n}",
                  "id": 5,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106100915760003560e01c8063864d7e1411610059578063864d7e141461012d5780638a88cbbe1461014d578063d3c2a59214610160578063d3f29c3314610180578063f1c5797d146101a057610091565b80630a1053fb14610096578063150b7a02146100c15780631629614e146100ee57806361bc221a14610103578063758cdcf014610118575b600080fd5b3480156100a257600080fd5b506100ab6101d1565b6040516100b891906136c8565b60405180910390f35b3480156100cd57600080fd5b506100e16100dc36600461305c565b6101d7565b6040516100b8919061332c565b6101016100fc3660046131d3565b6101e7565b005b34801561010f57600080fd5b506100ab610b4a565b34801561012457600080fd5b506100ab610b50565b34801561013957600080fd5b506101016101483660046131d3565b610b56565b61010161015b36600461314f565b611231565b34801561016c57600080fd5b5061010161017b3660046131d3565b61170c565b34801561018c57600080fd5b5061010161019b3660046131d3565b6127c9565b3480156101ac57600080fd5b506101c06101bb3660046131d3565b612caf565b6040516100b89594939291906132e0565b60015481565b630a85bd0160e11b949350505050565b6000818152600360209081526040808320815160a08101835281546001600160a01b03168152600182015493810193909352600280820154919284019160ff169081111561024557634e487b7160e01b600052602160045260246000fd5b600281111561026457634e487b7160e01b600052602160045260246000fd5b8152604080516101208101909152600383018054602090930192829060ff1660028111156102a257634e487b7160e01b600052602160045260246000fd5b60028111156102c157634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff169081111561032857634e487b7160e01b600052602160045260246000fd5b600181111561034757634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff16600181111561037d57634e487b7160e01b600052602160045260246000fd5b600181111561039c57634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff1660018111156103d257634e487b7160e01b600052602160045260246000fd5b60018111156103f157634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b03166020918201529082526040805161012081019091526008840180549390920192909190829060ff16600281111561045157634e487b7160e01b600052602160045260246000fd5b600281111561047057634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff16908111156104d757634e487b7160e01b600052602160045260246000fd5b60018111156104f657634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff16600181111561052c57634e487b7160e01b600052602160045260246000fd5b600181111561054b57634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff16600181111561058157634e487b7160e01b600052602160045260246000fd5b60018111156105a057634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b031660209091015290525090506000816040015160028111156105ea57634e487b7160e01b600052602160045260246000fd5b146106105760405162461bcd60e51b81526004016106079061350b565b60405180910390fd5b806020015142106106335760405162461bcd60e51b815260040161060790613665565b8060600151602001516001600160a01b0316336001600160a01b031614156108c1576000816060015160a00151600181111561067f57634e487b7160e01b600052602160045260246000fd5b1461069c5760405162461bcd60e51b8152600401610607906134d4565b600060608201515160028111156106c357634e487b7160e01b600052602160045260246000fd5b1415610762578060600151604001516001600160a01b03166323b872dd33308460600151606001516040518463ffffffff1660e01b8152600401610709939291906132a3565b600060405180830381600087803b15801561072357600080fd5b505af1158015610737573d6000803e3d6000fd5b505050600083815260036020526040902060070180546001925060ff191682805b02179055506108bc565b6001606082015151600281111561078957634e487b7160e01b600052602160045260246000fd5b141561084357606081015160408082015160809092015190516323b872dd60e01b81526001600160a01b03909216916323b872dd916107ce91339130916004016132a3565b602060405180830381600087803b1580156107e857600080fd5b505af11580156107fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108209190613128565b50600082815260036020526040902060070180546001919060ff19168280610758565b6002606082015151600281111561086a57634e487b7160e01b600052602160045260246000fd5b14156108bc578060600151608001513410156108985760405162461bcd60e51b815260040161060790613691565b600082815260036020526040902060070180546001919060ff191682805b02179055505b610b46565b60008281526003602052604081206008018054610100600160a81b0319163361010002179055816080015160a00151600181111561090f57634e487b7160e01b600052602160045260246000fd5b1461092c5760405162461bcd60e51b8152600401610607906134d4565b6000608082015151600281111561095357634e487b7160e01b600052602160045260246000fd5b14156109eb57608081015160408082015160609092015190516323b872dd60e01b81526001600160a01b03909216916323b872dd9161099891339130916004016132a3565b600060405180830381600087803b1580156109b257600080fd5b505af11580156109c6573d6000803e3d6000fd5b5050506000838152600360205260409020600c0180546001925060ff191682806108b6565b60016080820151516002811115610a1257634e487b7160e01b600052602160045260246000fd5b1415610acd578060800151604001516001600160a01b03166323b872dd33308460800151608001516040518463ffffffff1660e01b8152600401610a58939291906132a3565b602060405180830381600087803b158015610a7257600080fd5b505af1158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaa9190613128565b506000828152600360205260409020600c0180546001919060ff191682806108b6565b60026080820151516002811115610af457634e487b7160e01b600052602160045260246000fd5b1415610b4657806080015160800151341015610b225760405162461bcd60e51b815260040161060790613691565b6000828152600360205260409020600c0180546001919060ff191682805b02179055505b5050565b60005481565b60025481565b6000818152600360209081526040808320815160a08101835281546001600160a01b03168152600182015493810193909352600280820154919284019160ff1690811115610bb457634e487b7160e01b600052602160045260246000fd5b6002811115610bd357634e487b7160e01b600052602160045260246000fd5b8152604080516101208101909152600383018054602090930192829060ff166002811115610c1157634e487b7160e01b600052602160045260246000fd5b6002811115610c3057634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff1690811115610c9757634e487b7160e01b600052602160045260246000fd5b6001811115610cb657634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff166001811115610cec57634e487b7160e01b600052602160045260246000fd5b6001811115610d0b57634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff166001811115610d4157634e487b7160e01b600052602160045260246000fd5b6001811115610d6057634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b03166020918201529082526040805161012081019091526008840180549390920192909190829060ff166002811115610dc057634e487b7160e01b600052602160045260246000fd5b6002811115610ddf57634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff1690811115610e4657634e487b7160e01b600052602160045260246000fd5b6001811115610e6557634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff166001811115610e9b57634e487b7160e01b600052602160045260246000fd5b6001811115610eba57634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff166001811115610ef057634e487b7160e01b600052602160045260246000fd5b6001811115610f0f57634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b03166020909101529052509050600081604001516002811115610f5957634e487b7160e01b600052602160045260246000fd5b14610f765760405162461bcd60e51b81526004016106079061350b565b80602001514210610f995760405162461bcd60e51b8152600401610607906135d5565b8060600151602001516001600160a01b0316336001600160a01b03161480610fda57508060800151602001516001600160a01b0316336001600160a01b0316145b610ff65760405162461bcd60e51b815260040161060790613542565b8060600151602001516001600160a01b0316336001600160a01b03161415611111576001816060015160a00151600181111561104257634e487b7160e01b600052602160045260246000fd5b1461105f5760405162461bcd60e51b815260040161060790613341565b6000816060015160c00151600181111561108957634e487b7160e01b600052602160045260246000fd5b146110a65760405162461bcd60e51b81526004016106079061359e565b6000828152600360205260409020600701805461ff001916610100179055608081015160c00151600190818111156110ee57634e487b7160e01b600052602160045260246000fd5b1415611111576000828152600360205260409020600201805460ff191660011790555b8060800151602001516001600160a01b0316336001600160a01b03161415610b46576001816080015160a00151600181111561115d57634e487b7160e01b600052602160045260246000fd5b1461117a5760405162461bcd60e51b815260040161060790613341565b6000816080015160c0015160018111156111a457634e487b7160e01b600052602160045260246000fd5b146111c15760405162461bcd60e51b81526004016106079061359e565b6000828152600360205260409020600c01805461ff001916610100179055606081015160c001516001908181111561120957634e487b7160e01b600052602160045260246000fd5b1415610b4657600082815260036020526040902060020180546001919060ff19168280610b40565b6001543410156112535760405162461bcd60e51b81526004016106079061336e565b600080549080611262836136d1565b919050555060006040518061012001604052808b600281111561129557634e487b7160e01b600052602160045260246000fd5b81523360208201526001600160a01b038b166040820152606081018a90526080810189905260a00160008152602001600081526020016000815260200160006001600160a01b03168152509050600060405180610120016040528088600281111561131057634e487b7160e01b600052602160045260246000fd5b815260200160006001600160a01b03168152602001876001600160a01b031681526020018681526020018581526020016000600181111561136157634e487b7160e01b600052602160045260246000fd5b81526000602080830182905260408084018390526060938401839052805160a081018252338152808301898152818301858152958201899052608082018790528454855260039093529220825181546001600160a01b0319166001600160a01b039091161781559051600180830191909155925160028083018054969750939586959394929360ff1990911691849081111561140d57634e487b7160e01b600052602160045260246000fd5b021790555060608201518051600383018054909190829060ff1916600183600281111561144a57634e487b7160e01b600052602160045260246000fd5b021790555060208201518154610100600160a81b0319166101006001600160a01b03928316021782556040830151600180840180546001600160a01b0319169290931691909117909155606083015160028301556080830151600383015560a08301516004830180549192909160ff19169083818111156114db57634e487b7160e01b600052602160045260246000fd5b021790555060c082015160048201805461ff00191661010083600181111561151357634e487b7160e01b600052602160045260246000fd5b021790555060e082015160048201805462ff000019166201000083600181111561154d57634e487b7160e01b600052602160045260246000fd5b02179055506101009190910151600490910180546001600160a01b039092166301000000026301000000600160b81b031990921691909117905560808201518051600883018054909190829060ff191660018360028111156115bf57634e487b7160e01b600052602160045260246000fd5b021790555060208201518154610100600160a81b0319166101006001600160a01b03928316021782556040830151600180840180546001600160a01b0319169290931691909117909155606083015160028301556080830151600383015560a08301516004830180549192909160ff191690838181111561165057634e487b7160e01b600052602160045260246000fd5b021790555060c082015160048201805461ff00191661010083600181111561168857634e487b7160e01b600052602160045260246000fd5b021790555060e082015160048201805462ff00001916620100008360018111156116c257634e487b7160e01b600052602160045260246000fd5b02179055506101009190910151600490910180546001600160a01b039092166301000000026301000000600160b81b03199092169190911790555050505050505050505050505050565b6000818152600360209081526040808320815160a08101835281546001600160a01b03168152600182015493810193909352600280820154919284019160ff169081111561176a57634e487b7160e01b600052602160045260246000fd5b600281111561178957634e487b7160e01b600052602160045260246000fd5b8152604080516101208101909152600383018054602090930192829060ff1660028111156117c757634e487b7160e01b600052602160045260246000fd5b60028111156117e657634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff169081111561184d57634e487b7160e01b600052602160045260246000fd5b600181111561186c57634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff1660018111156118a257634e487b7160e01b600052602160045260246000fd5b60018111156118c157634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff1660018111156118f757634e487b7160e01b600052602160045260246000fd5b600181111561191657634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b03166020918201529082526040805161012081019091526008840180549390920192909190829060ff16600281111561197657634e487b7160e01b600052602160045260246000fd5b600281111561199557634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff16908111156119fc57634e487b7160e01b600052602160045260246000fd5b6001811115611a1b57634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff166001811115611a5157634e487b7160e01b600052602160045260246000fd5b6001811115611a7057634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff166001811115611aa657634e487b7160e01b600052602160045260246000fd5b6001811115611ac557634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b03166020909101529052509050600281604001516002811115611b0f57634e487b7160e01b600052602160045260246000fd5b1415611b2d5760405162461bcd60e51b815260040161060790613601565b8060600151602001516001600160a01b0316336001600160a01b03161480611b6e57508060800151602001516001600160a01b0316336001600160a01b0316145b611b8a5760405162461bcd60e51b815260040161060790613542565b8060600151602001516001600160a01b0316336001600160a01b031614156121cd57600181604001516002811115611bd257634e487b7160e01b600052602160045260246000fd5b1415611ec3576000816080015160e001516001811115611c0257634e487b7160e01b600052602160045260246000fd5b14611c1f5760405162461bcd60e51b815260040161060790613400565b6001816080015160a001516001811115611c4957634e487b7160e01b600052602160045260246000fd5b14611c665760405162461bcd60e51b81526004016106079061346e565b6001816080015160c001516001811115611c9057634e487b7160e01b600052602160045260246000fd5b14611cad5760405162461bcd60e51b81526004016106079061362e565b6000828152600360205260408120600c0180546301000000600160b81b031916336301000000021762ff00001916620100001790556080820151516002811115611d0757634e487b7160e01b600052602160045260246000fd5b1415611d8357608081015160408082015160609092015190516323b872dd60e01b81526001600160a01b03909216916323b872dd91611d4c91309133916004016132a3565b600060405180830381600087803b158015611d6657600080fd5b505af1158015611d7a573d6000803e3d6000fd5b50505050611ebe565b60016080820151516002811115611daa57634e487b7160e01b600052602160045260246000fd5b1415611e46578060800151604001516001600160a01b031663a9059cbb338360800151608001516040518363ffffffff1660e01b8152600401611dee9291906132c7565b602060405180830381600087803b158015611e0857600080fd5b505af1158015611e1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e409190613128565b50611ebe565b60026080820151516002811115611e6d57634e487b7160e01b600052602160045260246000fd5b1415611ebe578060600151602001516001600160a01b03166108fc8260800151608001519081150290604051600060405180830381858888f19350505050158015611ebc573d6000803e3d6000fd5b505b6121cd565b600281604001516002811115611ee957634e487b7160e01b600052602160045260246000fd5b14156121cd576000816060015160e001516001811115611f1957634e487b7160e01b600052602160045260246000fd5b14611f365760405162461bcd60e51b815260040161060790613567565b6001816060015160a001516001811115611f6057634e487b7160e01b600052602160045260246000fd5b14611f7d5760405162461bcd60e51b8152600401610607906133d1565b6001816060015160c001516001811115611fa757634e487b7160e01b600052602160045260246000fd5b14611fc45760405162461bcd60e51b815260040161060790613437565b600082815260036020526040812060070180546301000000600160b81b031916336301000000021762ff0000191662010000179055606082015151600281111561201e57634e487b7160e01b600052602160045260246000fd5b141561209b578060600151604001516001600160a01b03166323b872dd30338460600151606001516040518463ffffffff1660e01b8152600401612064939291906132a3565b600060405180830381600087803b15801561207e57600080fd5b505af1158015612092573d6000803e3d6000fd5b505050506121cd565b600160608201515160028111156120c257634e487b7160e01b600052602160045260246000fd5b1415612158578060600151604001516001600160a01b031663a9059cbb338360600151608001516040518363ffffffff1660e01b81526004016121069291906132c7565b602060405180830381600087803b15801561212057600080fd5b505af1158015612134573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ebc9190613128565b6002606082015151600281111561217f57634e487b7160e01b600052602160045260246000fd5b14156121cd57606081015160208101516080909101516040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156121cb573d6000803e3d6000fd5b505b8060800151602001516001600160a01b0316336001600160a01b03161415610b465760018160400151600281111561221557634e487b7160e01b600052602160045260246000fd5b1415612506576000816060015160e00151600181111561224557634e487b7160e01b600052602160045260246000fd5b146122625760405162461bcd60e51b815260040161060790613567565b6001816060015160a00151600181111561228c57634e487b7160e01b600052602160045260246000fd5b146122a95760405162461bcd60e51b8152600401610607906133d1565b6001816060015160c0015160018111156122d357634e487b7160e01b600052602160045260246000fd5b146122f05760405162461bcd60e51b815260040161060790613437565b600082815260036020526040812060070180546301000000600160b81b031916336301000000021762ff0000191662010000179055606082015151600281111561234a57634e487b7160e01b600052602160045260246000fd5b14156123c7578060600151604001516001600160a01b03166323b872dd30338460600151606001516040518463ffffffff1660e01b8152600401612390939291906132a3565b600060405180830381600087803b1580156123aa57600080fd5b505af11580156123be573d6000803e3d6000fd5b505050506108bc565b600160608201515160028111156123ee57634e487b7160e01b600052602160045260246000fd5b141561248a578060600151604001516001600160a01b031663a9059cbb338360600151608001516040518363ffffffff1660e01b81526004016124329291906132c7565b602060405180830381600087803b15801561244c57600080fd5b505af1158015612460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124849190613128565b506108bc565b600260608201515160028111156124b157634e487b7160e01b600052602160045260246000fd5b14156108bc578060800151602001516001600160a01b03166108fc8260600151608001519081150290604051600060405180830381858888f19350505050158015612500573d6000803e3d6000fd5b50610b46565b60028160400151600281111561252c57634e487b7160e01b600052602160045260246000fd5b1415610b46576000816080015160e00151600181111561255c57634e487b7160e01b600052602160045260246000fd5b146125795760405162461bcd60e51b815260040161060790613400565b6001816080015160a0015160018111156125a357634e487b7160e01b600052602160045260246000fd5b146125c05760405162461bcd60e51b81526004016106079061346e565b6000828152600360205260408120600c01805462ff0000191662010000176301000000600160b81b03191633630100000002179055608082015151600281111561261a57634e487b7160e01b600052602160045260246000fd5b141561269657608081015160408082015160609092015190516323b872dd60e01b81526001600160a01b03909216916323b872dd9161265f91309133916004016132a3565b600060405180830381600087803b15801561267957600080fd5b505af115801561268d573d6000803e3d6000fd5b50505050610b46565b600160808201515160028111156126bd57634e487b7160e01b600052602160045260246000fd5b1415612753578060800151604001516001600160a01b031663a9059cbb338360800151608001516040518363ffffffff1660e01b81526004016127019291906132c7565b602060405180830381600087803b15801561271b57600080fd5b505af115801561272f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125009190613128565b6002608082015151600281111561277a57634e487b7160e01b600052602160045260246000fd5b1415610b465760808082015160208101519101516040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156127c4573d6000803e3d6000fd5b505050565b6000818152600360209081526040808320815160a08101835281546001600160a01b03168152600182015493810193909352600280820154919284019160ff169081111561282757634e487b7160e01b600052602160045260246000fd5b600281111561284657634e487b7160e01b600052602160045260246000fd5b8152604080516101208101909152600383018054602090930192829060ff16600281111561288457634e487b7160e01b600052602160045260246000fd5b60028111156128a357634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff169081111561290a57634e487b7160e01b600052602160045260246000fd5b600181111561292957634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff16600181111561295f57634e487b7160e01b600052602160045260246000fd5b600181111561297e57634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff1660018111156129b457634e487b7160e01b600052602160045260246000fd5b60018111156129d357634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b03166020918201529082526040805161012081019091526008840180549390920192909190829060ff166002811115612a3357634e487b7160e01b600052602160045260246000fd5b6002811115612a5257634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff1690811115612ab957634e487b7160e01b600052602160045260246000fd5b6001811115612ad857634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff166001811115612b0e57634e487b7160e01b600052602160045260246000fd5b6001811115612b2d57634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff166001811115612b6357634e487b7160e01b600052602160045260246000fd5b6001811115612b8257634e487b7160e01b600052602160045260246000fd5b8152600491909101546001600160a01b0363010000009091048116602090920191909152915282519293509190911633149050612bd15760405162461bcd60e51b815260040161060790613542565b600081604001516002811115612bf757634e487b7160e01b600052602160045260246000fd5b14612c145760405162461bcd60e51b81526004016106079061339a565b6000816060015160c001516001811115612c3e57634e487b7160e01b600052602160045260246000fd5b148015612c7257506000816080015160c001516001811115612c7057634e487b7160e01b600052602160045260246000fd5b145b612c8e5760405162461bcd60e51b81526004016106079061349d565b60008281526003602052604090206002908101805460ff1916600183610b40565b600360208190526000918252604091829020805460018201546002808401548651610120810190975294840180546001600160a01b0390941696929560ff90811695949192849290911690811115612d1757634e487b7160e01b600052602160045260246000fd5b6002811115612d3657634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff1690811115612d9d57634e487b7160e01b600052602160045260246000fd5b6001811115612dbc57634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff166001811115612df257634e487b7160e01b600052602160045260246000fd5b6001811115612e1157634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff166001811115612e4757634e487b7160e01b600052602160045260246000fd5b6001811115612e6657634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b0316602090910152604080516101208101909152600883018054929392829060ff166002811115612ebe57634e487b7160e01b600052602160045260246000fd5b6002811115612edd57634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b036101009091048116602083015260018084015490911660408301526002830154606083015260038301546080830152600483015460a09092019160ff1690811115612f4457634e487b7160e01b600052602160045260246000fd5b6001811115612f6357634e487b7160e01b600052602160045260246000fd5b81526020016004820160019054906101000a900460ff166001811115612f9957634e487b7160e01b600052602160045260246000fd5b6001811115612fb857634e487b7160e01b600052602160045260246000fd5b81526020016004820160029054906101000a900460ff166001811115612fee57634e487b7160e01b600052602160045260246000fd5b600181111561300d57634e487b7160e01b600052602160045260246000fd5b815260049190910154630100000090046001600160a01b0316602090910152905085565b80356001600160a01b038116811461304857600080fd5b919050565b80356003811061304857600080fd5b60008060008060808587031215613071578384fd5b61307a85613031565b93506020613089818701613031565b935060408601359250606086013567ffffffffffffffff808211156130ac578384fd5b818801915088601f8301126130bf578384fd5b8135818111156130d1576130d161370e565b604051601f8201601f19168101850183811182821017156130f4576130f461370e565b60405281815283820185018b101561310a578586fd5b81858501868301379081019093019390935250939692955090935050565b600060208284031215613139578081fd5b81518015158114613148578182fd5b9392505050565b60008060008060008060008060006101208a8c03121561316d578485fd5b6131768a61304d565b985061318460208b01613031565b975060408a0135965060608a013595506131a060808b0161304d565b94506131ae60a08b01613031565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b6000602082840312156131e4578081fd5b5035919050565b6001600160a01b03169052565b60028110613208576132086136f8565b9052565b805161321781613724565b80835250602081015160018060a01b0380821660208501528060408401511660408501525050606081015160608301526080810151608083015260a081015161326360a08401826131f8565b5060c081015161327660c08401826131f8565b5060e081015161328960e08401826131f8565b506101008082015161329d828501826131eb565b50505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0386168152602081018590526102a0810161330185613724565b846040830152613314606083018561320c565b61332261018083018461320c565b9695505050505050565b6001600160e01b031991909116815260200190565b602080825260139082015272105cdcd95d081a59081b9bdd081b1bd8dad959606a1b604082015260600190565b602080825260129082015271506c6561736520706179207468652066656560701b604082015260600190565b6020808252601e908201527f4c6f636b626f78206973206e6f742070656e64696e6720616e796d6f72650000604082015260600190565b602080825260159082015274105cdcd95d0810481a5cc81b9bdd081b1bd8dad959605a1b604082015260600190565b6020808252601a908201527f4173736574204220697320616c726561647920636c61696d6564000000000000604082015260600190565b60208082526017908201527f41737365742041206973206e6f7420617070726f766564000000000000000000604082015260600190565b602080825260159082015274105cdcd95d0810881a5cc81b9bdd081b1bd8dad959605a1b604082015260600190565b6020808252601d908201527f43616e6e6f742063616e63656c20746865206c6f636b626f78206e6f77000000604082015260600190565b60208082526017908201527f417373657420697320616c7265616479206c6f636b6564000000000000000000604082015260600190565b6020808252601e908201527f4c6f636b426f78206973206e6f742070656e64696e6720616e796d6f72650000604082015260600190565b6020808252600b908201526a139bdd08185b1b1bddd95960aa1b604082015260600190565b6020808252601a908201527f4173736574204120697320616c726561647920636c61696d6564000000000000604082015260600190565b60208082526019908201527f417373657420697320616c726561647920617070726f76656400000000000000604082015260600190565b602080825260129082015271131bd8dad89bde081a5cc8195e1c1a5c995960721b604082015260600190565b602080825260139082015272131bd8dad09bde081a5cc818d85b98d95b1959606a1b604082015260600190565b60208082526017908201527f41737365742042206973206e6f7420617070726f766564000000000000000000604082015260600190565b6020808252601290820152711b1bd8dad89bde081a5cc8195e1c1a5c995960721b604082015260600190565b6020808252601a908201527f496e73756666696369656e74206c6f636b696e672066756e6473000000000000604082015260600190565b90815260200190565b60006000198214156136f157634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60038110613734576137346136f8565b5056fea2646970667358221220f9fcb3142d8c8119ca4f0eb8005d0be3a1b8c58dcf59a419afa15bfa1d6058b464736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x864D7E14 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x864D7E14 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x8A88CBBE EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xD3C2A592 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xD3F29C33 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xF1C5797D EQ PUSH2 0x1A0 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xA1053FB EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x1629614E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x758CDCF0 EQ PUSH2 0x118 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x36C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x305C JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x332C JUMP JUMPDEST PUSH2 0x101 PUSH2 0xFC CALLDATASIZE PUSH1 0x4 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xB4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0xB50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x101 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x314F JUMP JUMPDEST PUSH2 0x1231 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x170C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x101 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x27C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x245 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x264 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x328 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x347 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x37D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x39C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP5 ADD DUP1 SLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x451 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x470 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x4D7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x52C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x54B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x581 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5A0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x350B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD TIMESTAMP LT PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3665 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x8C1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x67F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x34D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x6C3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x762 JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x737 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP1 JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x789 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x843 JUMPI PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x80 SWAP1 SWAP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x7CE SWAP2 CALLER SWAP2 ADDRESS SWAP2 PUSH1 0x4 ADD PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x820 SWAP2 SWAP1 PUSH2 0x3128 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x86A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x8BC JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x80 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3691 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 MUL OR SWAP1 SSTORE DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x90F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x34D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x953 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x9EB JUMPI PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x998 SWAP2 CALLER SWAP2 ADDRESS SWAP2 PUSH1 0x4 ADD PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD DUP1 SLOAD PUSH1 0x1 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP1 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA12 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xACD JUMPI DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x80 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA58 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x3128 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAF4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xB46 JUMPI DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x80 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3691 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xBB4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBD3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC11 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC30 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xC97 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xCB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xCEC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD0B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD41 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP5 ADD DUP1 SLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDC0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDDF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xE46 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE65 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE9B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xEBA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xEF0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF0F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF59 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0xF76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x350B JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD TIMESTAMP LT PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x35D5 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xFDA JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xFF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3542 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1111 JUMPI PUSH1 0x1 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1042 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x105F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3341 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1089 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x10A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x359E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 SWAP1 DUP2 DUP2 GT ISZERO PUSH2 0x10EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1111 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB46 JUMPI PUSH1 0x1 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x115D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x117A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3341 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11A4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x11C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x359E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 SWAP1 DUP2 DUP2 GT ISZERO PUSH2 0x1209 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xB46 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x1253 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x336E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP1 PUSH2 0x1262 DUP4 PUSH2 0x36D1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1295 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1310 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1361 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE DUP1 DUP4 ADD DUP10 DUP2 MSTORE DUP2 DUP4 ADD DUP6 DUP2 MSTORE SWAP6 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP8 SWAP1 MSTORE DUP5 SLOAD DUP6 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP1 DUP4 ADD DUP1 SLOAD SWAP7 SWAP8 POP SWAP4 SWAP6 DUP7 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP2 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x140D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x144A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND MUL OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 DUP1 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF NOT AND SWAP1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x14DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1513 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x154D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x100 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH4 0x1000000 MUL PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH1 0x8 DUP4 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND MUL OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 DUP1 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF NOT AND SWAP1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x1650 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1688 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x16C2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x100 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH4 0x1000000 MUL PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x176A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1789 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x184D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x186C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1916 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP5 ADD DUP1 SLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1976 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1995 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x19FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A1B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A51 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A70 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1AA6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1AC5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B0F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1B2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3601 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1B6E JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1B8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3542 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x21CD JUMPI PUSH1 0x1 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1BD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1EC3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C02 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1C1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3400 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C49 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1C66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x346E JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C90 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1CAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x362E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xC ADD DUP1 SLOAD PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND CALLER PUSH4 0x1000000 MUL OR PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D07 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1D83 JUMPI PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x1D4C SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1E46 JUMPI DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DEE SWAP3 SWAP2 SWAP1 PUSH2 0x32C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E40 SWAP2 SWAP1 PUSH2 0x3128 JUMP JUMPDEST POP PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E6D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1EBE JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 PUSH1 0x80 ADD MLOAD PUSH1 0x80 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1EBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1EE9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x21CD JUMPI PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F19 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1F36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3567 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1F7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x33D1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1FA7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1FC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3437 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND CALLER PUSH4 0x1000000 MUL OR PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x201E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x209B JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2064 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2092 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x20C2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2158 JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2106 SWAP3 SWAP2 SWAP1 PUSH2 0x32C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2134 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EBC SWAP2 SWAP1 PUSH2 0x3128 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x217F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x21CD JUMPI PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x21CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB46 JUMPI PUSH1 0x1 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2215 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2506 JUMPI PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2245 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2262 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3567 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x228C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x22A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x33D1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x22D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x22F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3437 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 ADD DUP1 SLOAD PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND CALLER PUSH4 0x1000000 MUL OR PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x234A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x23C7 JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2390 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x23EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x248A JUMPI DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2432 SWAP3 SWAP2 SWAP1 PUSH2 0x32C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x244C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2460 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2484 SWAP2 SWAP1 PUSH2 0x3128 JUMP JUMPDEST POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x24B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x8BC JUMPI DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0x80 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2500 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x252C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xB46 JUMPI PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x255C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3400 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x25A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x25C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x346E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xC ADD DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND CALLER PUSH4 0x1000000 MUL OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x261A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2696 JUMPI PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x265F SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x268D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x26BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x2753 JUMPI DUP1 PUSH1 0x80 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2701 SWAP3 SWAP2 SWAP1 PUSH2 0x32C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x271B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x272F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2500 SWAP2 SWAP1 PUSH2 0x3128 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x80 DUP3 ADD MLOAD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x277A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xB46 JUMPI PUSH1 0x80 DUP1 DUP3 ADD MLOAD PUSH1 0x20 DUP2 ADD MLOAD SWAP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP2 ISZERO PUSH2 0x8FC MUL SWAP2 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x27C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x2827 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2846 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2884 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x28A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x290A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2929 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x295F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x297E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x29B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x29D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP5 ADD DUP1 SLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A33 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A52 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x2AB9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2AD8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B0E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B63 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B82 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH4 0x1000000 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 MSTORE DUP3 MLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 SWAP2 AND CALLER EQ SWAP1 POP PUSH2 0x2BD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2BF7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x2C14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x339A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2C3E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0x2C72 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2C70 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ JUMPDEST PUSH2 0x2C8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x349D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP1 DUP5 ADD SLOAD DUP7 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP8 MSTORE SWAP5 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP7 SWAP3 SWAP6 PUSH1 0xFF SWAP1 DUP2 AND SWAP6 SWAP5 SWAP2 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0x2D17 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2D36 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x2D9D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2DBC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2DF2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2E11 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2E47 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2E66 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2EBE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2EDD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x2F44 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2F63 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2F99 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2FB8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2FEE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x300D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 POP DUP6 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3048 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x3048 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3071 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x307A DUP6 PUSH2 0x3031 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 PUSH2 0x3089 DUP2 DUP8 ADD PUSH2 0x3031 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x30AC JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30BF JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x30D1 JUMPI PUSH2 0x30D1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD DUP6 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x30F4 JUMPI PUSH2 0x30F4 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD DUP6 ADD DUP12 LT ISZERO PUSH2 0x310A JUMPI DUP6 DUP7 REVERT JUMPDEST DUP2 DUP6 DUP6 ADD DUP7 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3139 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3148 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x316D JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x3176 DUP11 PUSH2 0x304D JUMP JUMPDEST SWAP9 POP PUSH2 0x3184 PUSH1 0x20 DUP12 ADD PUSH2 0x3031 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH2 0x31A0 PUSH1 0x80 DUP12 ADD PUSH2 0x304D JUMP JUMPDEST SWAP5 POP PUSH2 0x31AE PUSH1 0xA0 DUP12 ADD PUSH2 0x3031 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP3 POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x100 DUP11 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31E4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x3208 JUMPI PUSH2 0x3208 PUSH2 0x36F8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3217 DUP2 PUSH2 0x3724 JUMP JUMPDEST DUP1 DUP4 MSTORE POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE DUP1 PUSH1 0x40 DUP5 ADD MLOAD AND PUSH1 0x40 DUP6 ADD MSTORE POP POP PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x3263 PUSH1 0xA0 DUP5 ADD DUP3 PUSH2 0x31F8 JUMP JUMPDEST POP PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x3276 PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0x31F8 JUMP JUMPDEST POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x3289 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x31F8 JUMP JUMPDEST POP PUSH2 0x100 DUP1 DUP3 ADD MLOAD PUSH2 0x329D DUP3 DUP6 ADD DUP3 PUSH2 0x31EB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH2 0x2A0 DUP2 ADD PUSH2 0x3301 DUP6 PUSH2 0x3724 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3314 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x320C JUMP JUMPDEST PUSH2 0x3322 PUSH2 0x180 DUP4 ADD DUP5 PUSH2 0x320C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x105CDCD95D081A59081B9BDD081B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x506C65617365207061792074686520666565 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6F636B626F78206973206E6F742070656E64696E6720616E796D6F72650000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x105CDCD95D0810481A5CC81B9BDD081B1BD8DAD959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4173736574204220697320616C726561647920636C61696D6564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x41737365742041206973206E6F7420617070726F766564000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x105CDCD95D0810881A5CC81B9BDD081B1BD8DAD959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616E63656C20746865206C6F636B626F78206E6F77000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x417373657420697320616C7265616479206C6F636B6564000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6F636B426F78206973206E6F742070656E64696E6720616E796D6F72650000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x139BDD08185B1B1BDDD959 PUSH1 0xAA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4173736574204120697320616C726561647920636C61696D6564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x417373657420697320616C726561647920617070726F76656400000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x131BD8DAD89BDE081A5CC8195E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x131BD8DAD09BDE081A5CC818D85B98D95B1959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x41737365742042206973206E6F7420617070726F766564000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x1B1BD8DAD89BDE081A5CC8195E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C6F636B696E672066756E6473000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x36F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3734 JUMPI PUSH2 0x3734 PUSH2 0x36F8 JUMP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xFC 0xB3 EQ 0x2D DUP13 DUP2 NOT 0xCA 0x4F 0xE 0xB8 STOP 0x5D SIGNEXTEND 0xE3 LOG1 0xB8 0xC5 DUP14 0xCF MSIZE LOG4 NOT 0xAF LOG1 JUMPDEST STATICCALL SAR PUSH1 0x58 0xB4 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "145:18123:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;213:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1190:207:0;;;;;;;;;;-1:-1:-1;1190:207:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2510:2627:4:-;;;;;;:::i;:::-;;:::i;:::-;;187:19;;;;;;;;;;;;;:::i;250:38::-;;;;;;;;;;;;;:::i;5145:1463::-;;;;;;;;;;-1:-1:-1;5145:1463:4;;;;;:::i;:::-;;:::i;1237:1265::-;;;;;;:::i;:::-;;:::i;6620:4951::-;;;;;;;;;;-1:-1:-1;6620:4951:4;;;;;:::i;:::-;;:::i;11579:568::-;;;;;;;;;;-1:-1:-1;11579:568:4;;;;;:::i;:::-;;:::i;297:48::-;;;;;;;;;;-1:-1:-1;297:48:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;213:30::-;;;;:::o;1190:207:0:-;-1:-1:-1;;;1190:207:0;;;;;;:::o;2510:2627:4:-;2567:27;2597:16;;;:11;:16;;;;;;;;2567:46;;;;;;;;;-1:-1:-1;;;;;2567:46:4;;;;;;;;;;;;;;;;;;;2597:16;;2567:46;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;-1:-1:-1;;;;;2567:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2567:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;-1:-1:-1;;;;;2567:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;2567:46:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2567:46:4;;;;;;;;-1:-1:-1;2567:46:4;-1:-1:-1;;2642:8:4;:15;;;:33;;;;;;-1:-1:-1;;;2642:33:4;;;;;;;;;;2634:76;;;;-1:-1:-1;;;2634:76:4;;;;;;;:::i;:::-;;;;;;;;;2748:8;:19;;;2730:15;:37;2721:71;;;;-1:-1:-1;;;2721:71:4;;;;;;;:::i;:::-;2985:8;:15;;;:21;;;-1:-1:-1;;;;;2971:35:4;:10;-1:-1:-1;;;;;2971:35:4;;2968:2146;;;3060:21;3030:8;:15;;;:26;;;:51;;;;;;-1:-1:-1;;;3030:51:4;;;;;;;;;;3022:88;;;;-1:-1:-1;;;3022:88:4;;;;;;;:::i;:::-;3198:13;3169:15;;;;:25;:42;;;;;;-1:-1:-1;;;3169:42:4;;;;;;;;;;3166:799;;;3240:8;:15;;;:28;;;-1:-1:-1;;;;;3232:50:4;;3283:10;3303:4;3310:8;:15;;;:23;;;3232:102;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3353:16:4;;;;:11;:16;;;;;:34;;:54;;3390:17;;-1:-1:-1;;;3353:54:4;3390:17;;3353:54;;;;;;3166:799;;;3474:15;3445;;;;:25;:44;;;;;;-1:-1:-1;;;3445:44:4;;;;;;;;;;3442:523;;;3517:15;;;;:28;;;;;3587:29;;;;;3510:107;;-1:-1:-1;;;3510:107:4;;-1:-1:-1;;;;;3510:49:4;;;;;;:107;;3560:10;;3580:4;;3510:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3636:16:4;;;;:11;:16;;;;;:34;;:54;;3673:17;;3636:34;-1:-1:-1;;3636:54:4;3673:17;;3636:54;;3442:523;3759:14;3730:15;;;;:25;:43;;;;;;-1:-1:-1;;;3730:43:4;;;;;;;;;;3727:238;;;3815:8;:15;;;:29;;;3802:9;:42;;3794:82;;;;-1:-1:-1;;;3794:82:4;;;;;;;:::i;:::-;3895:16;;;;:11;:16;;;;;:34;;:54;;3932:17;;3895:34;-1:-1:-1;;3895:54:4;3932:17;;3895:54;;;;;;3727:238;2968:2146;;;4010:16;;;;:11;:16;;;;;:23;;:42;;-1:-1:-1;;;;;;4010:42:4;4042:10;4010:42;;;;;4077:8;:15;;;:26;;;:51;;;;;;-1:-1:-1;;;4077:51:4;;;;;;;;;;4069:88;;;;-1:-1:-1;;;4069:88:4;;;;;;;:::i;:::-;4334:13;4305:15;;;;:25;:42;;;;;;-1:-1:-1;;;4305:42:4;;;;;;;;;;4302:799;;;4376:15;;;;:28;;;;;4446:23;;;;;4368:102;;-1:-1:-1;;;4368:102:4;;-1:-1:-1;;;;;4368:50:4;;;;;;:102;;4419:10;;4439:4;;4368:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4489:16:4;;;;:11;:16;;;;;:34;;:54;;4526:17;;-1:-1:-1;;;4489:54:4;4526:17;;4489:54;;4302:799;4610:15;4581;;;;:25;:44;;;;;;-1:-1:-1;;;4581:44:4;;;;;;;;;;4578:523;;;4653:8;:15;;;:28;;;-1:-1:-1;;;;;4646:49:4;;4696:10;4716:4;4723:8;:15;;;:29;;;4646:107;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4772:16:4;;;;:11;:16;;;;;:34;;:54;;4809:17;;4772:34;-1:-1:-1;;4772:54:4;4809:17;;4772:54;;4578:523;4895:14;4866:15;;;;:25;:43;;;;;;-1:-1:-1;;;4866:43:4;;;;;;;;;;4863:238;;;4951:8;:15;;;:29;;;4938:9;:42;;4930:82;;;;-1:-1:-1;;;4930:82:4;;;;;;;:::i;:::-;5031:16;;;;:11;:16;;;;;:34;;:54;;5068:17;;5031:34;-1:-1:-1;;5031:54:4;5068:17;;5031:54;;;;;;4863:238;2510:2627;;:::o;187:19::-;;;;:::o;250:38::-;;;;:::o;5145:1463::-;5197:27;5227:16;;;:11;:16;;;;;;;;5197:46;;;;;;;;;-1:-1:-1;;;;;5197:46:4;;;;;;;;;;;;;;;;;;;5227:16;;5197:46;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;-1:-1:-1;;;;;5197:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5197:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;-1:-1:-1;;;;;5197:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;5197:46:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5197:46:4;;;;;;;;-1:-1:-1;5197:46:4;-1:-1:-1;;5272:8:4;:15;;;:33;;;;;;-1:-1:-1;;;5272:33:4;;;;;;;;;;5264:76;;;;-1:-1:-1;;;5264:76:4;;;;;;;:::i;:::-;5378:8;:19;;;5360:15;:37;5351:70;;;;-1:-1:-1;;;5351:70:4;;;;;;;:::i;:::-;5454:8;:15;;;:21;;;-1:-1:-1;;;;;5440:35:4;:10;-1:-1:-1;;;;;5440:35:4;;:74;;;;5493:8;:15;;;:21;;;-1:-1:-1;;;;;5479:35:4;:10;-1:-1:-1;;;;;5479:35:4;;5440:74;5432:98;;;;-1:-1:-1;;;5432:98:4;;;;;;;:::i;:::-;5560:8;:15;;;:21;;;-1:-1:-1;;;;;5546:35:4;:10;-1:-1:-1;;;;;5546:35:4;;5543:523;;;5649:17;5619:8;:15;;;:26;;;:47;;;;;;-1:-1:-1;;;5619:47:4;;;;;;;;;;5611:80;;;;-1:-1:-1;;;5611:80:4;;;;;;;:::i;:::-;5748:27;5714:8;:15;;;:30;;;:61;;;;;;-1:-1:-1;;;5714:61:4;;;;;;;;;;5706:99;;;;-1:-1:-1;;;5706:99:4;;;;;;;:::i;:::-;5836:16;;;;:11;:16;;;;;:38;;:64;;-1:-1:-1;;5836:64:4;;;;;5920:15;;;;:30;;;-1:-1:-1;;5920:57:4;;;;;;-1:-1:-1;;;5920:57:4;;;;;;;;;;5917:136;;;5997:16;;;;:11;:16;;;;;:23;;:40;;-1:-1:-1;;5997:40:4;6023:14;5997:40;;;5917:136;6095:8;:15;;;:21;;;-1:-1:-1;;;;;6081:35:4;:10;-1:-1:-1;;;;;6081:35:4;;6078:509;;;6172:17;6142:8;:15;;;:26;;;:47;;;;;;-1:-1:-1;;;6142:47:4;;;;;;;;;;6134:80;;;;-1:-1:-1;;;6134:80:4;;;;;;;:::i;:::-;6271:27;6237:8;:15;;;:30;;;:61;;;;;;-1:-1:-1;;;6237:61:4;;;;;;;;;;6229:99;;;;-1:-1:-1;;;6229:99:4;;;;;;;:::i;:::-;6359:16;;;;:11;:16;;;;;:38;;:64;;-1:-1:-1;;6359:64:4;;;;;6443:15;;;;:30;;;-1:-1:-1;;6443:57:4;;;;;;-1:-1:-1;;;6443:57:4;;;;;;;;;;6440:136;;;6520:16;;;;:11;:16;;;;;:23;;:40;;6546:14;;6520:23;-1:-1:-1;;6520:40:4;6546:14;;6520:40;;1237:1265;1543:6;;1530:9;:19;;1522:50;;;;-1:-1:-1;;;1522:50:4;;;;;;;:::i;:::-;1585:7;:9;;;:7;:9;;;:::i;:::-;;;;;;1607:20;1630:293;;;;;;;;1651:11;1630:293;;;;;;-1:-1:-1;;;1630:293:4;;;;;;;;;;;1678:10;1630:293;;;;-1:-1:-1;;;;;1630:293:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1630:293:4;;;;1822:27;1630:293;;;;1864:23;1630:293;;;;1910:1;-1:-1:-1;;;;;1630:293:4;;;;1607:316;;1936:20;1959:293;;;;;;;;1980:11;1959:293;;;;;;-1:-1:-1;;;1959:293:4;;;;;;;;;;;;;2015:1;-1:-1:-1;;;;;1959:293:4;;;;;2032:14;-1:-1:-1;;;;;1959:293:4;;;;;2061:9;1959:293;;;;2085:15;1959:293;;;;2115:21;1959:293;;;;;;-1:-1:-1;;;1959:293:4;;;;;;;;;;;2151:27;1959:293;;;;;;;;;;;;;;;;;;;;;2296:146;;;;;;;2322:10;2296:146;;;;;;;;;;;;;;;;;;;;;;;;;;2469:7;;2457:20;;:11;:20;;;;;:31;;;;-1:-1:-1;;;;;;2457:31:4;-1:-1:-1;;;;;2457:31:4;;;;;;;;-1:-1:-1;2457:31:4;;;;;;;;;;;;;;;2296:146;;-1:-1:-1;2296:146:4;;;;2457:20;;:31;;-1:-1:-1;;2457:31:4;;;;;;;;;;;-1:-1:-1;;;2457:31:4;;;;;;;;;;;;;-1:-1:-1;2457:31:4;;;;;;;;;;;;;;;;-1:-1:-1;;2457:31:4;;;;;;;;;-1:-1:-1;;;2457:31:4;;;;;;;;;;;;;-1:-1:-1;2457:31:4;;;;;;-1:-1:-1;;;;;;2457:31:4;;-1:-1:-1;;;;;2457:31:4;;;;;;;;;;;-1:-1:-1;2457:31:4;;;;;-1:-1:-1;;;;;;2457:31:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2457:31:4;;;;;;;;;-1:-1:-1;;;2457:31:4;;;;;;;;;;;;;-1:-1:-1;2457:31:4;;;;;;;;;-1:-1:-1;;2457:31:4;;;;;;;;;-1:-1:-1;;;2457:31:4;;;;;;;;;;;;;-1:-1:-1;2457:31:4;;;;;;;;;-1:-1:-1;;2457:31:4;;;;;;;;;-1:-1:-1;;;2457:31:4;;;;;;;;;;;;;-1:-1:-1;2457:31:4;;;;;;;;;;;;-1:-1:-1;;;;;2457:31:4;;;;;-1:-1:-1;;;;;;2457:31:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2457:31:4;-1:-1:-1;2457:31:4;;;;;;;-1:-1:-1;;;2457:31:4;;;;;;;;;;;;;-1:-1:-1;2457:31:4;;;;;;-1:-1:-1;;;;;;2457:31:4;;-1:-1:-1;;;;;2457:31:4;;;;;;;;;;;-1:-1:-1;2457:31:4;;;;;-1:-1:-1;;;;;;2457:31:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2457:31:4;;;;;;;;;-1:-1:-1;;;2457:31:4;;;;;;;;;;;;;-1:-1:-1;2457:31:4;;;;;;;;;-1:-1:-1;;2457:31:4;;;;;;;;;-1:-1:-1;;;2457:31:4;;;;;;;;;;;;;-1:-1:-1;2457:31:4;;;;;;;;;-1:-1:-1;;2457:31:4;;;;;;;;;-1:-1:-1;;;2457:31:4;;;;;;;;;;;;;-1:-1:-1;2457:31:4;;;;;;;;;;;;-1:-1:-1;;;;;2457:31:4;;;;;-1:-1:-1;;;;;;2457:31:4;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;1237:1265:4:o;6620:4951::-;6671:27;6701:16;;;:11;:16;;;;;;;;6671:46;;;;;;;;;-1:-1:-1;;;;;6671:46:4;;;;;;;;;;;;;;;;;;;6701:16;;6671:46;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;-1:-1:-1;;;;;6671:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6671:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;-1:-1:-1;;;;;6671:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;6671:46:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6671:46:4;;;;;;;;-1:-1:-1;6671:46:4;-1:-1:-1;6755:13:4;6736:8;:15;;;:32;;;;;;-1:-1:-1;;;6736:32:4;;;;;;;;;;;6728:64;;;;-1:-1:-1;;;6728:64:4;;;;;;;:::i;:::-;6825:8;:15;;;:21;;;-1:-1:-1;;;;;6811:35:4;:10;-1:-1:-1;;;;;6811:35:4;;:74;;;;6864:8;:15;;;:21;;;-1:-1:-1;;;;;6850:35:4;:10;-1:-1:-1;;;;;6850:35:4;;6811:74;6803:98;;;;-1:-1:-1;;;6803:98:4;;;;;;;:::i;:::-;6931:8;:15;;;:21;;;-1:-1:-1;;;;;6917:35:4;:10;-1:-1:-1;;;;;6917:35:4;;6914:2366;;;6993:14;6974:8;:15;;;:33;;;;;;-1:-1:-1;;;6974:33:4;;;;;;;;;;6971:2296;;;7067:23;7036:8;:15;;;:27;;;:54;;;;;;-1:-1:-1;;;7036:54:4;;;;;;;;;;7027:95;;;;-1:-1:-1;;;7027:95:4;;;;;;;:::i;:::-;7180:17;7150:8;:15;;;:26;;;:47;;;;;;-1:-1:-1;;;7150:47:4;;;;;;;;;;7141:83;;;;-1:-1:-1;;;7141:83:4;;;;;;;:::i;:::-;7286:23;7252:8;:15;;;:30;;;:57;;;;;;-1:-1:-1;;;7252:57:4;;;;;;;;;;7243:95;;;;-1:-1:-1;;;7243:95:4;;;;;;;:::i;:::-;7359:16;;;;:11;:16;;;;;:33;;:46;;-1:-1:-1;;;;;;7359:46:4;7395:10;7359:46;;;-1:-1:-1;;7424:57:4;;;;;7505:15;;;;:25;:42;;;;;;-1:-1:-1;;;7505:42:4;;;;;;;;;;7502:579;;;7580:15;;;;:28;;;;;7650:23;;;;;7572:102;;-1:-1:-1;;;7572:102:4;;-1:-1:-1;;;;;7572:50:4;;;;;;:102;;7631:4;;7638:10;;7572:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7502:579;;;7749:15;7720;;;;:25;:44;;;;;;-1:-1:-1;;;7720:44:4;;;;;;;;;;7717:364;;;7796:8;:15;;;:28;;;-1:-1:-1;;;;;7789:45:4;;7835:10;7847:8;:15;;;:29;;;7789:88;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7717:364;;;7952:14;7923:15;;;;:25;:43;;;;;;-1:-1:-1;;;7923:43:4;;;;;;;;;;7920:161;;;7999:8;:15;;;:21;;;-1:-1:-1;;;;;7991:39:4;:70;8031:8;:15;;;:29;;;7991:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7920:161;6971:2296;;;8139:13;8120:8;:15;;;:32;;;;;;-1:-1:-1;;;8120:32:4;;;;;;;;;;8117:1150;;;8230:23;8199:8;:15;;;:27;;;:54;;;;;;-1:-1:-1;;;8199:54:4;;;;;;;;;;8190:95;;;;-1:-1:-1;;;8190:95:4;;;;;;;:::i;:::-;8343:17;8313:8;:15;;;:26;;;:47;;;;;;-1:-1:-1;;;8313:47:4;;;;;;;;;;8304:83;;;;-1:-1:-1;;;8304:83:4;;;;;;;:::i;:::-;8449:23;8415:8;:15;;;:30;;;:57;;;;;;-1:-1:-1;;;8415:57:4;;;;;;;;;;8406:95;;;;-1:-1:-1;;;8406:95:4;;;;;;;:::i;:::-;8526:16;;;;:11;:16;;;;;:33;;:46;;-1:-1:-1;;;;;;8526:46:4;8562:10;8526:46;;;-1:-1:-1;;8591:57:4;;;;;8672:15;;;;:25;:42;;;;;;-1:-1:-1;;;8672:42:4;;;;;;;;;;8669:579;;;8747:8;:15;;;:28;;;-1:-1:-1;;;;;8739:50:4;;8798:4;8805:10;8817:8;:15;;;:23;;;8739:102;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8669:579;;;8916:15;8887;;;;:25;:44;;;;;;-1:-1:-1;;;8887:44:4;;;;;;;;;;8884:364;;;8963:8;:15;;;:28;;;-1:-1:-1;;;;;8956:45:4;;9002:10;9014:8;:15;;;:29;;;8956:88;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8884:364::-;9119:14;9090:15;;;;:25;:43;;;;;;-1:-1:-1;;;9090:43:4;;;;;;;;;;9087:161;;;9166:15;;;;:21;;;;9198:29;;;;;9158:70;;-1:-1:-1;;;;;9158:39:4;;;;:70;;;;;9198:29;9158:70;;;;9198:29;9158:39;:70;;;;;;;;;;;;;;;;;;;;;9087:161;9309:8;:15;;;:21;;;-1:-1:-1;;;;;9295:35:4;:10;-1:-1:-1;;;;;9295:35:4;;9292:2268;;;9383:14;9364:8;:15;;;:33;;;;;;-1:-1:-1;;;9364:33:4;;;;;;;;;;9361:2186;;;9476:23;9445:8;:15;;;:27;;;:54;;;;;;-1:-1:-1;;;9445:54:4;;;;;;;;;;9436:95;;;;-1:-1:-1;;;9436:95:4;;;;;;;:::i;:::-;9589:17;9559:8;:15;;;:26;;;:47;;;;;;-1:-1:-1;;;9559:47:4;;;;;;;;;;9550:83;;;;-1:-1:-1;;;9550:83:4;;;;;;;:::i;:::-;9695:23;9661:8;:15;;;:30;;;:57;;;;;;-1:-1:-1;;;9661:57:4;;;;;;;;;;9652:95;;;;-1:-1:-1;;;9652:95:4;;;;;;;:::i;:::-;9768:16;;;;:11;:16;;;;;:33;;:46;;-1:-1:-1;;;;;;9768:46:4;9804:10;9768:46;;;-1:-1:-1;;9833:57:4;;;;;9914:15;;;;:25;:42;;;;;;-1:-1:-1;;;9914:42:4;;;;;;;;;;9911:579;;;9989:8;:15;;;:28;;;-1:-1:-1;;;;;9981:50:4;;10040:4;10047:10;10059:8;:15;;;:23;;;9981:102;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9911:579;;;10158:15;10129;;;;:25;:44;;;;;;-1:-1:-1;;;10129:44:4;;;;;;;;;;10126:364;;;10205:8;:15;;;:28;;;-1:-1:-1;;;;;10198:45:4;;10244:10;10256:8;:15;;;:29;;;10198:88;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10126:364;;;10361:14;10332:15;;;;:25;:43;;;;;;-1:-1:-1;;;10332:43:4;;;;;;;;;;10329:161;;;10408:8;:15;;;:21;;;-1:-1:-1;;;;;10400:39:4;:70;10440:8;:15;;;:29;;;10400:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9361:2186;;;10554:13;10535:8;:15;;;:32;;;;;;-1:-1:-1;;;10535:32:4;;;;;;;;;;10532:1015;;;10630:23;10599:8;:15;;;:27;;;:54;;;;;;-1:-1:-1;;;10599:54:4;;;;;;;;;;10590:95;;;;-1:-1:-1;;;10590:95:4;;;;;;;:::i;:::-;10743:17;10713:8;:15;;;:26;;;:47;;;;;;-1:-1:-1;;;10713:47:4;;;;;;;;;;10704:83;;;;-1:-1:-1;;;10704:83:4;;;;;;;:::i;:::-;10808:16;;;;:11;:16;;;;;:35;;:57;;-1:-1:-1;;10808:57:4;;;-1:-1:-1;;;;;;10884:46:4;10920:10;10884:46;;;;;10954:15;;;;:25;:42;;;;;;-1:-1:-1;;;10954:42:4;;;;;;;;;;10951:579;;;11029:15;;;;:28;;;;;11099:23;;;;;11021:102;;-1:-1:-1;;;11021:102:4;;-1:-1:-1;;;;;11021:50:4;;;;;;:102;;11080:4;;11087:10;;11021:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10951:579;;;11198:15;11169;;;;:25;:44;;;;;;-1:-1:-1;;;11169:44:4;;;;;;;;;;11166:364;;;11245:8;:15;;;:28;;;-1:-1:-1;;;;;11238:45:4;;11284:10;11296:8;:15;;;:29;;;11238:88;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11166:364::-;11401:14;11372:15;;;;:25;:43;;;;;;-1:-1:-1;;;11372:43:4;;;;;;;;;;11369:161;;;11448:15;;;;;:21;;;;11480:29;;;11440:70;;-1:-1:-1;;;;;11440:39:4;;;;:70;;;;;11480:29;11440:70;;;;11480:29;11440:39;:70;;;;;;;;;;;;;;;;;;;;;6620:4951;;:::o;11579:568::-;11630:27;11660:16;;;:11;:16;;;;;;;;11630:46;;;;;;;;;-1:-1:-1;;;;;11630:46:4;;;;;;;;;;;;;;;;;;;11660:16;;11630:46;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;-1:-1:-1;;;;;11630:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11630:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;-1:-1:-1;;;;;11630:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;-1:-1:-1;;;11630:46:4;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11630:46:4;;;;;;;;;;;;;;;;11705:21;;11630:46;;-1:-1:-1;11705:35:4;;;;11730:10;11705:35;;-1:-1:-1;11697:59:4;;;;-1:-1:-1;;;11697:59:4;;;;;;;:::i;:::-;11794:14;11775:8;:15;;;:33;;;;;;-1:-1:-1;;;11775:33:4;;;;;;;;;;11767:77;;;;-1:-1:-1;;;11767:77:4;;;;;;;:::i;:::-;11921:27;11887:8;:15;;;:30;;;:61;;;;;;-1:-1:-1;;;11887:61:4;;;;;;;;;;:139;;;;-1:-1:-1;11999:27:4;11965:8;:15;;;:30;;;:61;;;;;;-1:-1:-1;;;11965:61:4;;;;;;;;;;11887:139;11865:220;;;;-1:-1:-1;;;11865:220:4;;;;;;;:::i;:::-;12098:16;;;;:11;:16;;;;;12124:13;12098:23;;;:39;;-1:-1:-1;;12098:39:4;;12124:13;12098:39;;297:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;297:48:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;-1:-1:-1;;;;;297:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;297:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;-1:-1:-1;;;;;297:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;297:48:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;297:48:4;;;;;;;-1:-1:-1;297:48:4;:::o;14:175:5:-;84:20;;-1:-1:-1;;;;;133:31:5;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:153::-;272:20;;321:1;311:12;;301:2;;337:1;334;327:12;352:1178;;;;;524:3;512:9;503:7;499:23;495:33;492:2;;;546:6;538;531:22;492:2;574:31;595:9;574:31;:::i;:::-;564:41;;624:2;645:40;681:2;670:9;666:18;645:40;:::i;:::-;635:50;;732:2;721:9;717:18;704:32;694:42;;787:2;776:9;772:18;759:32;810:18;851:2;843:6;840:14;837:2;;;872:6;864;857:22;837:2;915:6;904:9;900:22;890:32;;960:7;953:4;949:2;945:13;941:27;931:2;;987:6;979;972:22;931:2;1028;1015:16;1050:2;1046;1043:10;1040:2;;;1056:18;;:::i;:::-;1105:2;1099:9;1174:2;1155:13;;-1:-1:-1;;1151:27:5;1139:40;;1135:49;;1199:18;;;1219:22;;;1196:46;1193:2;;;1245:18;;:::i;:::-;1281:2;1274:22;1305:18;;;1342:11;;;1338:20;;1335:33;-1:-1:-1;1332:2:5;;;1386:6;1378;1371:22;1332:2;1447;1442;1438;1434:11;1429:2;1421:6;1417:15;1404:46;1470:15;;;1466:24;;;1459:40;;;;-1:-1:-1;482:1048:5;;;;-1:-1:-1;482:1048:5;;-1:-1:-1;;482:1048:5:o;1535:297::-;;1655:2;1643:9;1634:7;1630:23;1626:32;1623:2;;;1676:6;1668;1661:22;1623:2;1713:9;1707:16;1766:5;1759:13;1752:21;1745:5;1742:32;1732:2;;1793:6;1785;1778:22;1732:2;1821:5;1613:219;-1:-1:-1;;;1613:219:5:o;1837:814::-;;;;;;;;;;2111:3;2099:9;2090:7;2086:23;2082:33;2079:2;;;2133:6;2125;2118:22;2079:2;2161:39;2190:9;2161:39;:::i;:::-;2151:49;;2219:40;2255:2;2244:9;2240:18;2219:40;:::i;:::-;2209:50;;2306:2;2295:9;2291:18;2278:32;2268:42;;2357:2;2346:9;2342:18;2329:32;2319:42;;2380:49;2424:3;2413:9;2409:19;2380:49;:::i;:::-;2370:59;;2448:41;2484:3;2473:9;2469:19;2448:41;:::i;:::-;2438:51;;2536:3;2525:9;2521:19;2508:33;2498:43;;2588:3;2577:9;2573:19;2560:33;2550:43;;2640:3;2629:9;2625:19;2612:33;2602:43;;2069:582;;;;;;;;;;;:::o;2656:190::-;;2768:2;2756:9;2747:7;2743:23;2739:32;2736:2;;;2789:6;2781;2774:22;2736:2;-1:-1:-1;2817:23:5;;2726:120;-1:-1:-1;2726:120:5:o;2851:106::-;-1:-1:-1;;;;;2919:31:5;2907:44;;2897:60::o;2962:148::-;3051:1;3044:5;3041:12;3031:2;;3057:18;;:::i;:::-;3086;;3021:89::o;3115:1002::-;3193:5;3187:12;3208:38;3243:2;3208:38;:::i;:::-;3267:2;3262:3;3255:15;;3316:4;3309:5;3305:16;3299:23;3358:1;3354;3349:3;3345:11;3341:19;3410:2;3396:12;3392:21;3385:4;3380:3;3376:14;3369:45;3475:2;3467:4;3460:5;3456:16;3450:23;3446:32;3439:4;3434:3;3430:14;3423:56;;;3528:4;3521:5;3517:16;3511:23;3504:4;3499:3;3495:14;3488:47;3584:4;3577:5;3573:16;3567:23;3560:4;3555:3;3551:14;3544:47;3639:4;3632:5;3628:16;3622:23;3654:65;3713:4;3708:3;3704:14;3688;3654:65;:::i;:::-;;3767:4;3760:5;3756:16;3750:23;3782:65;3841:4;3836:3;3832:14;3816;3782:65;:::i;:::-;;3895:4;3888:5;3884:16;3878:23;3910:65;3969:4;3964:3;3960:14;3944;3910:65;:::i;:::-;;3994:6;4048:2;4041:5;4037:14;4031:21;4061:50;4107:2;4102:3;4098:12;4082:14;4061:50;:::i;:::-;;;3167:950;;:::o;4122:375::-;-1:-1:-1;;;;;4380:15:5;;;4362:34;;4432:15;;;;4427:2;4412:18;;4405:43;4479:2;4464:18;;4457:34;;;;4312:2;4297:18;;4279:218::o;4502:274::-;-1:-1:-1;;;;;4694:32:5;;;;4676:51;;4758:2;4743:18;;4736:34;4664:2;4649:18;;4631:145::o;4781:676::-;-1:-1:-1;;;;;5154:32:5;;5136:51;;5218:2;5203:18;;5196:34;;;5123:3;5108:19;;5239:42;5274:6;5239:42;:::i;:::-;5317:6;5312:2;5301:9;5297:18;5290:34;5333:54;5383:2;5372:9;5368:18;5360:6;5333:54;:::i;:::-;5396:55;5446:3;5435:9;5431:19;5423:6;5396:55;:::i;:::-;5090:367;;;;;;;;:::o;5462:202::-;-1:-1:-1;;;;;;5624:33:5;;;;5606:52;;5594:2;5579:18;;5561:103::o;5669:343::-;5871:2;5853:21;;;5910:2;5890:18;;;5883:30;-1:-1:-1;;;5944:2:5;5929:18;;5922:49;6003:2;5988:18;;5843:169::o;6017:342::-;6219:2;6201:21;;;6258:2;6238:18;;;6231:30;-1:-1:-1;;;6292:2:5;6277:18;;6270:48;6350:2;6335:18;;6191:168::o;6364:354::-;6566:2;6548:21;;;6605:2;6585:18;;;6578:30;6644:32;6639:2;6624:18;;6617:60;6709:2;6694:18;;6538:180::o;6723:345::-;6925:2;6907:21;;;6964:2;6944:18;;;6937:30;-1:-1:-1;;;6998:2:5;6983:18;;6976:51;7059:2;7044:18;;6897:171::o;7073:350::-;7275:2;7257:21;;;7314:2;7294:18;;;7287:30;7353:28;7348:2;7333:18;;7326:56;7414:2;7399:18;;7247:176::o;7428:347::-;7630:2;7612:21;;;7669:2;7649:18;;;7642:30;7708:25;7703:2;7688:18;;7681:53;7766:2;7751:18;;7602:173::o;7780:345::-;7982:2;7964:21;;;8021:2;8001:18;;;7994:30;-1:-1:-1;;;8055:2:5;8040:18;;8033:51;8116:2;8101:18;;7954:171::o;8130:353::-;8332:2;8314:21;;;8371:2;8351:18;;;8344:30;8410:31;8405:2;8390:18;;8383:59;8474:2;8459:18;;8304:179::o;8488:347::-;8690:2;8672:21;;;8729:2;8709:18;;;8702:30;8768:25;8763:2;8748:18;;8741:53;8826:2;8811:18;;8662:173::o;8840:354::-;9042:2;9024:21;;;9081:2;9061:18;;;9054:30;9120:32;9115:2;9100:18;;9093:60;9185:2;9170:18;;9014:180::o;9199:335::-;9401:2;9383:21;;;9440:2;9420:18;;;9413:30;-1:-1:-1;;;9474:2:5;9459:18;;9452:41;9525:2;9510:18;;9373:161::o;9539:350::-;9741:2;9723:21;;;9780:2;9760:18;;;9753:30;9819:28;9814:2;9799:18;;9792:56;9880:2;9865:18;;9713:176::o;9894:349::-;10096:2;10078:21;;;10135:2;10115:18;;;10108:30;10174:27;10169:2;10154:18;;10147:55;10234:2;10219:18;;10068:175::o;10248:342::-;10450:2;10432:21;;;10489:2;10469:18;;;10462:30;-1:-1:-1;;;10523:2:5;10508:18;;10501:48;10581:2;10566:18;;10422:168::o;10595:343::-;10797:2;10779:21;;;10836:2;10816:18;;;10809:30;-1:-1:-1;;;10870:2:5;10855:18;;10848:49;10929:2;10914:18;;10769:169::o;10943:347::-;11145:2;11127:21;;;11184:2;11164:18;;;11157:30;11223:25;11218:2;11203:18;;11196:53;11281:2;11266:18;;11117:173::o;11295:342::-;11497:2;11479:21;;;11536:2;11516:18;;;11509:30;-1:-1:-1;;;11570:2:5;11555:18;;11548:48;11628:2;11613:18;;11469:168::o;11642:350::-;11844:2;11826:21;;;11883:2;11863:18;;;11856:30;11922:28;11917:2;11902:18;;11895:56;11983:2;11968:18;;11816:176::o;11997:177::-;12143:25;;;12131:2;12116:18;;12098:76::o;12179:236::-;;-1:-1:-1;;12239:17:5;;12236:2;;;-1:-1:-1;;;12279:33:5;;12335:4;12332:1;12325:15;12365:4;12286:3;12353:17;12236:2;-1:-1:-1;12407:1:5;12396:13;;12226:189::o;12420:127::-;12481:10;12476:3;12472:20;12469:1;12462:31;12512:4;12509:1;12502:15;12536:4;12533:1;12526:15;12552:127;12613:10;12608:3;12604:20;12601:1;12594:31;12644:4;12641:1;12634:15;12668:4;12665:1;12658:15;12684:117;12769:1;12762:5;12759:12;12749:2;;12775:18;;:::i;:::-;12739:62;:::o"
            },
            "methodIdentifiers": {
              "approveAsset(uint256)": "864d7e14",
              "boxFee()": "0a1053fb",
              "cancelLockBox(uint256)": "d3f29c33",
              "claimAsset(uint256)": "d3c2a592",
              "counter()": "61bc221a",
              "createLockBox(uint8,address,uint256,uint256,uint8,address,uint256,uint256,uint256)": "8a88cbbe",
              "lockAsset(uint256)": "1629614e",
              "lockBoxInfo(uint256)": "f1c5797d",
              "onERC721Received(address,address,uint256,bytes)": "150b7a02",
              "updateFee()": "758cdcf0"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"approveAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelLockBox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"claimAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum LockBox.AssetType\",\"name\":\"_assetAtype\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_assetAaddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_assetAID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_assetAQuantity\",\"type\":\"uint256\"},{\"internalType\":\"enum LockBox.AssetType\",\"name\":\"_assetBtype\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_assetBaddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_assetBID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_assetBQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expiryTime\",\"type\":\"uint256\"}],\"name\":\"createLockBox\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"lockAsset\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockBoxInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lockBoxOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"enum LockBox.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"enum LockBox.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetQuantity\",\"type\":\"uint256\"},{\"internalType\":\"enum LockBox.LockStatus\",\"name\":\"lockStatus\",\"type\":\"uint8\"},{\"internalType\":\"enum LockBox.ApprovalStatus\",\"name\":\"approvalStatus\",\"type\":\"uint8\"},{\"internalType\":\"enum LockBox.ClaimStatus\",\"name\":\"claimStatus\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"claimedBy\",\"type\":\"address\"}],\"internalType\":\"struct LockBox.Asset\",\"name\":\"assetA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum LockBox.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetQuantity\",\"type\":\"uint256\"},{\"internalType\":\"enum LockBox.LockStatus\",\"name\":\"lockStatus\",\"type\":\"uint8\"},{\"internalType\":\"enum LockBox.ApprovalStatus\",\"name\":\"approvalStatus\",\"type\":\"uint8\"},{\"internalType\":\"enum LockBox.ClaimStatus\",\"name\":\"claimStatus\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"claimedBy\",\"type\":\"address\"}],\"internalType\":\"struct LockBox.Asset\",\"name\":\"assetB\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LockBox.sol\":\"LockBox\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC721Holder.sol\":{\"keccak256\":\"0x138ffde8123533f48c93782b1c84a770c836754855eb8ce369ac144a7acec1bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c97bdab4ce7a325d7e1b5cc61f9693263789d247df8104d0262eb38f9fb905\",\"dweb:/ipfs/QmZDX9Jh7FR6rvRk1qJGYpEemfCzLQBcEsHbvvw8ncasWw\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xfa9db05dbbfc45ad2ac4e05ba5b6de325face548c07a549c06b70190d3a8d8e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17111608070f8ed682e9bc9fa935a0e2dedce81fadb4c54a445c6163b38bc74e\",\"dweb:/ipfs/QmXbAfckVcmuSee8FUGQaLD2o7nMwtoE1xp8CWagLPA1MR\"]},\"contracts/IERC721.sol\":{\"keccak256\":\"0x486e7ce5d4f79638a587d78af78241dd176b1ba853b0e1c2a086cccf1d13d6d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11dbec61bab3d8876df013757ae9e54f70a4901fe8115fabff1e33c36e347b98\",\"dweb:/ipfs/QmWRKN35GMhoVVkoSgRc2mWLXigMZNSTwJoGdD51g4H4dX\"]},\"contracts/LockBox.sol\":{\"keccak256\":\"0xe134778a2cd37979eb555d3b1241cef0ae6f916c8fcf191f82db3357301f6eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5bd06965b2069a7e3a50308d68f25b9470b8819fb7780419e17fbfa18581162\",\"dweb:/ipfs/QmeTSieCauMGFtX4DQ7wVobVwSfJDT5eJfthttmkskqz7U\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/ERC721Holder.sol": {
        "ast": {
          "absolutePath": "contracts/ERC721Holder.sol",
          "exportedSymbols": {
            "ERC721Holder": [
              40
            ],
            "IERC721Receiver": [
              17
            ]
          },
          "id": 41,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "104:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "131:156:0",
                "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
              },
              "fullyImplemented": false,
              "id": 17,
              "linearizedBaseContracts": [
                17
              ],
              "name": "IERC721Receiver",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "322:493:0",
                    "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
                  },
                  "functionSelector": "150b7a02",
                  "id": 16,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC721Received",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "857:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "857:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "884:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "884:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "907:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "907:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "933:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "933:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "846:113:0"
                  },
                  "returnParameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "978:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "978:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "977:8:0"
                  },
                  "scope": 17,
                  "src": "821:165:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 41,
              "src": "289:700:0"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 18,
                    "name": "IERC721Receiver",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 17,
                    "src": "1020:15:0"
                  },
                  "id": 19,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1020:15:0"
                }
              ],
              "contractDependencies": [
                17
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 40,
              "linearizedBaseContracts": [
                40,
                17
              ],
              "name": "ERC721Holder",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    16
                  ],
                  "body": {
                    "id": 38,
                    "nodeType": "Block",
                    "src": "1341:56:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "id": 34,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1359:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Holder_$40",
                                "typeString": "contract ERC721Holder"
                              }
                            },
                            "id": 35,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "1359:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "1359:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 33,
                        "id": 37,
                        "nodeType": "Return",
                        "src": "1352:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 20,
                    "nodeType": "StructuredDocumentation",
                    "src": "1043:141:0",
                    "text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
                  },
                  "functionSelector": "150b7a02",
                  "id": 39,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC721Received",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 30,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1315:8:0"
                  },
                  "parameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 22,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 39,
                        "src": "1226:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1226:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 24,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 39,
                        "src": "1244:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1244:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 26,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 39,
                        "src": "1262:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1262:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 28,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 39,
                        "src": "1280:12:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1280:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1215:84:0"
                  },
                  "returnParameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 39,
                        "src": "1333:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1333:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1332:8:0"
                  },
                  "scope": 40,
                  "src": "1190:207:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 41,
              "src": "995:407:0"
            }
          ],
          "src": "104:1298:0"
        },
        "id": 0
      },
      "contracts/IERC165.sol": {
        "ast": {
          "absolutePath": "contracts/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              52
            ]
          },
          "id": 53,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 42,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "103:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 43,
                "nodeType": "StructuredDocumentation",
                "src": "130:287:1",
                "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 52,
              "linearizedBaseContracts": [
                52
              ],
              "name": "IERC165",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 44,
                    "nodeType": "StructuredDocumentation",
                    "src": "444:347:1",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 51,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 47,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 46,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nodeType": "VariableDeclaration",
                        "scope": 51,
                        "src": "824:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 45,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "824:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "823:20:1"
                  },
                  "returnParameters": {
                    "id": 50,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 51,
                        "src": "867:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "867:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "866:6:1"
                  },
                  "scope": 52,
                  "src": "797:76:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 53,
              "src": "419:457:1"
            }
          ],
          "src": "103:773:1"
        },
        "id": 1
      },
      "contracts/IERC20.sol": {
        "ast": {
          "absolutePath": "contracts/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 54,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "94:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 55,
                "nodeType": "StructuredDocumentation",
                "src": "121:72:2",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 147,
              "linearizedBaseContracts": [
                147
              ],
              "name": "IERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 56,
                    "nodeType": "StructuredDocumentation",
                    "src": "219:68:2",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "06fdde03",
                  "id": 61,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "308:2:2"
                  },
                  "returnParameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 59,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "334:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "334:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "333:15:2"
                  },
                  "scope": 147,
                  "src": "295:54:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 62,
                    "nodeType": "StructuredDocumentation",
                    "src": "357:58:2",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 67,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "436:2:2"
                  },
                  "returnParameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "462:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "462:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "461:15:2"
                  },
                  "scope": 147,
                  "src": "421:56:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "485:67:2",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 73,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "575:2:2"
                  },
                  "returnParameters": {
                    "id": 72,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "601:5:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "601:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "600:7:2"
                  },
                  "scope": 147,
                  "src": "558:50:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "18160ddd",
                  "id": 78,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 74,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "638:2:2"
                  },
                  "returnParameters": {
                    "id": 77,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 76,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "664:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "664:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "663:9:2"
                  },
                  "scope": 147,
                  "src": "618:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 79,
                    "nodeType": "StructuredDocumentation",
                    "src": "681:74:2",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 86,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 82,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 81,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 86,
                        "src": "780:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 80,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "780:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "779:17:2"
                  },
                  "returnParameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 84,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 86,
                        "src": "820:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 83,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:2"
                  },
                  "scope": 147,
                  "src": "761:68:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 87,
                    "nodeType": "StructuredDocumentation",
                    "src": "837:215:2",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 96,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 89,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "1076:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1076:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "1095:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1095:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1075:35:2"
                  },
                  "returnParameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "1129:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 93,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1129:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1128:6:2"
                  },
                  "scope": 147,
                  "src": "1058:77:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 97,
                    "nodeType": "StructuredDocumentation",
                    "src": "1143:270:2",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 106,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "1438:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1438:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "1453:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1453:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1437:32:2"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 104,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "1493:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1493:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1492:9:2"
                  },
                  "scope": 147,
                  "src": "1419:83:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 107,
                    "nodeType": "StructuredDocumentation",
                    "src": "1510:655:2",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 116,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 112,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "2188:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2188:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 111,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "2205:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 110,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2205:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2187:33:2"
                  },
                  "returnParameters": {
                    "id": 115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 114,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "2239:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2239:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2238:6:2"
                  },
                  "scope": 147,
                  "src": "2171:74:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 117,
                    "nodeType": "StructuredDocumentation",
                    "src": "2253:304:2",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 128,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 119,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "2595:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2595:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "2620:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2620:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 123,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "2648:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 122,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2648:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2584:85:2"
                  },
                  "returnParameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 126,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "2688:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2688:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2687:6:2"
                  },
                  "scope": 147,
                  "src": "2563:131:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "2702:163:2",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 137,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 137,
                        "src": "2886:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2886:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 137,
                        "src": "2908:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2908:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 135,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 137,
                        "src": "2928:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 134,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2928:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2885:57:2"
                  },
                  "src": "2871:72:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 138,
                    "nodeType": "StructuredDocumentation",
                    "src": "2951:151:2",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 146,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 140,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "3123:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3123:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 142,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "3146:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3146:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 144,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "3171:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3171:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3122:63:2"
                  },
                  "src": "3108:78:2"
                }
              ],
              "scope": 148,
              "src": "195:2994:2"
            }
          ],
          "src": "94:3097:2"
        },
        "id": 2
      },
      "contracts/IERC721.sol": {
        "ast": {
          "absolutePath": "contracts/IERC721.sol",
          "exportedSymbols": {
            "IERC165": [
              52
            ],
            "IERC721": [
              263
            ]
          },
          "id": 264,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "96:23:3"
            },
            {
              "absolutePath": "contracts/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 150,
              "nodeType": "ImportDirective",
              "scope": 264,
              "sourceUnit": 53,
              "src": "123:23:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 152,
                    "name": "IERC165",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 52,
                    "src": "242:7:3"
                  },
                  "id": 153,
                  "nodeType": "InheritanceSpecifier",
                  "src": "242:7:3"
                }
              ],
              "contractDependencies": [
                52
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 151,
                "nodeType": "StructuredDocumentation",
                "src": "150:69:3",
                "text": " @dev Required interface of an ERC721 compliant contract."
              },
              "fullyImplemented": false,
              "id": 263,
              "linearizedBaseContracts": [
                263,
                52
              ],
              "name": "IERC721",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 154,
                    "nodeType": "StructuredDocumentation",
                    "src": "257:90:3",
                    "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
                  },
                  "id": 162,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 156,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "368:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 155,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "368:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 158,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "390:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "390:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 160,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "410:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 159,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "410:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "367:67:3"
                  },
                  "src": "353:82:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 163,
                    "nodeType": "StructuredDocumentation",
                    "src": "443:96:3",
                    "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
                  },
                  "id": 171,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 170,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 165,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 171,
                        "src": "560:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "560:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 167,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 171,
                        "src": "583:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "583:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 169,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 171,
                        "src": "609:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "609:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "559:74:3"
                  },
                  "src": "545:89:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 172,
                    "nodeType": "StructuredDocumentation",
                    "src": "642:119:3",
                    "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
                  },
                  "id": 180,
                  "name": "ApprovalForAll",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 174,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "788:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "788:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "811:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "811:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 178,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "837:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "837:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "787:64:3"
                  },
                  "src": "767:85:3"
                },
                {
                  "documentation": {
                    "id": 181,
                    "nodeType": "StructuredDocumentation",
                    "src": "860:78:3",
                    "text": " @dev Returns the number of tokens in ``owner``'s account."
                  },
                  "functionSelector": "70a08231",
                  "id": 188,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 184,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 183,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "963:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "963:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "962:15:3"
                  },
                  "returnParameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 186,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "1001:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1001:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1000:17:3"
                  },
                  "scope": 263,
                  "src": "944:74:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 189,
                    "nodeType": "StructuredDocumentation",
                    "src": "1026:137:3",
                    "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "6352211e",
                  "id": 196,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ownerOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 192,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 191,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "1186:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1186:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1185:17:3"
                  },
                  "returnParameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "1226:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1226:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1225:15:3"
                  },
                  "scope": 263,
                  "src": "1169:72:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 197,
                    "nodeType": "StructuredDocumentation",
                    "src": "1249:703:3",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "42842e0e",
                  "id": 206,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 199,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "1994:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 198,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1994:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "2017:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2017:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "2038:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2038:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1983:77:3"
                  },
                  "returnParameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2069:0:3"
                  },
                  "scope": 263,
                  "src": "1958:112:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 207,
                    "nodeType": "StructuredDocumentation",
                    "src": "2078:517:3",
                    "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 216,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "2633:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2633:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "2656:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 213,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "2677:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2677:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2622:77:3"
                  },
                  "returnParameters": {
                    "id": 215,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2708:0:3"
                  },
                  "scope": 263,
                  "src": "2601:108:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 217,
                    "nodeType": "StructuredDocumentation",
                    "src": "2717:464:3",
                    "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 224,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "3204:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3204:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "3216:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3216:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3203:29:3"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3241:0:3"
                  },
                  "scope": 263,
                  "src": "3187:55:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 225,
                    "nodeType": "StructuredDocumentation",
                    "src": "3250:145:3",
                    "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "081812fc",
                  "id": 232,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getApproved",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 232,
                        "src": "3422:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3422:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3421:17:3"
                  },
                  "returnParameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 232,
                        "src": "3462:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 229,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3462:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3461:18:3"
                  },
                  "scope": 263,
                  "src": "3401:79:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 233,
                    "nodeType": "StructuredDocumentation",
                    "src": "3488:318:3",
                    "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
                  },
                  "functionSelector": "a22cb465",
                  "id": 240,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 235,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "3839:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 234,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3839:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 237,
                        "mutability": "mutable",
                        "name": "_approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "3857:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 236,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3857:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3838:34:3"
                  },
                  "returnParameters": {
                    "id": 239,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3881:0:3"
                  },
                  "scope": 263,
                  "src": "3812:70:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 241,
                    "nodeType": "StructuredDocumentation",
                    "src": "3890:142:3",
                    "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
                  },
                  "functionSelector": "e985e9c5",
                  "id": 250,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "4064:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4064:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "4079:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4079:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4063:33:3"
                  },
                  "returnParameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "4120:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4120:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4119:6:3"
                  },
                  "scope": 263,
                  "src": "4038:88:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 251,
                    "nodeType": "StructuredDocumentation",
                    "src": "4134:568:3",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "b88d4fde",
                  "id": 262,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 260,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 253,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "4744:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 252,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4744:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 255,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "4767:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4767:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "4788:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4788:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "4814:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4814:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4733:107:3"
                  },
                  "returnParameters": {
                    "id": 261,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4849:0:3"
                  },
                  "scope": 263,
                  "src": "4708:142:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 264,
              "src": "221:4632:3"
            }
          ],
          "src": "96:4759:3"
        },
        "id": 3
      },
      "contracts/LockBox.sol": {
        "ast": {
          "absolutePath": "contracts/LockBox.sol",
          "exportedSymbols": {
            "ERC721Holder": [
              40
            ],
            "IERC165": [
              52
            ],
            "IERC20": [
              147
            ],
            "IERC721": [
              263
            ],
            "IERC721Receiver": [
              17
            ],
            "LockBox": [
              1456
            ]
          },
          "id": 1457,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 265,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:23:4"
            },
            {
              "absolutePath": "contracts/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 266,
              "nodeType": "ImportDirective",
              "scope": 1457,
              "sourceUnit": 148,
              "src": "62:22:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/IERC721.sol",
              "file": "./IERC721.sol",
              "id": 267,
              "nodeType": "ImportDirective",
              "scope": 1457,
              "sourceUnit": 264,
              "src": "86:23:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ERC721Holder.sol",
              "file": "./ERC721Holder.sol",
              "id": 268,
              "nodeType": "ImportDirective",
              "scope": 1457,
              "sourceUnit": 41,
              "src": "111:28:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 269,
                    "name": "ERC721Holder",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 40,
                    "src": "165:12:4"
                  },
                  "id": 270,
                  "nodeType": "InheritanceSpecifier",
                  "src": "165:12:4"
                }
              ],
              "contractDependencies": [
                17,
                40
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1456,
              "linearizedBaseContracts": [
                1456,
                40,
                17
              ],
              "name": "LockBox",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "61bc221a",
                  "id": 272,
                  "mutability": "mutable",
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "187:19:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0a1053fb",
                  "id": 275,
                  "mutability": "mutable",
                  "name": "boxFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "213:30:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "302e31",
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "234:9:4",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                      "typeString": "int_const 100000000000000000"
                    },
                    "value": "0.1"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "758cdcf0",
                  "id": 278,
                  "mutability": "mutable",
                  "name": "updateFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "250:38:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "302e303030303031",
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "274:14:4",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    },
                    "value": "0.000001"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f1c5797d",
                  "id": 283,
                  "mutability": "mutable",
                  "name": "lockBoxInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "297:48:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                    "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo)"
                  },
                  "typeName": {
                    "id": 282,
                    "keyType": {
                      "id": 279,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "306:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "297:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                      "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo)"
                    },
                    "valueType": {
                      "id": 281,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 280,
                        "name": "LockBoxInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "314:11:4"
                      },
                      "referencedDeclaration": 357,
                      "src": "314:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage_ptr",
                        "typeString": "struct LockBox.LockBoxInfo"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "LockBox.AssetNumber",
                  "id": 286,
                  "members": [
                    {
                      "id": 284,
                      "name": "ONE",
                      "nodeType": "EnumValue",
                      "src": "372:3:4"
                    },
                    {
                      "id": 285,
                      "name": "TWO",
                      "nodeType": "EnumValue",
                      "src": "376:3:4"
                    }
                  ],
                  "name": "AssetNumber",
                  "nodeType": "EnumDefinition",
                  "src": "354:26:4"
                },
                {
                  "canonicalName": "LockBox.AssetType",
                  "id": 290,
                  "members": [
                    {
                      "id": 287,
                      "name": "NFT",
                      "nodeType": "EnumValue",
                      "src": "402:3:4"
                    },
                    {
                      "id": 288,
                      "name": "TOKEN",
                      "nodeType": "EnumValue",
                      "src": "407:5:4"
                    },
                    {
                      "id": 289,
                      "name": "COIN",
                      "nodeType": "EnumValue",
                      "src": "414:4:4"
                    }
                  ],
                  "name": "AssetType",
                  "nodeType": "EnumDefinition",
                  "src": "386:33:4"
                },
                {
                  "canonicalName": "LockBox.Status",
                  "id": 294,
                  "members": [
                    {
                      "id": 291,
                      "name": "PENDING",
                      "nodeType": "EnumValue",
                      "src": "438:7:4"
                    },
                    {
                      "id": 292,
                      "name": "SUCCEED",
                      "nodeType": "EnumValue",
                      "src": "447:7:4"
                    },
                    {
                      "id": 293,
                      "name": "FAILED",
                      "nodeType": "EnumValue",
                      "src": "456:6:4"
                    }
                  ],
                  "name": "Status",
                  "nodeType": "EnumDefinition",
                  "src": "425:38:4"
                },
                {
                  "canonicalName": "LockBox.ClaimStatus",
                  "id": 297,
                  "members": [
                    {
                      "id": 295,
                      "name": "NOT_CLAIMED",
                      "nodeType": "EnumValue",
                      "src": "487:11:4"
                    },
                    {
                      "id": 296,
                      "name": "CLAIMED",
                      "nodeType": "EnumValue",
                      "src": "500:7:4"
                    }
                  ],
                  "name": "ClaimStatus",
                  "nodeType": "EnumDefinition",
                  "src": "469:39:4"
                },
                {
                  "canonicalName": "LockBox.LockStatus",
                  "id": 300,
                  "members": [
                    {
                      "id": 298,
                      "name": "NOT_LOCKED",
                      "nodeType": "EnumValue",
                      "src": "531:10:4"
                    },
                    {
                      "id": 299,
                      "name": "LOCKED",
                      "nodeType": "EnumValue",
                      "src": "543:6:4"
                    }
                  ],
                  "name": "LockStatus",
                  "nodeType": "EnumDefinition",
                  "src": "514:36:4"
                },
                {
                  "canonicalName": "LockBox.ApprovalStatus",
                  "id": 303,
                  "members": [
                    {
                      "id": 301,
                      "name": "NOT_APPROVED",
                      "nodeType": "EnumValue",
                      "src": "577:12:4"
                    },
                    {
                      "id": 302,
                      "name": "APPROVED",
                      "nodeType": "EnumValue",
                      "src": "591:8:4"
                    }
                  ],
                  "name": "ApprovalStatus",
                  "nodeType": "EnumDefinition",
                  "src": "556:44:4"
                },
                {
                  "body": {
                    "id": 319,
                    "nodeType": "Block",
                    "src": "637:96:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 308,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "656:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "656:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 310,
                                    "name": "lockBoxInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 283,
                                    "src": "670:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                      "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                    }
                                  },
                                  "id": 312,
                                  "indexExpression": {
                                    "id": 311,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 305,
                                    "src": "682:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "670:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                    "typeString": "struct LockBox.LockBoxInfo storage ref"
                                  }
                                },
                                "id": 313,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lockBoxOwner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 345,
                                "src": "670:29:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "656:43:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74206f776e6572",
                              "id": 315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "701:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
                                "typeString": "literal_string \"Not owner\""
                              },
                              "value": "Not owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
                                "typeString": "literal_string \"Not owner\""
                              }
                            ],
                            "id": 307,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "648:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "648:65:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 317,
                        "nodeType": "ExpressionStatement",
                        "src": "648:65:4"
                      },
                      {
                        "id": 318,
                        "nodeType": "PlaceholderStatement",
                        "src": "724:1:4"
                      }
                    ]
                  },
                  "id": 320,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 306,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "_id",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "627:8:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "627:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "626:10:4"
                  },
                  "src": "608:125:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "canonicalName": "LockBox.Asset",
                  "id": 343,
                  "members": [
                    {
                      "constant": false,
                      "id": 323,
                      "mutability": "mutable",
                      "name": "assetType",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "765:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AssetType_$290",
                        "typeString": "enum LockBox.AssetType"
                      },
                      "typeName": {
                        "id": 322,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 321,
                          "name": "AssetType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 290,
                          "src": "765:9:4"
                        },
                        "referencedDeclaration": 290,
                        "src": "765:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AssetType_$290",
                          "typeString": "enum LockBox.AssetType"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 325,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "795:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 324,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "795:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 327,
                      "mutability": "mutable",
                      "name": "assetAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "819:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 326,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "819:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 329,
                      "mutability": "mutable",
                      "name": "assetID",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "850:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 328,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "850:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 331,
                      "mutability": "mutable",
                      "name": "assetQuantity",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "873:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 330,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "873:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 334,
                      "mutability": "mutable",
                      "name": "lockStatus",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "902:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LockStatus_$300",
                        "typeString": "enum LockBox.LockStatus"
                      },
                      "typeName": {
                        "id": 333,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 332,
                          "name": "LockStatus",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 300,
                          "src": "902:10:4"
                        },
                        "referencedDeclaration": 300,
                        "src": "902:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_LockStatus_$300",
                          "typeString": "enum LockBox.LockStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 337,
                      "mutability": "mutable",
                      "name": "approvalStatus",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "934:29:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                        "typeString": "enum LockBox.ApprovalStatus"
                      },
                      "typeName": {
                        "id": 336,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 335,
                          "name": "ApprovalStatus",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 303,
                          "src": "934:14:4"
                        },
                        "referencedDeclaration": 303,
                        "src": "934:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                          "typeString": "enum LockBox.ApprovalStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 340,
                      "mutability": "mutable",
                      "name": "claimStatus",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "974:23:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimStatus_$297",
                        "typeString": "enum LockBox.ClaimStatus"
                      },
                      "typeName": {
                        "id": 339,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 338,
                          "name": "ClaimStatus",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 297,
                          "src": "974:11:4"
                        },
                        "referencedDeclaration": 297,
                        "src": "974:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ClaimStatus_$297",
                          "typeString": "enum LockBox.ClaimStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 342,
                      "mutability": "mutable",
                      "name": "claimedBy",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "1008:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 341,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1008:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Asset",
                  "nodeType": "StructDefinition",
                  "scope": 1456,
                  "src": "741:292:4",
                  "visibility": "public"
                },
                {
                  "canonicalName": "LockBox.LockBoxInfo",
                  "id": 357,
                  "members": [
                    {
                      "constant": false,
                      "id": 345,
                      "mutability": "mutable",
                      "name": "lockBoxOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "1071:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 344,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1071:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 347,
                      "mutability": "mutable",
                      "name": "expiryTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "1102:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 346,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1102:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "status",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "1160:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$294",
                        "typeString": "enum LockBox.Status"
                      },
                      "typeName": {
                        "id": 349,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 348,
                          "name": "Status",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 294,
                          "src": "1160:6:4"
                        },
                        "referencedDeclaration": 294,
                        "src": "1160:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$294",
                          "typeString": "enum LockBox.Status"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 353,
                      "mutability": "mutable",
                      "name": "assetA",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "1184:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Asset_$343_storage_ptr",
                        "typeString": "struct LockBox.Asset"
                      },
                      "typeName": {
                        "id": 352,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 351,
                          "name": "Asset",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 343,
                          "src": "1184:5:4"
                        },
                        "referencedDeclaration": 343,
                        "src": "1184:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$343_storage_ptr",
                          "typeString": "struct LockBox.Asset"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "assetB",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "1207:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Asset_$343_storage_ptr",
                        "typeString": "struct LockBox.Asset"
                      },
                      "typeName": {
                        "id": 355,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 354,
                          "name": "Asset",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 343,
                          "src": "1207:5:4"
                        },
                        "referencedDeclaration": 343,
                        "src": "1207:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$343_storage_ptr",
                          "typeString": "struct LockBox.Asset"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "LockBoxInfo",
                  "nodeType": "StructDefinition",
                  "scope": 1456,
                  "src": "1041:186:4",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 456,
                    "nodeType": "Block",
                    "src": "1501:1001:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 381,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1530:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1530:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 383,
                                "name": "boxFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 275,
                                "src": "1543:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1530:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506c65617365207061792074686520666565",
                              "id": 385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1551:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1d22ab37d626653099bb72f7ee05734e5c3bf33278101156fd6719470a98086b",
                                "typeString": "literal_string \"Please pay the fee\""
                              },
                              "value": "Please pay the fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1d22ab37d626653099bb72f7ee05734e5c3bf33278101156fd6719470a98086b",
                                "typeString": "literal_string \"Please pay the fee\""
                              }
                            ],
                            "id": 380,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1522:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1522:50:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 387,
                        "nodeType": "ExpressionStatement",
                        "src": "1522:50:4"
                      },
                      {
                        "expression": {
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1585:9:4",
                          "subExpression": {
                            "id": 388,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 272,
                            "src": "1585:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 390,
                        "nodeType": "ExpressionStatement",
                        "src": "1585:9:4"
                      },
                      {
                        "assignments": [
                          393
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 393,
                            "mutability": "mutable",
                            "name": "_assetA",
                            "nodeType": "VariableDeclaration",
                            "scope": 456,
                            "src": "1607:20:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                              "typeString": "struct LockBox.Asset"
                            },
                            "typeName": {
                              "id": 392,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 391,
                                "name": "Asset",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 343,
                                "src": "1607:5:4"
                              },
                              "referencedDeclaration": 343,
                              "src": "1607:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$343_storage_ptr",
                                "typeString": "struct LockBox.Asset"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 412,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 395,
                              "name": "_assetAtype",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 360,
                              "src": "1651:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AssetType_$290",
                                "typeString": "enum LockBox.AssetType"
                              }
                            },
                            {
                              "expression": {
                                "id": 396,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1678:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1678:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 398,
                              "name": "_assetAaddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 362,
                              "src": "1703:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 399,
                              "name": "_assetAID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "1732:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 400,
                              "name": "_assetAQuantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "1756:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 401,
                                "name": "LockStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 300,
                                "src": "1786:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                  "typeString": "type(enum LockBox.LockStatus)"
                                }
                              },
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NOT_LOCKED",
                              "nodeType": "MemberAccess",
                              "src": "1786:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_LockStatus_$300",
                                "typeString": "enum LockBox.LockStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 403,
                                "name": "ApprovalStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "1822:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ApprovalStatus_$303_$",
                                  "typeString": "type(enum LockBox.ApprovalStatus)"
                                }
                              },
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NOT_APPROVED",
                              "nodeType": "MemberAccess",
                              "src": "1822:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                "typeString": "enum LockBox.ApprovalStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 405,
                                "name": "ClaimStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 297,
                                "src": "1864:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$297_$",
                                  "typeString": "type(enum LockBox.ClaimStatus)"
                                }
                              },
                              "id": 406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NOT_CLAIMED",
                              "nodeType": "MemberAccess",
                              "src": "1864:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                "typeString": "enum LockBox.ClaimStatus"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1910:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1902:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 407,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1902:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1902:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_AssetType_$290",
                                "typeString": "enum LockBox.AssetType"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_LockStatus_$300",
                                "typeString": "enum LockBox.LockStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                "typeString": "enum LockBox.ApprovalStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                "typeString": "enum LockBox.ClaimStatus"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 394,
                            "name": "Asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 343,
                            "src": "1630:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Asset_$343_storage_ptr_$",
                              "typeString": "type(struct LockBox.Asset storage pointer)"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1630:293:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                            "typeString": "struct LockBox.Asset memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1607:316:4"
                      },
                      {
                        "assignments": [
                          415
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 415,
                            "mutability": "mutable",
                            "name": "_assetB",
                            "nodeType": "VariableDeclaration",
                            "scope": 456,
                            "src": "1936:20:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                              "typeString": "struct LockBox.Asset"
                            },
                            "typeName": {
                              "id": 414,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 413,
                                "name": "Asset",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 343,
                                "src": "1936:5:4"
                              },
                              "referencedDeclaration": 343,
                              "src": "1936:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$343_storage_ptr",
                                "typeString": "struct LockBox.Asset"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 436,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 417,
                              "name": "_assetBtype",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 369,
                              "src": "1980:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AssetType_$290",
                                "typeString": "enum LockBox.AssetType"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2015:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2007:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 418,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2007:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2007:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 422,
                              "name": "_assetBaddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "2032:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 423,
                              "name": "_assetBID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
                              "src": "2061:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 424,
                              "name": "_assetBQuantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "2085:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 425,
                                "name": "LockStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 300,
                                "src": "2115:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                  "typeString": "type(enum LockBox.LockStatus)"
                                }
                              },
                              "id": 426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NOT_LOCKED",
                              "nodeType": "MemberAccess",
                              "src": "2115:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_LockStatus_$300",
                                "typeString": "enum LockBox.LockStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 427,
                                "name": "ApprovalStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "2151:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ApprovalStatus_$303_$",
                                  "typeString": "type(enum LockBox.ApprovalStatus)"
                                }
                              },
                              "id": 428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NOT_APPROVED",
                              "nodeType": "MemberAccess",
                              "src": "2151:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                "typeString": "enum LockBox.ApprovalStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 429,
                                "name": "ClaimStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 297,
                                "src": "2193:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$297_$",
                                  "typeString": "type(enum LockBox.ClaimStatus)"
                                }
                              },
                              "id": 430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NOT_CLAIMED",
                              "nodeType": "MemberAccess",
                              "src": "2193:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                "typeString": "enum LockBox.ClaimStatus"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 433,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2239:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2231:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 431,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2231:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2231:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_AssetType_$290",
                                "typeString": "enum LockBox.AssetType"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_LockStatus_$300",
                                "typeString": "enum LockBox.LockStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                "typeString": "enum LockBox.ApprovalStatus"
                              },
                              {
                                "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                "typeString": "enum LockBox.ClaimStatus"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 416,
                            "name": "Asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 343,
                            "src": "1959:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Asset_$343_storage_ptr_$",
                              "typeString": "type(struct LockBox.Asset storage pointer)"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1959:293:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                            "typeString": "struct LockBox.Asset memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1936:316:4"
                      },
                      {
                        "assignments": [
                          439
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 439,
                            "mutability": "mutable",
                            "name": "_lockBox",
                            "nodeType": "VariableDeclaration",
                            "scope": 456,
                            "src": "2265:27:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                              "typeString": "struct LockBox.LockBoxInfo"
                            },
                            "typeName": {
                              "id": 438,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 437,
                                "name": "LockBoxInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 357,
                                "src": "2265:11:4"
                              },
                              "referencedDeclaration": 357,
                              "src": "2265:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage_ptr",
                                "typeString": "struct LockBox.LockBoxInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 449,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 441,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2322:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2322:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 443,
                              "name": "_expiryTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 377,
                              "src": "2347:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 444,
                                "name": "Status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 294,
                                "src": "2373:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Status_$294_$",
                                  "typeString": "type(enum LockBox.Status)"
                                }
                              },
                              "id": 445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "PENDING",
                              "nodeType": "MemberAccess",
                              "src": "2373:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$294",
                                "typeString": "enum LockBox.Status"
                              }
                            },
                            {
                              "id": 446,
                              "name": "_assetA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 393,
                              "src": "2402:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                "typeString": "struct LockBox.Asset memory"
                              }
                            },
                            {
                              "id": 447,
                              "name": "_assetB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "2424:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                "typeString": "struct LockBox.Asset memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Status_$294",
                                "typeString": "enum LockBox.Status"
                              },
                              {
                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                "typeString": "struct LockBox.Asset memory"
                              },
                              {
                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                "typeString": "struct LockBox.Asset memory"
                              }
                            ],
                            "id": 440,
                            "name": "LockBoxInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "2296:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_LockBoxInfo_$357_storage_ptr_$",
                              "typeString": "type(struct LockBox.LockBoxInfo storage pointer)"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2296:146:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                            "typeString": "struct LockBox.LockBoxInfo memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2265:177:4"
                      },
                      {
                        "expression": {
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 450,
                              "name": "lockBoxInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "2457:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                              }
                            },
                            "id": 452,
                            "indexExpression": {
                              "id": 451,
                              "name": "counter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 272,
                              "src": "2469:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2457:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                              "typeString": "struct LockBox.LockBoxInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 453,
                            "name": "_lockBox",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "2480:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                              "typeString": "struct LockBox.LockBoxInfo memory"
                            }
                          },
                          "src": "2457:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                            "typeString": "struct LockBox.LockBoxInfo storage ref"
                          }
                        },
                        "id": 455,
                        "nodeType": "ExpressionStatement",
                        "src": "2457:31:4"
                      }
                    ]
                  },
                  "functionSelector": "8a88cbbe",
                  "id": 457,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createLockBox",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 360,
                        "mutability": "mutable",
                        "name": "_assetAtype",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "1270:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AssetType_$290",
                          "typeString": "enum LockBox.AssetType"
                        },
                        "typeName": {
                          "id": 359,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 358,
                            "name": "AssetType",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 290,
                            "src": "1270:9:4"
                          },
                          "referencedDeclaration": 290,
                          "src": "1270:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AssetType_$290",
                            "typeString": "enum LockBox.AssetType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 362,
                        "mutability": "mutable",
                        "name": "_assetAaddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "1293:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 361,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1293:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "_assetAID",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "1317:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1317:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "_assetAQuantity",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "1333:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1333:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "_assetBtype",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "1364:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AssetType_$290",
                          "typeString": "enum LockBox.AssetType"
                        },
                        "typeName": {
                          "id": 368,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 367,
                            "name": "AssetType",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 290,
                            "src": "1364:9:4"
                          },
                          "referencedDeclaration": 290,
                          "src": "1364:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AssetType_$290",
                            "typeString": "enum LockBox.AssetType"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "_assetBaddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "1387:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1387:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "_assetBID",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "1411:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1411:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "_assetBQuantity",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "1427:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1427:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 377,
                        "mutability": "mutable",
                        "name": "_expiryTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "1458:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 376,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1458:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1259:226:4"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1501:0:4"
                  },
                  "scope": 1456,
                  "src": "1237:1265:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 715,
                    "nodeType": "Block",
                    "src": "2554:2583:4",
                    "statements": [
                      {
                        "assignments": [
                          464
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 464,
                            "mutability": "mutable",
                            "name": "_lockBox",
                            "nodeType": "VariableDeclaration",
                            "scope": 715,
                            "src": "2567:27:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                              "typeString": "struct LockBox.LockBoxInfo"
                            },
                            "typeName": {
                              "id": 463,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 462,
                                "name": "LockBoxInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 357,
                                "src": "2567:11:4"
                              },
                              "referencedDeclaration": 357,
                              "src": "2567:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage_ptr",
                                "typeString": "struct LockBox.LockBoxInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 468,
                        "initialValue": {
                          "baseExpression": {
                            "id": 465,
                            "name": "lockBoxInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "2597:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                              "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                            }
                          },
                          "id": 467,
                          "indexExpression": {
                            "id": 466,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "2609:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2597:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                            "typeString": "struct LockBox.LockBoxInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2567:46:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Status_$294",
                                "typeString": "enum LockBox.Status"
                              },
                              "id": 474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 470,
                                  "name": "_lockBox",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 464,
                                  "src": "2642:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                  }
                                },
                                "id": 471,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 350,
                                "src": "2642:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$294",
                                  "typeString": "enum LockBox.Status"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 472,
                                  "name": "Status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 294,
                                  "src": "2661:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Status_$294_$",
                                    "typeString": "type(enum LockBox.Status)"
                                  }
                                },
                                "id": 473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "PENDING",
                                "nodeType": "MemberAccess",
                                "src": "2661:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$294",
                                  "typeString": "enum LockBox.Status"
                                }
                              },
                              "src": "2642:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c6f636b426f78206973206e6f742070656e64696e6720616e796d6f7265",
                              "id": 475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2677:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9668d6e7736ff81111fecce7ea9d3f7795a852fefdf1940edac25e0529c55fb3",
                                "typeString": "literal_string \"LockBox is not pending anymore\""
                              },
                              "value": "LockBox is not pending anymore"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9668d6e7736ff81111fecce7ea9d3f7795a852fefdf1940edac25e0529c55fb3",
                                "typeString": "literal_string \"LockBox is not pending anymore\""
                              }
                            ],
                            "id": 469,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2634:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2634:76:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 477,
                        "nodeType": "ExpressionStatement",
                        "src": "2634:76:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 479,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2730:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2730:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 481,
                                  "name": "_lockBox",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 464,
                                  "src": "2748:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                  }
                                },
                                "id": 482,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "expiryTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 347,
                                "src": "2748:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2730:37:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6c6f636b626f782069732065787069726564",
                              "id": 484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2769:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f1afdd737eadd04d5e6817b45af6553c2648310053b36b2e9a9c276a4bd72c43",
                                "typeString": "literal_string \"lockbox is expired\""
                              },
                              "value": "lockbox is expired"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f1afdd737eadd04d5e6817b45af6553c2648310053b36b2e9a9c276a4bd72c43",
                                "typeString": "literal_string \"lockbox is expired\""
                              }
                            ],
                            "id": 478,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2721:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2721:71:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 486,
                        "nodeType": "ExpressionStatement",
                        "src": "2721:71:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 487,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2971:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2971:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 489,
                                "name": "_lockBox",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 464,
                                "src": "2985:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                }
                              },
                              "id": 490,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assetA",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 353,
                              "src": "2985:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                "typeString": "struct LockBox.Asset memory"
                              }
                            },
                            "id": 491,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 325,
                            "src": "2985:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2971:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 713,
                          "nodeType": "Block",
                          "src": "3993:1121:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 599,
                                        "name": "lockBoxInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 283,
                                        "src": "4010:11:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                          "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                        }
                                      },
                                      "id": 601,
                                      "indexExpression": {
                                        "id": 600,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 459,
                                        "src": "4022:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4010:16:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                        "typeString": "struct LockBox.LockBoxInfo storage ref"
                                      }
                                    },
                                    "id": 602,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 356,
                                    "src": "4010:23:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Asset_$343_storage",
                                      "typeString": "struct LockBox.Asset storage ref"
                                    }
                                  },
                                  "id": 603,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 325,
                                  "src": "4010:29:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 604,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4042:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 605,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4042:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4010:42:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 607,
                              "nodeType": "ExpressionStatement",
                              "src": "4010:42:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_LockStatus_$300",
                                      "typeString": "enum LockBox.LockStatus"
                                    },
                                    "id": 614,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 609,
                                          "name": "_lockBox",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 464,
                                          "src": "4077:8:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                          }
                                        },
                                        "id": 610,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetB",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 356,
                                        "src": "4077:15:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                          "typeString": "struct LockBox.Asset memory"
                                        }
                                      },
                                      "id": 611,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lockStatus",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 334,
                                      "src": "4077:26:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_LockStatus_$300",
                                        "typeString": "enum LockBox.LockStatus"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 612,
                                        "name": "LockStatus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 300,
                                        "src": "4107:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                          "typeString": "type(enum LockBox.LockStatus)"
                                        }
                                      },
                                      "id": 613,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "NOT_LOCKED",
                                      "nodeType": "MemberAccess",
                                      "src": "4107:21:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_LockStatus_$300",
                                        "typeString": "enum LockBox.LockStatus"
                                      }
                                    },
                                    "src": "4077:51:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "417373657420697320616c7265616479206c6f636b6564",
                                    "id": 615,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4130:25:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_854284b9b83c8c1fd066cb6eb38a15962848a69816ee204c8dc76e001bbfe28e",
                                      "typeString": "literal_string \"Asset is already locked\""
                                    },
                                    "value": "Asset is already locked"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_854284b9b83c8c1fd066cb6eb38a15962848a69816ee204c8dc76e001bbfe28e",
                                      "typeString": "literal_string \"Asset is already locked\""
                                    }
                                  ],
                                  "id": 608,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4069:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4069:88:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 617,
                              "nodeType": "ExpressionStatement",
                              "src": "4069:88:4"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_AssetType_$290",
                                  "typeString": "enum LockBox.AssetType"
                                },
                                "id": 623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 618,
                                      "name": "_lockBox",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 464,
                                      "src": "4305:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                      }
                                    },
                                    "id": 619,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 356,
                                    "src": "4305:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                      "typeString": "struct LockBox.Asset memory"
                                    }
                                  },
                                  "id": 620,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "assetType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 323,
                                  "src": "4305:25:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AssetType_$290",
                                    "typeString": "enum LockBox.AssetType"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 621,
                                    "name": "AssetType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 290,
                                    "src": "4334:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                      "typeString": "type(enum LockBox.AssetType)"
                                    }
                                  },
                                  "id": 622,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "NFT",
                                  "nodeType": "MemberAccess",
                                  "src": "4334:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AssetType_$290",
                                    "typeString": "enum LockBox.AssetType"
                                  }
                                },
                                "src": "4305:42:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_AssetType_$290",
                                    "typeString": "enum LockBox.AssetType"
                                  },
                                  "id": 656,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 651,
                                        "name": "_lockBox",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 464,
                                        "src": "4581:8:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                          "typeString": "struct LockBox.LockBoxInfo memory"
                                        }
                                      },
                                      "id": 652,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "assetB",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 356,
                                      "src": "4581:15:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                        "typeString": "struct LockBox.Asset memory"
                                      }
                                    },
                                    "id": 653,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetType",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 323,
                                    "src": "4581:25:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_AssetType_$290",
                                      "typeString": "enum LockBox.AssetType"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 654,
                                      "name": "AssetType",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 290,
                                      "src": "4610:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                        "typeString": "type(enum LockBox.AssetType)"
                                      }
                                    },
                                    "id": 655,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "TOKEN",
                                    "nodeType": "MemberAccess",
                                    "src": "4610:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_AssetType_$290",
                                      "typeString": "enum LockBox.AssetType"
                                    }
                                  },
                                  "src": "4581:44:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_AssetType_$290",
                                      "typeString": "enum LockBox.AssetType"
                                    },
                                    "id": 689,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 684,
                                          "name": "_lockBox",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 464,
                                          "src": "4866:8:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                          }
                                        },
                                        "id": 685,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetB",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 356,
                                        "src": "4866:15:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                          "typeString": "struct LockBox.Asset memory"
                                        }
                                      },
                                      "id": 686,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "assetType",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 323,
                                      "src": "4866:25:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AssetType_$290",
                                        "typeString": "enum LockBox.AssetType"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 687,
                                        "name": "AssetType",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 290,
                                        "src": "4895:9:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                          "typeString": "type(enum LockBox.AssetType)"
                                        }
                                      },
                                      "id": 688,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "COIN",
                                      "nodeType": "MemberAccess",
                                      "src": "4895:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AssetType_$290",
                                        "typeString": "enum LockBox.AssetType"
                                      }
                                    },
                                    "src": "4866:43:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 710,
                                  "nodeType": "IfStatement",
                                  "src": "4863:238:4",
                                  "trueBody": {
                                    "id": 709,
                                    "nodeType": "Block",
                                    "src": "4911:190:4",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 696,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 691,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "4938:3:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 692,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "value",
                                                "nodeType": "MemberAccess",
                                                "src": "4938:9:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": ">=",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 693,
                                                    "name": "_lockBox",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 464,
                                                    "src": "4951:8:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                      "typeString": "struct LockBox.LockBoxInfo memory"
                                                    }
                                                  },
                                                  "id": 694,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "assetB",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 356,
                                                  "src": "4951:15:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                    "typeString": "struct LockBox.Asset memory"
                                                  }
                                                },
                                                "id": 695,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetQuantity",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 331,
                                                "src": "4951:29:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "4938:42:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            {
                                              "hexValue": "496e73756666696369656e74206c6f636b696e672066756e6473",
                                              "id": 697,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "4982:28:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_f5b1c6a12924c6b0d031c87042002ca055bce585aed300130c06595bac7e3bb4",
                                                "typeString": "literal_string \"Insufficient locking funds\""
                                              },
                                              "value": "Insufficient locking funds"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_f5b1c6a12924c6b0d031c87042002ca055bce585aed300130c06595bac7e3bb4",
                                                "typeString": "literal_string \"Insufficient locking funds\""
                                              }
                                            ],
                                            "id": 690,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -18,
                                              -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4930:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (bool,string memory) pure"
                                            }
                                          },
                                          "id": 698,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4930:82:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 699,
                                        "nodeType": "ExpressionStatement",
                                        "src": "4930:82:4"
                                      },
                                      {
                                        "expression": {
                                          "id": 707,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "expression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 700,
                                                  "name": "lockBoxInfo",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 283,
                                                  "src": "5031:11:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                    "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                                  }
                                                },
                                                "id": 702,
                                                "indexExpression": {
                                                  "id": 701,
                                                  "name": "_id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 459,
                                                  "src": "5043:3:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "5031:16:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                                  "typeString": "struct LockBox.LockBoxInfo storage ref"
                                                }
                                              },
                                              "id": 703,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetB",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 356,
                                              "src": "5031:23:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_storage",
                                                "typeString": "struct LockBox.Asset storage ref"
                                              }
                                            },
                                            "id": 704,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "lockStatus",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 334,
                                            "src": "5031:34:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_LockStatus_$300",
                                              "typeString": "enum LockBox.LockStatus"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "expression": {
                                              "id": 705,
                                              "name": "LockStatus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 300,
                                              "src": "5068:10:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                                "typeString": "type(enum LockBox.LockStatus)"
                                              }
                                            },
                                            "id": 706,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "LOCKED",
                                            "nodeType": "MemberAccess",
                                            "src": "5068:17:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_LockStatus_$300",
                                              "typeString": "enum LockBox.LockStatus"
                                            }
                                          },
                                          "src": "5031:54:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_LockStatus_$300",
                                            "typeString": "enum LockBox.LockStatus"
                                          }
                                        },
                                        "id": 708,
                                        "nodeType": "ExpressionStatement",
                                        "src": "5031:54:4"
                                      }
                                    ]
                                  }
                                },
                                "id": 711,
                                "nodeType": "IfStatement",
                                "src": "4578:523:4",
                                "trueBody": {
                                  "id": 683,
                                  "nodeType": "Block",
                                  "src": "4627:217:4",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 663,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "4696:3:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 664,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "4696:10:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 667,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "4716:4:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_LockBox_$1456",
                                                  "typeString": "contract LockBox"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_LockBox_$1456",
                                                  "typeString": "contract LockBox"
                                                }
                                              ],
                                              "id": 666,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "4708:7:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 665,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4708:7:4",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 668,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4708:13:4",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "expression": {
                                                "id": 669,
                                                "name": "_lockBox",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 464,
                                                "src": "4723:8:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                                }
                                              },
                                              "id": 670,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetB",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 356,
                                              "src": "4723:15:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                "typeString": "struct LockBox.Asset memory"
                                              }
                                            },
                                            "id": 671,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetQuantity",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 331,
                                            "src": "4723:29:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "expression": {
                                                    "id": 658,
                                                    "name": "_lockBox",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 464,
                                                    "src": "4653:8:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                      "typeString": "struct LockBox.LockBoxInfo memory"
                                                    }
                                                  },
                                                  "id": 659,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "assetB",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 356,
                                                  "src": "4653:15:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                    "typeString": "struct LockBox.Asset memory"
                                                  }
                                                },
                                                "id": 660,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetAddress",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 327,
                                                "src": "4653:28:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 657,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 147,
                                              "src": "4646:6:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$147_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 661,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4646:36:4",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$147",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 662,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "transferFrom",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 128,
                                          "src": "4646:49:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                            "typeString": "function (address,address,uint256) external returns (bool)"
                                          }
                                        },
                                        "id": 672,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4646:107:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 673,
                                      "nodeType": "ExpressionStatement",
                                      "src": "4646:107:4"
                                    },
                                    {
                                      "expression": {
                                        "id": 681,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "expression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 674,
                                                "name": "lockBoxInfo",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 283,
                                                "src": "4772:11:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                  "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                                }
                                              },
                                              "id": 676,
                                              "indexExpression": {
                                                "id": 675,
                                                "name": "_id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 459,
                                                "src": "4784:3:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "4772:16:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                                "typeString": "struct LockBox.LockBoxInfo storage ref"
                                              }
                                            },
                                            "id": 677,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetB",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 356,
                                            "src": "4772:23:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Asset_$343_storage",
                                              "typeString": "struct LockBox.Asset storage ref"
                                            }
                                          },
                                          "id": 678,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "memberName": "lockStatus",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 334,
                                          "src": "4772:34:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_LockStatus_$300",
                                            "typeString": "enum LockBox.LockStatus"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "expression": {
                                            "id": 679,
                                            "name": "LockStatus",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 300,
                                            "src": "4809:10:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                              "typeString": "type(enum LockBox.LockStatus)"
                                            }
                                          },
                                          "id": 680,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "LOCKED",
                                          "nodeType": "MemberAccess",
                                          "src": "4809:17:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_LockStatus_$300",
                                            "typeString": "enum LockBox.LockStatus"
                                          }
                                        },
                                        "src": "4772:54:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_LockStatus_$300",
                                          "typeString": "enum LockBox.LockStatus"
                                        }
                                      },
                                      "id": 682,
                                      "nodeType": "ExpressionStatement",
                                      "src": "4772:54:4"
                                    }
                                  ]
                                }
                              },
                              "id": 712,
                              "nodeType": "IfStatement",
                              "src": "4302:799:4",
                              "trueBody": {
                                "id": 650,
                                "nodeType": "Block",
                                "src": "4349:210:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 630,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "4419:3:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 631,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "4419:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 634,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "4439:4:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_LockBox_$1456",
                                                "typeString": "contract LockBox"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_LockBox_$1456",
                                                "typeString": "contract LockBox"
                                              }
                                            ],
                                            "id": 633,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4431:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 632,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4431:7:4",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 635,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4431:13:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "expression": {
                                              "id": 636,
                                              "name": "_lockBox",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 464,
                                              "src": "4446:8:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                "typeString": "struct LockBox.LockBoxInfo memory"
                                              }
                                            },
                                            "id": 637,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetB",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 356,
                                            "src": "4446:15:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                              "typeString": "struct LockBox.Asset memory"
                                            }
                                          },
                                          "id": 638,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetID",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 329,
                                          "src": "4446:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "expression": {
                                                  "id": 625,
                                                  "name": "_lockBox",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 464,
                                                  "src": "4376:8:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                                  }
                                                },
                                                "id": 626,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetB",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 356,
                                                "src": "4376:15:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                  "typeString": "struct LockBox.Asset memory"
                                                }
                                              },
                                              "id": 627,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetAddress",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 327,
                                              "src": "4376:28:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 624,
                                            "name": "IERC721",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 263,
                                            "src": "4368:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC721_$263_$",
                                              "typeString": "type(contract IERC721)"
                                            }
                                          },
                                          "id": 628,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4368:37:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC721_$263",
                                            "typeString": "contract IERC721"
                                          }
                                        },
                                        "id": 629,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transferFrom",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 216,
                                        "src": "4368:50:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,address,uint256) external"
                                        }
                                      },
                                      "id": 639,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4368:102:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 640,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4368:102:4"
                                  },
                                  {
                                    "expression": {
                                      "id": 648,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 641,
                                              "name": "lockBoxInfo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 283,
                                              "src": "4489:11:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                              }
                                            },
                                            "id": 643,
                                            "indexExpression": {
                                              "id": 642,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 459,
                                              "src": "4501:3:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "4489:16:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                              "typeString": "struct LockBox.LockBoxInfo storage ref"
                                            }
                                          },
                                          "id": 644,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetB",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 356,
                                          "src": "4489:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Asset_$343_storage",
                                            "typeString": "struct LockBox.Asset storage ref"
                                          }
                                        },
                                        "id": 645,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "lockStatus",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 334,
                                        "src": "4489:34:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_LockStatus_$300",
                                          "typeString": "enum LockBox.LockStatus"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 646,
                                          "name": "LockStatus",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 300,
                                          "src": "4526:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                            "typeString": "type(enum LockBox.LockStatus)"
                                          }
                                        },
                                        "id": 647,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "LOCKED",
                                        "nodeType": "MemberAccess",
                                        "src": "4526:17:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_LockStatus_$300",
                                          "typeString": "enum LockBox.LockStatus"
                                        }
                                      },
                                      "src": "4489:54:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_LockStatus_$300",
                                        "typeString": "enum LockBox.LockStatus"
                                      }
                                    },
                                    "id": 649,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4489:54:4"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 714,
                        "nodeType": "IfStatement",
                        "src": "2968:2146:4",
                        "trueBody": {
                          "id": 598,
                          "nodeType": "Block",
                          "src": "3007:969:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_LockStatus_$300",
                                      "typeString": "enum LockBox.LockStatus"
                                    },
                                    "id": 499,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 494,
                                          "name": "_lockBox",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 464,
                                          "src": "3030:8:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                          }
                                        },
                                        "id": 495,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetA",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 353,
                                        "src": "3030:15:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                          "typeString": "struct LockBox.Asset memory"
                                        }
                                      },
                                      "id": 496,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lockStatus",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 334,
                                      "src": "3030:26:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_LockStatus_$300",
                                        "typeString": "enum LockBox.LockStatus"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 497,
                                        "name": "LockStatus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 300,
                                        "src": "3060:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                          "typeString": "type(enum LockBox.LockStatus)"
                                        }
                                      },
                                      "id": 498,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "NOT_LOCKED",
                                      "nodeType": "MemberAccess",
                                      "src": "3060:21:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_LockStatus_$300",
                                        "typeString": "enum LockBox.LockStatus"
                                      }
                                    },
                                    "src": "3030:51:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "417373657420697320616c7265616479206c6f636b6564",
                                    "id": 500,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3083:25:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_854284b9b83c8c1fd066cb6eb38a15962848a69816ee204c8dc76e001bbfe28e",
                                      "typeString": "literal_string \"Asset is already locked\""
                                    },
                                    "value": "Asset is already locked"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_854284b9b83c8c1fd066cb6eb38a15962848a69816ee204c8dc76e001bbfe28e",
                                      "typeString": "literal_string \"Asset is already locked\""
                                    }
                                  ],
                                  "id": 493,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "3022:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3022:88:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 502,
                              "nodeType": "ExpressionStatement",
                              "src": "3022:88:4"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_AssetType_$290",
                                  "typeString": "enum LockBox.AssetType"
                                },
                                "id": 508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 503,
                                      "name": "_lockBox",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 464,
                                      "src": "3169:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                      }
                                    },
                                    "id": 504,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 353,
                                    "src": "3169:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                      "typeString": "struct LockBox.Asset memory"
                                    }
                                  },
                                  "id": 505,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "assetType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 323,
                                  "src": "3169:25:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AssetType_$290",
                                    "typeString": "enum LockBox.AssetType"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 506,
                                    "name": "AssetType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 290,
                                    "src": "3198:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                      "typeString": "type(enum LockBox.AssetType)"
                                    }
                                  },
                                  "id": 507,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "NFT",
                                  "nodeType": "MemberAccess",
                                  "src": "3198:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AssetType_$290",
                                    "typeString": "enum LockBox.AssetType"
                                  }
                                },
                                "src": "3169:42:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_AssetType_$290",
                                    "typeString": "enum LockBox.AssetType"
                                  },
                                  "id": 541,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 536,
                                        "name": "_lockBox",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 464,
                                        "src": "3445:8:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                          "typeString": "struct LockBox.LockBoxInfo memory"
                                        }
                                      },
                                      "id": 537,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "assetA",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 353,
                                      "src": "3445:15:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                        "typeString": "struct LockBox.Asset memory"
                                      }
                                    },
                                    "id": 538,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetType",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 323,
                                    "src": "3445:25:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_AssetType_$290",
                                      "typeString": "enum LockBox.AssetType"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 539,
                                      "name": "AssetType",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 290,
                                      "src": "3474:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                        "typeString": "type(enum LockBox.AssetType)"
                                      }
                                    },
                                    "id": 540,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "TOKEN",
                                    "nodeType": "MemberAccess",
                                    "src": "3474:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_AssetType_$290",
                                      "typeString": "enum LockBox.AssetType"
                                    }
                                  },
                                  "src": "3445:44:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_AssetType_$290",
                                      "typeString": "enum LockBox.AssetType"
                                    },
                                    "id": 574,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 569,
                                          "name": "_lockBox",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 464,
                                          "src": "3730:8:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                          }
                                        },
                                        "id": 570,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetA",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 353,
                                        "src": "3730:15:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                          "typeString": "struct LockBox.Asset memory"
                                        }
                                      },
                                      "id": 571,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "assetType",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 323,
                                      "src": "3730:25:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AssetType_$290",
                                        "typeString": "enum LockBox.AssetType"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 572,
                                        "name": "AssetType",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 290,
                                        "src": "3759:9:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                          "typeString": "type(enum LockBox.AssetType)"
                                        }
                                      },
                                      "id": 573,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "COIN",
                                      "nodeType": "MemberAccess",
                                      "src": "3759:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AssetType_$290",
                                        "typeString": "enum LockBox.AssetType"
                                      }
                                    },
                                    "src": "3730:43:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 595,
                                  "nodeType": "IfStatement",
                                  "src": "3727:238:4",
                                  "trueBody": {
                                    "id": 594,
                                    "nodeType": "Block",
                                    "src": "3775:190:4",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 581,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 576,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "3802:3:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 577,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "value",
                                                "nodeType": "MemberAccess",
                                                "src": "3802:9:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": ">=",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 578,
                                                    "name": "_lockBox",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 464,
                                                    "src": "3815:8:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                      "typeString": "struct LockBox.LockBoxInfo memory"
                                                    }
                                                  },
                                                  "id": 579,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "assetA",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 353,
                                                  "src": "3815:15:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                    "typeString": "struct LockBox.Asset memory"
                                                  }
                                                },
                                                "id": 580,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetQuantity",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 331,
                                                "src": "3815:29:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "3802:42:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            {
                                              "hexValue": "496e73756666696369656e74206c6f636b696e672066756e6473",
                                              "id": 582,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "3846:28:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_f5b1c6a12924c6b0d031c87042002ca055bce585aed300130c06595bac7e3bb4",
                                                "typeString": "literal_string \"Insufficient locking funds\""
                                              },
                                              "value": "Insufficient locking funds"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_f5b1c6a12924c6b0d031c87042002ca055bce585aed300130c06595bac7e3bb4",
                                                "typeString": "literal_string \"Insufficient locking funds\""
                                              }
                                            ],
                                            "id": 575,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -18,
                                              -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "3794:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (bool,string memory) pure"
                                            }
                                          },
                                          "id": 583,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3794:82:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 584,
                                        "nodeType": "ExpressionStatement",
                                        "src": "3794:82:4"
                                      },
                                      {
                                        "expression": {
                                          "id": 592,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "expression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 585,
                                                  "name": "lockBoxInfo",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 283,
                                                  "src": "3895:11:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                    "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                                  }
                                                },
                                                "id": 587,
                                                "indexExpression": {
                                                  "id": 586,
                                                  "name": "_id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 459,
                                                  "src": "3907:3:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "3895:16:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                                  "typeString": "struct LockBox.LockBoxInfo storage ref"
                                                }
                                              },
                                              "id": 588,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetA",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 353,
                                              "src": "3895:23:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_storage",
                                                "typeString": "struct LockBox.Asset storage ref"
                                              }
                                            },
                                            "id": 589,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "lockStatus",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 334,
                                            "src": "3895:34:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_LockStatus_$300",
                                              "typeString": "enum LockBox.LockStatus"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "expression": {
                                              "id": 590,
                                              "name": "LockStatus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 300,
                                              "src": "3932:10:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                                "typeString": "type(enum LockBox.LockStatus)"
                                              }
                                            },
                                            "id": 591,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "LOCKED",
                                            "nodeType": "MemberAccess",
                                            "src": "3932:17:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_LockStatus_$300",
                                              "typeString": "enum LockBox.LockStatus"
                                            }
                                          },
                                          "src": "3895:54:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_LockStatus_$300",
                                            "typeString": "enum LockBox.LockStatus"
                                          }
                                        },
                                        "id": 593,
                                        "nodeType": "ExpressionStatement",
                                        "src": "3895:54:4"
                                      }
                                    ]
                                  }
                                },
                                "id": 596,
                                "nodeType": "IfStatement",
                                "src": "3442:523:4",
                                "trueBody": {
                                  "id": 568,
                                  "nodeType": "Block",
                                  "src": "3491:217:4",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 548,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "3560:3:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 549,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "3560:10:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 552,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "3580:4:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_LockBox_$1456",
                                                  "typeString": "contract LockBox"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_LockBox_$1456",
                                                  "typeString": "contract LockBox"
                                                }
                                              ],
                                              "id": 551,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3572:7:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 550,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3572:7:4",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 553,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3572:13:4",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "expression": {
                                                "id": 554,
                                                "name": "_lockBox",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 464,
                                                "src": "3587:8:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                                }
                                              },
                                              "id": 555,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetA",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 353,
                                              "src": "3587:15:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                "typeString": "struct LockBox.Asset memory"
                                              }
                                            },
                                            "id": 556,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetQuantity",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 331,
                                            "src": "3587:29:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "expression": {
                                                    "id": 543,
                                                    "name": "_lockBox",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 464,
                                                    "src": "3517:8:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                      "typeString": "struct LockBox.LockBoxInfo memory"
                                                    }
                                                  },
                                                  "id": 544,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "assetA",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 353,
                                                  "src": "3517:15:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                    "typeString": "struct LockBox.Asset memory"
                                                  }
                                                },
                                                "id": 545,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetAddress",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 327,
                                                "src": "3517:28:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 542,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 147,
                                              "src": "3510:6:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$147_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 546,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3510:36:4",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$147",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 547,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "transferFrom",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 128,
                                          "src": "3510:49:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                            "typeString": "function (address,address,uint256) external returns (bool)"
                                          }
                                        },
                                        "id": 557,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3510:107:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 558,
                                      "nodeType": "ExpressionStatement",
                                      "src": "3510:107:4"
                                    },
                                    {
                                      "expression": {
                                        "id": 566,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "expression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 559,
                                                "name": "lockBoxInfo",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 283,
                                                "src": "3636:11:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                  "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                                }
                                              },
                                              "id": 561,
                                              "indexExpression": {
                                                "id": 560,
                                                "name": "_id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 459,
                                                "src": "3648:3:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "3636:16:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                                "typeString": "struct LockBox.LockBoxInfo storage ref"
                                              }
                                            },
                                            "id": 562,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetA",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 353,
                                            "src": "3636:23:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Asset_$343_storage",
                                              "typeString": "struct LockBox.Asset storage ref"
                                            }
                                          },
                                          "id": 563,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "memberName": "lockStatus",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 334,
                                          "src": "3636:34:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_LockStatus_$300",
                                            "typeString": "enum LockBox.LockStatus"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "expression": {
                                            "id": 564,
                                            "name": "LockStatus",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 300,
                                            "src": "3673:10:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                              "typeString": "type(enum LockBox.LockStatus)"
                                            }
                                          },
                                          "id": 565,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "LOCKED",
                                          "nodeType": "MemberAccess",
                                          "src": "3673:17:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_LockStatus_$300",
                                            "typeString": "enum LockBox.LockStatus"
                                          }
                                        },
                                        "src": "3636:54:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_LockStatus_$300",
                                          "typeString": "enum LockBox.LockStatus"
                                        }
                                      },
                                      "id": 567,
                                      "nodeType": "ExpressionStatement",
                                      "src": "3636:54:4"
                                    }
                                  ]
                                }
                              },
                              "id": 597,
                              "nodeType": "IfStatement",
                              "src": "3166:799:4",
                              "trueBody": {
                                "id": 535,
                                "nodeType": "Block",
                                "src": "3213:210:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 515,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "3283:3:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 516,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "3283:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 519,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "3303:4:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_LockBox_$1456",
                                                "typeString": "contract LockBox"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_LockBox_$1456",
                                                "typeString": "contract LockBox"
                                              }
                                            ],
                                            "id": 518,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3295:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 517,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3295:7:4",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 520,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3295:13:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "expression": {
                                              "id": 521,
                                              "name": "_lockBox",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 464,
                                              "src": "3310:8:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                "typeString": "struct LockBox.LockBoxInfo memory"
                                              }
                                            },
                                            "id": 522,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetA",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 353,
                                            "src": "3310:15:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                              "typeString": "struct LockBox.Asset memory"
                                            }
                                          },
                                          "id": 523,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetID",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 329,
                                          "src": "3310:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "expression": {
                                                  "id": 510,
                                                  "name": "_lockBox",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 464,
                                                  "src": "3240:8:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                                  }
                                                },
                                                "id": 511,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetA",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 353,
                                                "src": "3240:15:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                  "typeString": "struct LockBox.Asset memory"
                                                }
                                              },
                                              "id": 512,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetAddress",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 327,
                                              "src": "3240:28:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 509,
                                            "name": "IERC721",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 263,
                                            "src": "3232:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC721_$263_$",
                                              "typeString": "type(contract IERC721)"
                                            }
                                          },
                                          "id": 513,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3232:37:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC721_$263",
                                            "typeString": "contract IERC721"
                                          }
                                        },
                                        "id": 514,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transferFrom",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 216,
                                        "src": "3232:50:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,address,uint256) external"
                                        }
                                      },
                                      "id": 524,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3232:102:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 525,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3232:102:4"
                                  },
                                  {
                                    "expression": {
                                      "id": 533,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 526,
                                              "name": "lockBoxInfo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 283,
                                              "src": "3353:11:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                              }
                                            },
                                            "id": 528,
                                            "indexExpression": {
                                              "id": 527,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 459,
                                              "src": "3365:3:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "3353:16:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                              "typeString": "struct LockBox.LockBoxInfo storage ref"
                                            }
                                          },
                                          "id": 529,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetA",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 353,
                                          "src": "3353:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Asset_$343_storage",
                                            "typeString": "struct LockBox.Asset storage ref"
                                          }
                                        },
                                        "id": 530,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "lockStatus",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 334,
                                        "src": "3353:34:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_LockStatus_$300",
                                          "typeString": "enum LockBox.LockStatus"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 531,
                                          "name": "LockStatus",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 300,
                                          "src": "3390:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                            "typeString": "type(enum LockBox.LockStatus)"
                                          }
                                        },
                                        "id": 532,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "LOCKED",
                                        "nodeType": "MemberAccess",
                                        "src": "3390:17:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_LockStatus_$300",
                                          "typeString": "enum LockBox.LockStatus"
                                        }
                                      },
                                      "src": "3353:54:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_LockStatus_$300",
                                        "typeString": "enum LockBox.LockStatus"
                                      }
                                    },
                                    "id": 534,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3353:54:4"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "1629614e",
                  "id": 716,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "lockAsset",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 460,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 459,
                        "mutability": "mutable",
                        "name": "_id",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "2529:8:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 458,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2529:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2528:10:4"
                  },
                  "returnParameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2554:0:4"
                  },
                  "scope": 1456,
                  "src": "2510:2627:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 869,
                    "nodeType": "Block",
                    "src": "5184:1424:4",
                    "statements": [
                      {
                        "assignments": [
                          723
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 723,
                            "mutability": "mutable",
                            "name": "_lockBox",
                            "nodeType": "VariableDeclaration",
                            "scope": 869,
                            "src": "5197:27:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                              "typeString": "struct LockBox.LockBoxInfo"
                            },
                            "typeName": {
                              "id": 722,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 721,
                                "name": "LockBoxInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 357,
                                "src": "5197:11:4"
                              },
                              "referencedDeclaration": 357,
                              "src": "5197:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage_ptr",
                                "typeString": "struct LockBox.LockBoxInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 727,
                        "initialValue": {
                          "baseExpression": {
                            "id": 724,
                            "name": "lockBoxInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "5227:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                              "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                            }
                          },
                          "id": 726,
                          "indexExpression": {
                            "id": 725,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "5239:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5227:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                            "typeString": "struct LockBox.LockBoxInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5197:46:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Status_$294",
                                "typeString": "enum LockBox.Status"
                              },
                              "id": 733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 729,
                                  "name": "_lockBox",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 723,
                                  "src": "5272:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                  }
                                },
                                "id": 730,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 350,
                                "src": "5272:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$294",
                                  "typeString": "enum LockBox.Status"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 731,
                                  "name": "Status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 294,
                                  "src": "5291:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Status_$294_$",
                                    "typeString": "type(enum LockBox.Status)"
                                  }
                                },
                                "id": 732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "PENDING",
                                "nodeType": "MemberAccess",
                                "src": "5291:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$294",
                                  "typeString": "enum LockBox.Status"
                                }
                              },
                              "src": "5272:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c6f636b426f78206973206e6f742070656e64696e6720616e796d6f7265",
                              "id": 734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5307:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9668d6e7736ff81111fecce7ea9d3f7795a852fefdf1940edac25e0529c55fb3",
                                "typeString": "literal_string \"LockBox is not pending anymore\""
                              },
                              "value": "LockBox is not pending anymore"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9668d6e7736ff81111fecce7ea9d3f7795a852fefdf1940edac25e0529c55fb3",
                                "typeString": "literal_string \"LockBox is not pending anymore\""
                              }
                            ],
                            "id": 728,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5264:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5264:76:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 736,
                        "nodeType": "ExpressionStatement",
                        "src": "5264:76:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 738,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5360:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5360:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 740,
                                  "name": "_lockBox",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 723,
                                  "src": "5378:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                  }
                                },
                                "id": 741,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "expiryTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 347,
                                "src": "5378:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5360:37:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c6f636b626f782069732065787069726564",
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5399:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b160a918c89a7a7db1acbe8599d5a41038a14fe41be6c5c4764c8f215eb989a2",
                                "typeString": "literal_string \"Lockbox is expired\""
                              },
                              "value": "Lockbox is expired"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b160a918c89a7a7db1acbe8599d5a41038a14fe41be6c5c4764c8f215eb989a2",
                                "typeString": "literal_string \"Lockbox is expired\""
                              }
                            ],
                            "id": 737,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5351:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5351:70:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 745,
                        "nodeType": "ExpressionStatement",
                        "src": "5351:70:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 747,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5440:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 748,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5440:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 749,
                                      "name": "_lockBox",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 723,
                                      "src": "5454:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                      }
                                    },
                                    "id": 750,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 353,
                                    "src": "5454:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                      "typeString": "struct LockBox.Asset memory"
                                    }
                                  },
                                  "id": 751,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 325,
                                  "src": "5454:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5440:35:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 753,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5479:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 754,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5479:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 755,
                                      "name": "_lockBox",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 723,
                                      "src": "5493:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                      }
                                    },
                                    "id": 756,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 356,
                                    "src": "5493:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                      "typeString": "struct LockBox.Asset memory"
                                    }
                                  },
                                  "id": 757,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 325,
                                  "src": "5493:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5479:35:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5440:74:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420616c6c6f776564",
                              "id": 760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5516:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
                                "typeString": "literal_string \"Not allowed\""
                              },
                              "value": "Not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
                                "typeString": "literal_string \"Not allowed\""
                              }
                            ],
                            "id": 746,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5432:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5432:98:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 762,
                        "nodeType": "ExpressionStatement",
                        "src": "5432:98:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 763,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5546:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5546:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 765,
                                "name": "_lockBox",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 723,
                                "src": "5560:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                }
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assetA",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 353,
                              "src": "5560:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                "typeString": "struct LockBox.Asset memory"
                              }
                            },
                            "id": 767,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 325,
                            "src": "5560:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5546:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 815,
                        "nodeType": "IfStatement",
                        "src": "5543:523:4",
                        "trueBody": {
                          "id": 814,
                          "nodeType": "Block",
                          "src": "5582:484:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_LockStatus_$300",
                                      "typeString": "enum LockBox.LockStatus"
                                    },
                                    "id": 775,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 770,
                                          "name": "_lockBox",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 723,
                                          "src": "5619:8:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                          }
                                        },
                                        "id": 771,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetA",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 353,
                                        "src": "5619:15:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                          "typeString": "struct LockBox.Asset memory"
                                        }
                                      },
                                      "id": 772,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lockStatus",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 334,
                                      "src": "5619:26:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_LockStatus_$300",
                                        "typeString": "enum LockBox.LockStatus"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 773,
                                        "name": "LockStatus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 300,
                                        "src": "5649:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                          "typeString": "type(enum LockBox.LockStatus)"
                                        }
                                      },
                                      "id": 774,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "LOCKED",
                                      "nodeType": "MemberAccess",
                                      "src": "5649:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_LockStatus_$300",
                                        "typeString": "enum LockBox.LockStatus"
                                      }
                                    },
                                    "src": "5619:47:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4173736574206964206e6f74206c6f636b6564",
                                    "id": 776,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5668:21:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0b7c95d95e3aad79b906fb19b0da0d1811ed1e045473a49cd652735d360829f8",
                                      "typeString": "literal_string \"Asset id not locked\""
                                    },
                                    "value": "Asset id not locked"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_0b7c95d95e3aad79b906fb19b0da0d1811ed1e045473a49cd652735d360829f8",
                                      "typeString": "literal_string \"Asset id not locked\""
                                    }
                                  ],
                                  "id": 769,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5611:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5611:80:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 778,
                              "nodeType": "ExpressionStatement",
                              "src": "5611:80:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                      "typeString": "enum LockBox.ApprovalStatus"
                                    },
                                    "id": 785,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 780,
                                          "name": "_lockBox",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 723,
                                          "src": "5714:8:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                          }
                                        },
                                        "id": 781,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetA",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 353,
                                        "src": "5714:15:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                          "typeString": "struct LockBox.Asset memory"
                                        }
                                      },
                                      "id": 782,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "approvalStatus",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 337,
                                      "src": "5714:30:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                        "typeString": "enum LockBox.ApprovalStatus"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 783,
                                        "name": "ApprovalStatus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 303,
                                        "src": "5748:14:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_ApprovalStatus_$303_$",
                                          "typeString": "type(enum LockBox.ApprovalStatus)"
                                        }
                                      },
                                      "id": 784,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "NOT_APPROVED",
                                      "nodeType": "MemberAccess",
                                      "src": "5748:27:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                        "typeString": "enum LockBox.ApprovalStatus"
                                      }
                                    },
                                    "src": "5714:61:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "417373657420697320616c726561647920617070726f766564",
                                    "id": 786,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5777:27:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a52d6860bf766c78d8c792b3467be6dca2c5e2083a03c9cfa98b2f8ce716cdab",
                                      "typeString": "literal_string \"Asset is already approved\""
                                    },
                                    "value": "Asset is already approved"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_a52d6860bf766c78d8c792b3467be6dca2c5e2083a03c9cfa98b2f8ce716cdab",
                                      "typeString": "literal_string \"Asset is already approved\""
                                    }
                                  ],
                                  "id": 779,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5706:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5706:99:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 788,
                              "nodeType": "ExpressionStatement",
                              "src": "5706:99:4"
                            },
                            {
                              "expression": {
                                "id": 796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 789,
                                        "name": "lockBoxInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 283,
                                        "src": "5836:11:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                          "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                        }
                                      },
                                      "id": 791,
                                      "indexExpression": {
                                        "id": 790,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 718,
                                        "src": "5848:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5836:16:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                        "typeString": "struct LockBox.LockBoxInfo storage ref"
                                      }
                                    },
                                    "id": 792,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 353,
                                    "src": "5836:23:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Asset_$343_storage",
                                      "typeString": "struct LockBox.Asset storage ref"
                                    }
                                  },
                                  "id": 793,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "approvalStatus",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 337,
                                  "src": "5836:38:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                    "typeString": "enum LockBox.ApprovalStatus"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 794,
                                    "name": "ApprovalStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 303,
                                    "src": "5877:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ApprovalStatus_$303_$",
                                      "typeString": "type(enum LockBox.ApprovalStatus)"
                                    }
                                  },
                                  "id": 795,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "APPROVED",
                                  "nodeType": "MemberAccess",
                                  "src": "5877:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                    "typeString": "enum LockBox.ApprovalStatus"
                                  }
                                },
                                "src": "5836:64:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                  "typeString": "enum LockBox.ApprovalStatus"
                                }
                              },
                              "id": 797,
                              "nodeType": "ExpressionStatement",
                              "src": "5836:64:4"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                  "typeString": "enum LockBox.ApprovalStatus"
                                },
                                "id": 803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 798,
                                      "name": "_lockBox",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 723,
                                      "src": "5920:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                      }
                                    },
                                    "id": 799,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 356,
                                    "src": "5920:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                      "typeString": "struct LockBox.Asset memory"
                                    }
                                  },
                                  "id": 800,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approvalStatus",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 337,
                                  "src": "5920:30:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                    "typeString": "enum LockBox.ApprovalStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 801,
                                    "name": "ApprovalStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 303,
                                    "src": "5954:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ApprovalStatus_$303_$",
                                      "typeString": "type(enum LockBox.ApprovalStatus)"
                                    }
                                  },
                                  "id": 802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "APPROVED",
                                  "nodeType": "MemberAccess",
                                  "src": "5954:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                    "typeString": "enum LockBox.ApprovalStatus"
                                  }
                                },
                                "src": "5920:57:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 813,
                              "nodeType": "IfStatement",
                              "src": "5917:136:4",
                              "trueBody": {
                                "id": 812,
                                "nodeType": "Block",
                                "src": "5978:75:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 810,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 804,
                                            "name": "lockBoxInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 283,
                                            "src": "5997:11:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                              "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                            }
                                          },
                                          "id": 806,
                                          "indexExpression": {
                                            "id": 805,
                                            "name": "_id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 718,
                                            "src": "6009:3:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5997:16:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                            "typeString": "struct LockBox.LockBoxInfo storage ref"
                                          }
                                        },
                                        "id": 807,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "status",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 350,
                                        "src": "5997:23:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Status_$294",
                                          "typeString": "enum LockBox.Status"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 808,
                                          "name": "Status",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 294,
                                          "src": "6023:6:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_Status_$294_$",
                                            "typeString": "type(enum LockBox.Status)"
                                          }
                                        },
                                        "id": 809,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "SUCCEED",
                                        "nodeType": "MemberAccess",
                                        "src": "6023:14:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Status_$294",
                                          "typeString": "enum LockBox.Status"
                                        }
                                      },
                                      "src": "5997:40:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Status_$294",
                                        "typeString": "enum LockBox.Status"
                                      }
                                    },
                                    "id": 811,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5997:40:4"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 816,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6081:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6081:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 818,
                                "name": "_lockBox",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 723,
                                "src": "6095:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                }
                              },
                              "id": 819,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assetB",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 356,
                              "src": "6095:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                "typeString": "struct LockBox.Asset memory"
                              }
                            },
                            "id": 820,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 325,
                            "src": "6095:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6081:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 868,
                        "nodeType": "IfStatement",
                        "src": "6078:509:4",
                        "trueBody": {
                          "id": 867,
                          "nodeType": "Block",
                          "src": "6117:470:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_LockStatus_$300",
                                      "typeString": "enum LockBox.LockStatus"
                                    },
                                    "id": 828,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 823,
                                          "name": "_lockBox",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 723,
                                          "src": "6142:8:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                          }
                                        },
                                        "id": 824,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetB",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 356,
                                        "src": "6142:15:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                          "typeString": "struct LockBox.Asset memory"
                                        }
                                      },
                                      "id": 825,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lockStatus",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 334,
                                      "src": "6142:26:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_LockStatus_$300",
                                        "typeString": "enum LockBox.LockStatus"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 826,
                                        "name": "LockStatus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 300,
                                        "src": "6172:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                          "typeString": "type(enum LockBox.LockStatus)"
                                        }
                                      },
                                      "id": 827,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "LOCKED",
                                      "nodeType": "MemberAccess",
                                      "src": "6172:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_LockStatus_$300",
                                        "typeString": "enum LockBox.LockStatus"
                                      }
                                    },
                                    "src": "6142:47:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4173736574206964206e6f74206c6f636b6564",
                                    "id": 829,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6191:21:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0b7c95d95e3aad79b906fb19b0da0d1811ed1e045473a49cd652735d360829f8",
                                      "typeString": "literal_string \"Asset id not locked\""
                                    },
                                    "value": "Asset id not locked"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_0b7c95d95e3aad79b906fb19b0da0d1811ed1e045473a49cd652735d360829f8",
                                      "typeString": "literal_string \"Asset id not locked\""
                                    }
                                  ],
                                  "id": 822,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "6134:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6134:80:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 831,
                              "nodeType": "ExpressionStatement",
                              "src": "6134:80:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                      "typeString": "enum LockBox.ApprovalStatus"
                                    },
                                    "id": 838,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 833,
                                          "name": "_lockBox",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 723,
                                          "src": "6237:8:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                          }
                                        },
                                        "id": 834,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetB",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 356,
                                        "src": "6237:15:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                          "typeString": "struct LockBox.Asset memory"
                                        }
                                      },
                                      "id": 835,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "approvalStatus",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 337,
                                      "src": "6237:30:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                        "typeString": "enum LockBox.ApprovalStatus"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 836,
                                        "name": "ApprovalStatus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 303,
                                        "src": "6271:14:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_ApprovalStatus_$303_$",
                                          "typeString": "type(enum LockBox.ApprovalStatus)"
                                        }
                                      },
                                      "id": 837,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "NOT_APPROVED",
                                      "nodeType": "MemberAccess",
                                      "src": "6271:27:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                        "typeString": "enum LockBox.ApprovalStatus"
                                      }
                                    },
                                    "src": "6237:61:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "417373657420697320616c726561647920617070726f766564",
                                    "id": 839,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6300:27:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a52d6860bf766c78d8c792b3467be6dca2c5e2083a03c9cfa98b2f8ce716cdab",
                                      "typeString": "literal_string \"Asset is already approved\""
                                    },
                                    "value": "Asset is already approved"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_a52d6860bf766c78d8c792b3467be6dca2c5e2083a03c9cfa98b2f8ce716cdab",
                                      "typeString": "literal_string \"Asset is already approved\""
                                    }
                                  ],
                                  "id": 832,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "6229:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6229:99:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 841,
                              "nodeType": "ExpressionStatement",
                              "src": "6229:99:4"
                            },
                            {
                              "expression": {
                                "id": 849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 842,
                                        "name": "lockBoxInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 283,
                                        "src": "6359:11:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                          "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                        }
                                      },
                                      "id": 844,
                                      "indexExpression": {
                                        "id": 843,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 718,
                                        "src": "6371:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6359:16:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                        "typeString": "struct LockBox.LockBoxInfo storage ref"
                                      }
                                    },
                                    "id": 845,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 356,
                                    "src": "6359:23:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Asset_$343_storage",
                                      "typeString": "struct LockBox.Asset storage ref"
                                    }
                                  },
                                  "id": 846,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "approvalStatus",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 337,
                                  "src": "6359:38:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                    "typeString": "enum LockBox.ApprovalStatus"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 847,
                                    "name": "ApprovalStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 303,
                                    "src": "6400:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ApprovalStatus_$303_$",
                                      "typeString": "type(enum LockBox.ApprovalStatus)"
                                    }
                                  },
                                  "id": 848,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "APPROVED",
                                  "nodeType": "MemberAccess",
                                  "src": "6400:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                    "typeString": "enum LockBox.ApprovalStatus"
                                  }
                                },
                                "src": "6359:64:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                  "typeString": "enum LockBox.ApprovalStatus"
                                }
                              },
                              "id": 850,
                              "nodeType": "ExpressionStatement",
                              "src": "6359:64:4"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                  "typeString": "enum LockBox.ApprovalStatus"
                                },
                                "id": 856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 851,
                                      "name": "_lockBox",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 723,
                                      "src": "6443:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                      }
                                    },
                                    "id": 852,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 353,
                                    "src": "6443:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                      "typeString": "struct LockBox.Asset memory"
                                    }
                                  },
                                  "id": 853,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approvalStatus",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 337,
                                  "src": "6443:30:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                    "typeString": "enum LockBox.ApprovalStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 854,
                                    "name": "ApprovalStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 303,
                                    "src": "6477:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ApprovalStatus_$303_$",
                                      "typeString": "type(enum LockBox.ApprovalStatus)"
                                    }
                                  },
                                  "id": 855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "APPROVED",
                                  "nodeType": "MemberAccess",
                                  "src": "6477:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                    "typeString": "enum LockBox.ApprovalStatus"
                                  }
                                },
                                "src": "6443:57:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 866,
                              "nodeType": "IfStatement",
                              "src": "6440:136:4",
                              "trueBody": {
                                "id": 865,
                                "nodeType": "Block",
                                "src": "6501:75:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 863,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 857,
                                            "name": "lockBoxInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 283,
                                            "src": "6520:11:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                              "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                            }
                                          },
                                          "id": 859,
                                          "indexExpression": {
                                            "id": 858,
                                            "name": "_id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 718,
                                            "src": "6532:3:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6520:16:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                            "typeString": "struct LockBox.LockBoxInfo storage ref"
                                          }
                                        },
                                        "id": 860,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "status",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 350,
                                        "src": "6520:23:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Status_$294",
                                          "typeString": "enum LockBox.Status"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 861,
                                          "name": "Status",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 294,
                                          "src": "6546:6:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_Status_$294_$",
                                            "typeString": "type(enum LockBox.Status)"
                                          }
                                        },
                                        "id": 862,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "SUCCEED",
                                        "nodeType": "MemberAccess",
                                        "src": "6546:14:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Status_$294",
                                          "typeString": "enum LockBox.Status"
                                        }
                                      },
                                      "src": "6520:40:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Status_$294",
                                        "typeString": "enum LockBox.Status"
                                      }
                                    },
                                    "id": 864,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6520:40:4"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "864d7e14",
                  "id": 870,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAsset",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 719,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 718,
                        "mutability": "mutable",
                        "name": "_id",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "5167:8:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5167:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5166:10:4"
                  },
                  "returnParameters": {
                    "id": 720,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5184:0:4"
                  },
                  "scope": 1456,
                  "src": "5145:1463:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1398,
                    "nodeType": "Block",
                    "src": "6658:4913:4",
                    "statements": [
                      {
                        "assignments": [
                          877
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 877,
                            "mutability": "mutable",
                            "name": "_lockBox",
                            "nodeType": "VariableDeclaration",
                            "scope": 1398,
                            "src": "6671:27:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                              "typeString": "struct LockBox.LockBoxInfo"
                            },
                            "typeName": {
                              "id": 876,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 875,
                                "name": "LockBoxInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 357,
                                "src": "6671:11:4"
                              },
                              "referencedDeclaration": 357,
                              "src": "6671:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage_ptr",
                                "typeString": "struct LockBox.LockBoxInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 881,
                        "initialValue": {
                          "baseExpression": {
                            "id": 878,
                            "name": "lockBoxInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "6701:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                              "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                            }
                          },
                          "id": 880,
                          "indexExpression": {
                            "id": 879,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "6713:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6701:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                            "typeString": "struct LockBox.LockBoxInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6671:46:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Status_$294",
                                "typeString": "enum LockBox.Status"
                              },
                              "id": 887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 883,
                                  "name": "_lockBox",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 877,
                                  "src": "6736:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                  }
                                },
                                "id": 884,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 350,
                                "src": "6736:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$294",
                                  "typeString": "enum LockBox.Status"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 885,
                                  "name": "Status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 294,
                                  "src": "6755:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Status_$294_$",
                                    "typeString": "type(enum LockBox.Status)"
                                  }
                                },
                                "id": 886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "FAILED",
                                "nodeType": "MemberAccess",
                                "src": "6755:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$294",
                                  "typeString": "enum LockBox.Status"
                                }
                              },
                              "src": "6736:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c6f636b426f782069732063616e63656c6564",
                              "id": 888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6770:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ce556117ca64060e6f0505f6d2b392e8dda32994fff633c5255ef00260631428",
                                "typeString": "literal_string \"LockBox is canceled\""
                              },
                              "value": "LockBox is canceled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ce556117ca64060e6f0505f6d2b392e8dda32994fff633c5255ef00260631428",
                                "typeString": "literal_string \"LockBox is canceled\""
                              }
                            ],
                            "id": 882,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6728:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6728:64:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 890,
                        "nodeType": "ExpressionStatement",
                        "src": "6728:64:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 897,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 892,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6811:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 893,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6811:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 894,
                                      "name": "_lockBox",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 877,
                                      "src": "6825:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                      }
                                    },
                                    "id": 895,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 353,
                                    "src": "6825:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                      "typeString": "struct LockBox.Asset memory"
                                    }
                                  },
                                  "id": 896,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 325,
                                  "src": "6825:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6811:35:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 898,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6850:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6850:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 900,
                                      "name": "_lockBox",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 877,
                                      "src": "6864:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                      }
                                    },
                                    "id": 901,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 356,
                                    "src": "6864:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                      "typeString": "struct LockBox.Asset memory"
                                    }
                                  },
                                  "id": 902,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 325,
                                  "src": "6864:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6850:35:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6811:74:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420616c6c6f776564",
                              "id": 905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6887:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
                                "typeString": "literal_string \"Not allowed\""
                              },
                              "value": "Not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
                                "typeString": "literal_string \"Not allowed\""
                              }
                            ],
                            "id": 891,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6803:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6803:98:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 907,
                        "nodeType": "ExpressionStatement",
                        "src": "6803:98:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 908,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6917:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6917:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 910,
                                "name": "_lockBox",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 877,
                                "src": "6931:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                }
                              },
                              "id": 911,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assetA",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 353,
                              "src": "6931:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                "typeString": "struct LockBox.Asset memory"
                              }
                            },
                            "id": 912,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 325,
                            "src": "6931:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6917:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1157,
                        "nodeType": "IfStatement",
                        "src": "6914:2366:4",
                        "trueBody": {
                          "id": 1156,
                          "nodeType": "Block",
                          "src": "6954:2326:4",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Status_$294",
                                  "typeString": "enum LockBox.Status"
                                },
                                "id": 918,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 914,
                                    "name": "_lockBox",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 877,
                                    "src": "6974:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                      "typeString": "struct LockBox.LockBoxInfo memory"
                                    }
                                  },
                                  "id": 915,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 350,
                                  "src": "6974:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$294",
                                    "typeString": "enum LockBox.Status"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 916,
                                    "name": "Status",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 294,
                                    "src": "6993:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Status_$294_$",
                                      "typeString": "type(enum LockBox.Status)"
                                    }
                                  },
                                  "id": 917,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "SUCCEED",
                                  "nodeType": "MemberAccess",
                                  "src": "6993:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$294",
                                    "typeString": "enum LockBox.Status"
                                  }
                                },
                                "src": "6974:33:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_Status_$294",
                                    "typeString": "enum LockBox.Status"
                                  },
                                  "id": 1038,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1034,
                                      "name": "_lockBox",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 877,
                                      "src": "8120:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                      }
                                    },
                                    "id": 1035,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "status",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 350,
                                    "src": "8120:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$294",
                                      "typeString": "enum LockBox.Status"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1036,
                                      "name": "Status",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 294,
                                      "src": "8139:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Status_$294_$",
                                        "typeString": "type(enum LockBox.Status)"
                                      }
                                    },
                                    "id": 1037,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "FAILED",
                                    "nodeType": "MemberAccess",
                                    "src": "8139:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$294",
                                      "typeString": "enum LockBox.Status"
                                    }
                                  },
                                  "src": "8120:32:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1154,
                                "nodeType": "IfStatement",
                                "src": "8117:1150:4",
                                "trueBody": {
                                  "id": 1153,
                                  "nodeType": "Block",
                                  "src": "8153:1114:4",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                              "typeString": "enum LockBox.ClaimStatus"
                                            },
                                            "id": 1045,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 1040,
                                                  "name": "_lockBox",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 877,
                                                  "src": "8199:8:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                                  }
                                                },
                                                "id": 1041,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetA",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 353,
                                                "src": "8199:15:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                  "typeString": "struct LockBox.Asset memory"
                                                }
                                              },
                                              "id": 1042,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "claimStatus",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 340,
                                              "src": "8199:27:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                                "typeString": "enum LockBox.ClaimStatus"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 1043,
                                                "name": "ClaimStatus",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 297,
                                                "src": "8230:11:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$297_$",
                                                  "typeString": "type(enum LockBox.ClaimStatus)"
                                                }
                                              },
                                              "id": 1044,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "NOT_CLAIMED",
                                              "nodeType": "MemberAccess",
                                              "src": "8230:23:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                                "typeString": "enum LockBox.ClaimStatus"
                                              }
                                            },
                                            "src": "8199:54:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          {
                                            "hexValue": "4173736574204120697320616c726561647920636c61696d6564",
                                            "id": 1046,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8255:28:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_9edbab2b2fbac3e8bd595ca8a1f4fc0c7f03cde237fa22d18abf53cbd96f2bb1",
                                              "typeString": "literal_string \"Asset A is already claimed\""
                                            },
                                            "value": "Asset A is already claimed"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_9edbab2b2fbac3e8bd595ca8a1f4fc0c7f03cde237fa22d18abf53cbd96f2bb1",
                                              "typeString": "literal_string \"Asset A is already claimed\""
                                            }
                                          ],
                                          "id": 1039,
                                          "name": "require",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            -18,
                                            -18
                                          ],
                                          "referencedDeclaration": -18,
                                          "src": "8190:7:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (bool,string memory) pure"
                                          }
                                        },
                                        "id": 1047,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8190:95:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1048,
                                      "nodeType": "ExpressionStatement",
                                      "src": "8190:95:4"
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_LockStatus_$300",
                                              "typeString": "enum LockBox.LockStatus"
                                            },
                                            "id": 1055,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 1050,
                                                  "name": "_lockBox",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 877,
                                                  "src": "8313:8:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                                  }
                                                },
                                                "id": 1051,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetA",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 353,
                                                "src": "8313:15:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                  "typeString": "struct LockBox.Asset memory"
                                                }
                                              },
                                              "id": 1052,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "lockStatus",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 334,
                                              "src": "8313:26:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LockStatus_$300",
                                                "typeString": "enum LockBox.LockStatus"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 1053,
                                                "name": "LockStatus",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 300,
                                                "src": "8343:10:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                                  "typeString": "type(enum LockBox.LockStatus)"
                                                }
                                              },
                                              "id": 1054,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "LOCKED",
                                              "nodeType": "MemberAccess",
                                              "src": "8343:17:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LockStatus_$300",
                                                "typeString": "enum LockBox.LockStatus"
                                              }
                                            },
                                            "src": "8313:47:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          {
                                            "hexValue": "41737365742041206973206e6f74206c6f636b6564",
                                            "id": 1056,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8362:23:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_3af6f5ac4ab1d36cf5a4cda6cb306a6702549521354f61378ee5d39b8c7a50a1",
                                              "typeString": "literal_string \"Asset A is not locked\""
                                            },
                                            "value": "Asset A is not locked"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_3af6f5ac4ab1d36cf5a4cda6cb306a6702549521354f61378ee5d39b8c7a50a1",
                                              "typeString": "literal_string \"Asset A is not locked\""
                                            }
                                          ],
                                          "id": 1049,
                                          "name": "require",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            -18,
                                            -18
                                          ],
                                          "referencedDeclaration": -18,
                                          "src": "8304:7:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (bool,string memory) pure"
                                          }
                                        },
                                        "id": 1057,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8304:83:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1058,
                                      "nodeType": "ExpressionStatement",
                                      "src": "8304:83:4"
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                              "typeString": "enum LockBox.ApprovalStatus"
                                            },
                                            "id": 1065,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 1060,
                                                  "name": "_lockBox",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 877,
                                                  "src": "8415:8:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                                  }
                                                },
                                                "id": 1061,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetA",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 353,
                                                "src": "8415:15:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                  "typeString": "struct LockBox.Asset memory"
                                                }
                                              },
                                              "id": 1062,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "approvalStatus",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 337,
                                              "src": "8415:30:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                                "typeString": "enum LockBox.ApprovalStatus"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 1063,
                                                "name": "ApprovalStatus",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 303,
                                                "src": "8449:14:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_ApprovalStatus_$303_$",
                                                  "typeString": "type(enum LockBox.ApprovalStatus)"
                                                }
                                              },
                                              "id": 1064,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "APPROVED",
                                              "nodeType": "MemberAccess",
                                              "src": "8449:23:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                                "typeString": "enum LockBox.ApprovalStatus"
                                              }
                                            },
                                            "src": "8415:57:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          {
                                            "hexValue": "41737365742041206973206e6f7420617070726f766564",
                                            "id": 1066,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8474:25:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_5329b3a7babc3bacf72ca712833cec552db3dd068d3e0efc461a6d45eaeef042",
                                              "typeString": "literal_string \"Asset A is not approved\""
                                            },
                                            "value": "Asset A is not approved"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_5329b3a7babc3bacf72ca712833cec552db3dd068d3e0efc461a6d45eaeef042",
                                              "typeString": "literal_string \"Asset A is not approved\""
                                            }
                                          ],
                                          "id": 1059,
                                          "name": "require",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            -18,
                                            -18
                                          ],
                                          "referencedDeclaration": -18,
                                          "src": "8406:7:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (bool,string memory) pure"
                                          }
                                        },
                                        "id": 1067,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8406:95:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1068,
                                      "nodeType": "ExpressionStatement",
                                      "src": "8406:95:4"
                                    },
                                    {
                                      "expression": {
                                        "id": 1076,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "expression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 1069,
                                                "name": "lockBoxInfo",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 283,
                                                "src": "8526:11:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                  "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                                }
                                              },
                                              "id": 1071,
                                              "indexExpression": {
                                                "id": 1070,
                                                "name": "_id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 872,
                                                "src": "8538:3:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "8526:16:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                                "typeString": "struct LockBox.LockBoxInfo storage ref"
                                              }
                                            },
                                            "id": 1072,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetA",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 353,
                                            "src": "8526:23:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Asset_$343_storage",
                                              "typeString": "struct LockBox.Asset storage ref"
                                            }
                                          },
                                          "id": 1073,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "memberName": "claimedBy",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 342,
                                          "src": "8526:33:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "expression": {
                                            "id": 1074,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "8562:3:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1075,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "8562:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "src": "8526:46:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1077,
                                      "nodeType": "ExpressionStatement",
                                      "src": "8526:46:4"
                                    },
                                    {
                                      "expression": {
                                        "id": 1085,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "expression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 1078,
                                                "name": "lockBoxInfo",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 283,
                                                "src": "8591:11:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                  "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                                }
                                              },
                                              "id": 1080,
                                              "indexExpression": {
                                                "id": 1079,
                                                "name": "_id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 872,
                                                "src": "8603:3:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "8591:16:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                                "typeString": "struct LockBox.LockBoxInfo storage ref"
                                              }
                                            },
                                            "id": 1081,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetA",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 353,
                                            "src": "8591:23:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Asset_$343_storage",
                                              "typeString": "struct LockBox.Asset storage ref"
                                            }
                                          },
                                          "id": 1082,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "memberName": "claimStatus",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 340,
                                          "src": "8591:35:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                            "typeString": "enum LockBox.ClaimStatus"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "expression": {
                                            "id": 1083,
                                            "name": "ClaimStatus",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 297,
                                            "src": "8629:11:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$297_$",
                                              "typeString": "type(enum LockBox.ClaimStatus)"
                                            }
                                          },
                                          "id": 1084,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "CLAIMED",
                                          "nodeType": "MemberAccess",
                                          "src": "8629:19:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                            "typeString": "enum LockBox.ClaimStatus"
                                          }
                                        },
                                        "src": "8591:57:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                          "typeString": "enum LockBox.ClaimStatus"
                                        }
                                      },
                                      "id": 1086,
                                      "nodeType": "ExpressionStatement",
                                      "src": "8591:57:4"
                                    },
                                    {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_AssetType_$290",
                                          "typeString": "enum LockBox.AssetType"
                                        },
                                        "id": 1092,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 1087,
                                              "name": "_lockBox",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 877,
                                              "src": "8672:8:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                "typeString": "struct LockBox.LockBoxInfo memory"
                                              }
                                            },
                                            "id": 1088,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetA",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 353,
                                            "src": "8672:15:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                              "typeString": "struct LockBox.Asset memory"
                                            }
                                          },
                                          "id": 1089,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetType",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 323,
                                          "src": "8672:25:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_AssetType_$290",
                                            "typeString": "enum LockBox.AssetType"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 1090,
                                            "name": "AssetType",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 290,
                                            "src": "8701:9:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                              "typeString": "type(enum LockBox.AssetType)"
                                            }
                                          },
                                          "id": 1091,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "NFT",
                                          "nodeType": "MemberAccess",
                                          "src": "8701:13:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_AssetType_$290",
                                            "typeString": "enum LockBox.AssetType"
                                          }
                                        },
                                        "src": "8672:42:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_AssetType_$290",
                                            "typeString": "enum LockBox.AssetType"
                                          },
                                          "id": 1116,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 1111,
                                                "name": "_lockBox",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "8887:8:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                                }
                                              },
                                              "id": 1112,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetA",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 353,
                                              "src": "8887:15:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                "typeString": "struct LockBox.Asset memory"
                                              }
                                            },
                                            "id": 1113,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetType",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 323,
                                            "src": "8887:25:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_AssetType_$290",
                                              "typeString": "enum LockBox.AssetType"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 1114,
                                              "name": "AssetType",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 290,
                                              "src": "8916:9:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                                "typeString": "type(enum LockBox.AssetType)"
                                              }
                                            },
                                            "id": 1115,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "TOKEN",
                                            "nodeType": "MemberAccess",
                                            "src": "8916:15:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_AssetType_$290",
                                              "typeString": "enum LockBox.AssetType"
                                            }
                                          },
                                          "src": "8887:44:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_AssetType_$290",
                                              "typeString": "enum LockBox.AssetType"
                                            },
                                            "id": 1136,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 1131,
                                                  "name": "_lockBox",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 877,
                                                  "src": "9090:8:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                                  }
                                                },
                                                "id": 1132,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetA",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 353,
                                                "src": "9090:15:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                  "typeString": "struct LockBox.Asset memory"
                                                }
                                              },
                                              "id": 1133,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetType",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 323,
                                              "src": "9090:25:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_AssetType_$290",
                                                "typeString": "enum LockBox.AssetType"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 1134,
                                                "name": "AssetType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 290,
                                                "src": "9119:9:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                                  "typeString": "type(enum LockBox.AssetType)"
                                                }
                                              },
                                              "id": 1135,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "COIN",
                                              "nodeType": "MemberAccess",
                                              "src": "9119:14:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_AssetType_$290",
                                                "typeString": "enum LockBox.AssetType"
                                              }
                                            },
                                            "src": "9090:43:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1150,
                                          "nodeType": "IfStatement",
                                          "src": "9087:161:4",
                                          "trueBody": {
                                            "id": 1149,
                                            "nodeType": "Block",
                                            "src": "9135:113:4",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 1144,
                                                          "name": "_lockBox",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 877,
                                                          "src": "9198:8:4",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                                          }
                                                        },
                                                        "id": 1145,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "assetA",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 353,
                                                        "src": "9198:15:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                          "typeString": "struct LockBox.Asset memory"
                                                        }
                                                      },
                                                      "id": 1146,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "assetQuantity",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 331,
                                                      "src": "9198:29:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "arguments": [
                                                        {
                                                          "expression": {
                                                            "expression": {
                                                              "id": 1139,
                                                              "name": "_lockBox",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 877,
                                                              "src": "9166:8:4",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                                "typeString": "struct LockBox.LockBoxInfo memory"
                                                              }
                                                            },
                                                            "id": 1140,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "assetA",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 353,
                                                            "src": "9166:15:4",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                              "typeString": "struct LockBox.Asset memory"
                                                            }
                                                          },
                                                          "id": 1141,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "owner",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 325,
                                                          "src": "9166:21:4",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        ],
                                                        "id": 1138,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "9158:8:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_address_payable_$",
                                                          "typeString": "type(address payable)"
                                                        },
                                                        "typeName": {
                                                          "id": 1137,
                                                          "name": "address",
                                                          "nodeType": "ElementaryTypeName",
                                                          "src": "9158:8:4",
                                                          "stateMutability": "payable",
                                                          "typeDescriptions": {}
                                                        }
                                                      },
                                                      "id": 1142,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "typeConversion",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "9158:30:4",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                      }
                                                    },
                                                    "id": 1143,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "transfer",
                                                    "nodeType": "MemberAccess",
                                                    "src": "9158:39:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                      "typeString": "function (uint256)"
                                                    }
                                                  },
                                                  "id": 1147,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "9158:70:4",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                  }
                                                },
                                                "id": 1148,
                                                "nodeType": "ExpressionStatement",
                                                "src": "9158:70:4"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 1151,
                                        "nodeType": "IfStatement",
                                        "src": "8884:364:4",
                                        "trueBody": {
                                          "id": 1130,
                                          "nodeType": "Block",
                                          "src": "8933:131:4",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "expression": {
                                                      "id": 1123,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -15,
                                                      "src": "9002:3:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 1124,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "9002:10:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 1125,
                                                        "name": "_lockBox",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 877,
                                                        "src": "9014:8:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                          "typeString": "struct LockBox.LockBoxInfo memory"
                                                        }
                                                      },
                                                      "id": 1126,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "assetA",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 353,
                                                      "src": "9014:15:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                        "typeString": "struct LockBox.Asset memory"
                                                      }
                                                    },
                                                    "id": 1127,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "assetQuantity",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 331,
                                                    "src": "9014:29:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "arguments": [
                                                      {
                                                        "expression": {
                                                          "expression": {
                                                            "id": 1118,
                                                            "name": "_lockBox",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 877,
                                                            "src": "8963:8:4",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                              "typeString": "struct LockBox.LockBoxInfo memory"
                                                            }
                                                          },
                                                          "id": 1119,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "assetA",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 353,
                                                          "src": "8963:15:4",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                            "typeString": "struct LockBox.Asset memory"
                                                          }
                                                        },
                                                        "id": 1120,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "assetAddress",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 327,
                                                        "src": "8963:28:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      ],
                                                      "id": 1117,
                                                      "name": "IERC20",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 147,
                                                      "src": "8956:6:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$147_$",
                                                        "typeString": "type(contract IERC20)"
                                                      }
                                                    },
                                                    "id": 1121,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "8956:36:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_IERC20_$147",
                                                      "typeString": "contract IERC20"
                                                    }
                                                  },
                                                  "id": 1122,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "transfer",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 96,
                                                  "src": "8956:45:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                    "typeString": "function (address,uint256) external returns (bool)"
                                                  }
                                                },
                                                "id": 1128,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8956:88:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "id": 1129,
                                              "nodeType": "ExpressionStatement",
                                              "src": "8956:88:4"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 1152,
                                      "nodeType": "IfStatement",
                                      "src": "8669:579:4",
                                      "trueBody": {
                                        "id": 1110,
                                        "nodeType": "Block",
                                        "src": "8716:145:4",
                                        "statements": [
                                          {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "id": 1101,
                                                      "name": "this",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -28,
                                                      "src": "8798:4:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_LockBox_$1456",
                                                        "typeString": "contract LockBox"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_contract$_LockBox_$1456",
                                                        "typeString": "contract LockBox"
                                                      }
                                                    ],
                                                    "id": 1100,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "8790:7:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_address_$",
                                                      "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                      "id": 1099,
                                                      "name": "address",
                                                      "nodeType": "ElementaryTypeName",
                                                      "src": "8790:7:4",
                                                      "typeDescriptions": {}
                                                    }
                                                  },
                                                  "id": 1102,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "8790:13:4",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                {
                                                  "expression": {
                                                    "id": 1103,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "8805:3:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_message",
                                                      "typeString": "msg"
                                                    }
                                                  },
                                                  "id": 1104,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "sender",
                                                  "nodeType": "MemberAccess",
                                                  "src": "8805:10:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 1105,
                                                      "name": "_lockBox",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 877,
                                                      "src": "8817:8:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                                      }
                                                    },
                                                    "id": 1106,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "assetA",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 353,
                                                    "src": "8817:15:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                      "typeString": "struct LockBox.Asset memory"
                                                    }
                                                  },
                                                  "id": 1107,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "assetID",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 329,
                                                  "src": "8817:23:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 1094,
                                                          "name": "_lockBox",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 877,
                                                          "src": "8747:8:4",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                                          }
                                                        },
                                                        "id": 1095,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "assetA",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 353,
                                                        "src": "8747:15:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                          "typeString": "struct LockBox.Asset memory"
                                                        }
                                                      },
                                                      "id": 1096,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "assetAddress",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 327,
                                                      "src": "8747:28:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "id": 1093,
                                                    "name": "IERC721",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 263,
                                                    "src": "8739:7:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_IERC721_$263_$",
                                                      "typeString": "type(contract IERC721)"
                                                    }
                                                  },
                                                  "id": 1097,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "8739:37:4",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC721_$263",
                                                    "typeString": "contract IERC721"
                                                  }
                                                },
                                                "id": 1098,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "transferFrom",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 216,
                                                "src": "8739:50:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                  "typeString": "function (address,address,uint256) external"
                                                }
                                              },
                                              "id": 1108,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "8739:102:4",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$__$",
                                                "typeString": "tuple()"
                                              }
                                            },
                                            "id": 1109,
                                            "nodeType": "ExpressionStatement",
                                            "src": "8739:102:4"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "id": 1155,
                              "nodeType": "IfStatement",
                              "src": "6971:2296:4",
                              "trueBody": {
                                "id": 1033,
                                "nodeType": "Block",
                                "src": "7008:1088:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                            "typeString": "enum LockBox.ClaimStatus"
                                          },
                                          "id": 925,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 920,
                                                "name": "_lockBox",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "7036:8:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                                }
                                              },
                                              "id": 921,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetB",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 356,
                                              "src": "7036:15:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                "typeString": "struct LockBox.Asset memory"
                                              }
                                            },
                                            "id": 922,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "claimStatus",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 340,
                                            "src": "7036:27:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                              "typeString": "enum LockBox.ClaimStatus"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 923,
                                              "name": "ClaimStatus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 297,
                                              "src": "7067:11:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$297_$",
                                                "typeString": "type(enum LockBox.ClaimStatus)"
                                              }
                                            },
                                            "id": 924,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "NOT_CLAIMED",
                                            "nodeType": "MemberAccess",
                                            "src": "7067:23:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                              "typeString": "enum LockBox.ClaimStatus"
                                            }
                                          },
                                          "src": "7036:54:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "4173736574204220697320616c726561647920636c61696d6564",
                                          "id": 926,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "7092:28:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_4afd51c36af79ae02be37794b3132d2f4b0302a5fb318f129f7a9ea17bd7a1ac",
                                            "typeString": "literal_string \"Asset B is already claimed\""
                                          },
                                          "value": "Asset B is already claimed"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_4afd51c36af79ae02be37794b3132d2f4b0302a5fb318f129f7a9ea17bd7a1ac",
                                            "typeString": "literal_string \"Asset B is already claimed\""
                                          }
                                        ],
                                        "id": 919,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "7027:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 927,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7027:95:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 928,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7027:95:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_LockStatus_$300",
                                            "typeString": "enum LockBox.LockStatus"
                                          },
                                          "id": 935,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 930,
                                                "name": "_lockBox",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "7150:8:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                                }
                                              },
                                              "id": 931,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetB",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 356,
                                              "src": "7150:15:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                "typeString": "struct LockBox.Asset memory"
                                              }
                                            },
                                            "id": 932,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "lockStatus",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 334,
                                            "src": "7150:26:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_LockStatus_$300",
                                              "typeString": "enum LockBox.LockStatus"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 933,
                                              "name": "LockStatus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 300,
                                              "src": "7180:10:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                                "typeString": "type(enum LockBox.LockStatus)"
                                              }
                                            },
                                            "id": 934,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "LOCKED",
                                            "nodeType": "MemberAccess",
                                            "src": "7180:17:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_LockStatus_$300",
                                              "typeString": "enum LockBox.LockStatus"
                                            }
                                          },
                                          "src": "7150:47:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "41737365742042206973206e6f74206c6f636b6564",
                                          "id": 936,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "7199:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_660be2c4a51de8510740c98b39cd8953e1004b8e550ba6b1eb0753e1388c073b",
                                            "typeString": "literal_string \"Asset B is not locked\""
                                          },
                                          "value": "Asset B is not locked"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_660be2c4a51de8510740c98b39cd8953e1004b8e550ba6b1eb0753e1388c073b",
                                            "typeString": "literal_string \"Asset B is not locked\""
                                          }
                                        ],
                                        "id": 929,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "7141:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 937,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7141:83:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 938,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7141:83:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                            "typeString": "enum LockBox.ApprovalStatus"
                                          },
                                          "id": 945,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 940,
                                                "name": "_lockBox",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "7252:8:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                                }
                                              },
                                              "id": 941,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetB",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 356,
                                              "src": "7252:15:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                "typeString": "struct LockBox.Asset memory"
                                              }
                                            },
                                            "id": 942,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "approvalStatus",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 337,
                                            "src": "7252:30:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                              "typeString": "enum LockBox.ApprovalStatus"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 943,
                                              "name": "ApprovalStatus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 303,
                                              "src": "7286:14:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_ApprovalStatus_$303_$",
                                                "typeString": "type(enum LockBox.ApprovalStatus)"
                                              }
                                            },
                                            "id": 944,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "APPROVED",
                                            "nodeType": "MemberAccess",
                                            "src": "7286:23:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                              "typeString": "enum LockBox.ApprovalStatus"
                                            }
                                          },
                                          "src": "7252:57:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "41737365742042206973206e6f7420617070726f766564",
                                          "id": 946,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "7311:25:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_d7a4a1d8866f38d3d46c2215da873907297302f930931fed0f4cdf8cb0daf09a",
                                            "typeString": "literal_string \"Asset B is not approved\""
                                          },
                                          "value": "Asset B is not approved"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_d7a4a1d8866f38d3d46c2215da873907297302f930931fed0f4cdf8cb0daf09a",
                                            "typeString": "literal_string \"Asset B is not approved\""
                                          }
                                        ],
                                        "id": 939,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "7243:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 947,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7243:95:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 948,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7243:95:4"
                                  },
                                  {
                                    "expression": {
                                      "id": 956,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 949,
                                              "name": "lockBoxInfo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 283,
                                              "src": "7359:11:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                              }
                                            },
                                            "id": 951,
                                            "indexExpression": {
                                              "id": 950,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 872,
                                              "src": "7371:3:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7359:16:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                              "typeString": "struct LockBox.LockBoxInfo storage ref"
                                            }
                                          },
                                          "id": 952,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetB",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 356,
                                          "src": "7359:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Asset_$343_storage",
                                            "typeString": "struct LockBox.Asset storage ref"
                                          }
                                        },
                                        "id": 953,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "claimedBy",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 342,
                                        "src": "7359:33:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 954,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "7395:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 955,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "7395:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "7359:46:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 957,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7359:46:4"
                                  },
                                  {
                                    "expression": {
                                      "id": 965,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 958,
                                              "name": "lockBoxInfo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 283,
                                              "src": "7424:11:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                              }
                                            },
                                            "id": 960,
                                            "indexExpression": {
                                              "id": 959,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 872,
                                              "src": "7436:3:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7424:16:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                              "typeString": "struct LockBox.LockBoxInfo storage ref"
                                            }
                                          },
                                          "id": 961,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetB",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 356,
                                          "src": "7424:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Asset_$343_storage",
                                            "typeString": "struct LockBox.Asset storage ref"
                                          }
                                        },
                                        "id": 962,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "claimStatus",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 340,
                                        "src": "7424:35:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                          "typeString": "enum LockBox.ClaimStatus"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 963,
                                          "name": "ClaimStatus",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 297,
                                          "src": "7462:11:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$297_$",
                                            "typeString": "type(enum LockBox.ClaimStatus)"
                                          }
                                        },
                                        "id": 964,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "CLAIMED",
                                        "nodeType": "MemberAccess",
                                        "src": "7462:19:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                          "typeString": "enum LockBox.ClaimStatus"
                                        }
                                      },
                                      "src": "7424:57:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                        "typeString": "enum LockBox.ClaimStatus"
                                      }
                                    },
                                    "id": 966,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7424:57:4"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_AssetType_$290",
                                        "typeString": "enum LockBox.AssetType"
                                      },
                                      "id": 972,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 967,
                                            "name": "_lockBox",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 877,
                                            "src": "7505:8:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                              "typeString": "struct LockBox.LockBoxInfo memory"
                                            }
                                          },
                                          "id": 968,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetB",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 356,
                                          "src": "7505:15:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                            "typeString": "struct LockBox.Asset memory"
                                          }
                                        },
                                        "id": 969,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetType",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 323,
                                        "src": "7505:25:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_AssetType_$290",
                                          "typeString": "enum LockBox.AssetType"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 970,
                                          "name": "AssetType",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 290,
                                          "src": "7534:9:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                            "typeString": "type(enum LockBox.AssetType)"
                                          }
                                        },
                                        "id": 971,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "NFT",
                                        "nodeType": "MemberAccess",
                                        "src": "7534:13:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_AssetType_$290",
                                          "typeString": "enum LockBox.AssetType"
                                        }
                                      },
                                      "src": "7505:42:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_AssetType_$290",
                                          "typeString": "enum LockBox.AssetType"
                                        },
                                        "id": 996,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 991,
                                              "name": "_lockBox",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 877,
                                              "src": "7720:8:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                "typeString": "struct LockBox.LockBoxInfo memory"
                                              }
                                            },
                                            "id": 992,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetB",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 356,
                                            "src": "7720:15:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                              "typeString": "struct LockBox.Asset memory"
                                            }
                                          },
                                          "id": 993,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetType",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 323,
                                          "src": "7720:25:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_AssetType_$290",
                                            "typeString": "enum LockBox.AssetType"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 994,
                                            "name": "AssetType",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 290,
                                            "src": "7749:9:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                              "typeString": "type(enum LockBox.AssetType)"
                                            }
                                          },
                                          "id": 995,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "TOKEN",
                                          "nodeType": "MemberAccess",
                                          "src": "7749:15:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_AssetType_$290",
                                            "typeString": "enum LockBox.AssetType"
                                          }
                                        },
                                        "src": "7720:44:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_AssetType_$290",
                                            "typeString": "enum LockBox.AssetType"
                                          },
                                          "id": 1016,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 1011,
                                                "name": "_lockBox",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "7923:8:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                                }
                                              },
                                              "id": 1012,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetB",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 356,
                                              "src": "7923:15:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                "typeString": "struct LockBox.Asset memory"
                                              }
                                            },
                                            "id": 1013,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetType",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 323,
                                            "src": "7923:25:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_AssetType_$290",
                                              "typeString": "enum LockBox.AssetType"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 1014,
                                              "name": "AssetType",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 290,
                                              "src": "7952:9:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                                "typeString": "type(enum LockBox.AssetType)"
                                              }
                                            },
                                            "id": 1015,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "COIN",
                                            "nodeType": "MemberAccess",
                                            "src": "7952:14:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_AssetType_$290",
                                              "typeString": "enum LockBox.AssetType"
                                            }
                                          },
                                          "src": "7923:43:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 1030,
                                        "nodeType": "IfStatement",
                                        "src": "7920:161:4",
                                        "trueBody": {
                                          "id": 1029,
                                          "nodeType": "Block",
                                          "src": "7968:113:4",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 1024,
                                                        "name": "_lockBox",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 877,
                                                        "src": "8031:8:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                          "typeString": "struct LockBox.LockBoxInfo memory"
                                                        }
                                                      },
                                                      "id": 1025,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "assetB",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 356,
                                                      "src": "8031:15:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                        "typeString": "struct LockBox.Asset memory"
                                                      }
                                                    },
                                                    "id": 1026,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "assetQuantity",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 331,
                                                    "src": "8031:29:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "arguments": [
                                                      {
                                                        "expression": {
                                                          "expression": {
                                                            "id": 1019,
                                                            "name": "_lockBox",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 877,
                                                            "src": "7999:8:4",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                              "typeString": "struct LockBox.LockBoxInfo memory"
                                                            }
                                                          },
                                                          "id": 1020,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "assetA",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 353,
                                                          "src": "7999:15:4",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                            "typeString": "struct LockBox.Asset memory"
                                                          }
                                                        },
                                                        "id": 1021,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "owner",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 325,
                                                        "src": "7999:21:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      ],
                                                      "id": 1018,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "nodeType": "ElementaryTypeNameExpression",
                                                      "src": "7991:8:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                      },
                                                      "typeName": {
                                                        "id": 1017,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "7991:8:4",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                      }
                                                    },
                                                    "id": 1022,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "7991:30:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address_payable",
                                                      "typeString": "address payable"
                                                    }
                                                  },
                                                  "id": 1023,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "transfer",
                                                  "nodeType": "MemberAccess",
                                                  "src": "7991:39:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                    "typeString": "function (uint256)"
                                                  }
                                                },
                                                "id": 1027,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7991:70:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_tuple$__$",
                                                  "typeString": "tuple()"
                                                }
                                              },
                                              "id": 1028,
                                              "nodeType": "ExpressionStatement",
                                              "src": "7991:70:4"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 1031,
                                      "nodeType": "IfStatement",
                                      "src": "7717:364:4",
                                      "trueBody": {
                                        "id": 1010,
                                        "nodeType": "Block",
                                        "src": "7766:131:4",
                                        "statements": [
                                          {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "expression": {
                                                    "id": 1003,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "7835:3:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_message",
                                                      "typeString": "msg"
                                                    }
                                                  },
                                                  "id": 1004,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "sender",
                                                  "nodeType": "MemberAccess",
                                                  "src": "7835:10:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 1005,
                                                      "name": "_lockBox",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 877,
                                                      "src": "7847:8:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                                      }
                                                    },
                                                    "id": 1006,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "assetB",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 356,
                                                    "src": "7847:15:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                      "typeString": "struct LockBox.Asset memory"
                                                    }
                                                  },
                                                  "id": 1007,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "assetQuantity",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 331,
                                                  "src": "7847:29:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 998,
                                                          "name": "_lockBox",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 877,
                                                          "src": "7796:8:4",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                                          }
                                                        },
                                                        "id": 999,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "assetB",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 356,
                                                        "src": "7796:15:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                          "typeString": "struct LockBox.Asset memory"
                                                        }
                                                      },
                                                      "id": 1000,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "assetAddress",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 327,
                                                      "src": "7796:28:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "id": 997,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 147,
                                                    "src": "7789:6:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$147_$",
                                                      "typeString": "type(contract IERC20)"
                                                    }
                                                  },
                                                  "id": 1001,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "7789:36:4",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$147",
                                                    "typeString": "contract IERC20"
                                                  }
                                                },
                                                "id": 1002,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "transfer",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 96,
                                                "src": "7789:45:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                  "typeString": "function (address,uint256) external returns (bool)"
                                                }
                                              },
                                              "id": 1008,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "7789:88:4",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "id": 1009,
                                            "nodeType": "ExpressionStatement",
                                            "src": "7789:88:4"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 1032,
                                    "nodeType": "IfStatement",
                                    "src": "7502:579:4",
                                    "trueBody": {
                                      "id": 990,
                                      "nodeType": "Block",
                                      "src": "7549:145:4",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 981,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -28,
                                                    "src": "7631:4:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_LockBox_$1456",
                                                      "typeString": "contract LockBox"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_LockBox_$1456",
                                                      "typeString": "contract LockBox"
                                                    }
                                                  ],
                                                  "id": 980,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "7623:7:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 979,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "7623:7:4",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 982,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7623:13:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "id": 983,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "7638:3:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 984,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "7638:10:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "expression": {
                                                    "id": 985,
                                                    "name": "_lockBox",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 877,
                                                    "src": "7650:8:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                      "typeString": "struct LockBox.LockBoxInfo memory"
                                                    }
                                                  },
                                                  "id": 986,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "assetB",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 356,
                                                  "src": "7650:15:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                    "typeString": "struct LockBox.Asset memory"
                                                  }
                                                },
                                                "id": 987,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetID",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 329,
                                                "src": "7650:23:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 974,
                                                        "name": "_lockBox",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 877,
                                                        "src": "7580:8:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                          "typeString": "struct LockBox.LockBoxInfo memory"
                                                        }
                                                      },
                                                      "id": 975,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "assetB",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 356,
                                                      "src": "7580:15:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                        "typeString": "struct LockBox.Asset memory"
                                                      }
                                                    },
                                                    "id": 976,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "assetAddress",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 327,
                                                    "src": "7580:28:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "id": 973,
                                                  "name": "IERC721",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 263,
                                                  "src": "7572:7:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$263_$",
                                                    "typeString": "type(contract IERC721)"
                                                  }
                                                },
                                                "id": 977,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7572:37:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IERC721_$263",
                                                  "typeString": "contract IERC721"
                                                }
                                              },
                                              "id": 978,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "transferFrom",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 216,
                                              "src": "7572:50:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256) external"
                                              }
                                            },
                                            "id": 988,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "7572:102:4",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 989,
                                          "nodeType": "ExpressionStatement",
                                          "src": "7572:102:4"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1158,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9295:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9295:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1160,
                                "name": "_lockBox",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 877,
                                "src": "9309:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                }
                              },
                              "id": 1161,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assetB",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 356,
                              "src": "9309:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                "typeString": "struct LockBox.Asset memory"
                              }
                            },
                            "id": 1162,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 325,
                            "src": "9309:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9295:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1397,
                        "nodeType": "IfStatement",
                        "src": "9292:2268:4",
                        "trueBody": {
                          "id": 1396,
                          "nodeType": "Block",
                          "src": "9332:2228:4",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Status_$294",
                                  "typeString": "enum LockBox.Status"
                                },
                                "id": 1168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1164,
                                    "name": "_lockBox",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 877,
                                    "src": "9364:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                      "typeString": "struct LockBox.LockBoxInfo memory"
                                    }
                                  },
                                  "id": 1165,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 350,
                                  "src": "9364:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$294",
                                    "typeString": "enum LockBox.Status"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1166,
                                    "name": "Status",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 294,
                                    "src": "9383:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Status_$294_$",
                                      "typeString": "type(enum LockBox.Status)"
                                    }
                                  },
                                  "id": 1167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "SUCCEED",
                                  "nodeType": "MemberAccess",
                                  "src": "9383:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$294",
                                    "typeString": "enum LockBox.Status"
                                  }
                                },
                                "src": "9364:33:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_Status_$294",
                                    "typeString": "enum LockBox.Status"
                                  },
                                  "id": 1288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1284,
                                      "name": "_lockBox",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 877,
                                      "src": "10535:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                      }
                                    },
                                    "id": 1285,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "status",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 350,
                                    "src": "10535:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$294",
                                      "typeString": "enum LockBox.Status"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1286,
                                      "name": "Status",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 294,
                                      "src": "10554:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Status_$294_$",
                                        "typeString": "type(enum LockBox.Status)"
                                      }
                                    },
                                    "id": 1287,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "FAILED",
                                    "nodeType": "MemberAccess",
                                    "src": "10554:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$294",
                                      "typeString": "enum LockBox.Status"
                                    }
                                  },
                                  "src": "10535:32:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1394,
                                "nodeType": "IfStatement",
                                "src": "10532:1015:4",
                                "trueBody": {
                                  "id": 1393,
                                  "nodeType": "Block",
                                  "src": "10569:978:4",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                              "typeString": "enum LockBox.ClaimStatus"
                                            },
                                            "id": 1295,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 1290,
                                                  "name": "_lockBox",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 877,
                                                  "src": "10599:8:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                                  }
                                                },
                                                "id": 1291,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetB",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 356,
                                                "src": "10599:15:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                  "typeString": "struct LockBox.Asset memory"
                                                }
                                              },
                                              "id": 1292,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "claimStatus",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 340,
                                              "src": "10599:27:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                                "typeString": "enum LockBox.ClaimStatus"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 1293,
                                                "name": "ClaimStatus",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 297,
                                                "src": "10630:11:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$297_$",
                                                  "typeString": "type(enum LockBox.ClaimStatus)"
                                                }
                                              },
                                              "id": 1294,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "NOT_CLAIMED",
                                              "nodeType": "MemberAccess",
                                              "src": "10630:23:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                                "typeString": "enum LockBox.ClaimStatus"
                                              }
                                            },
                                            "src": "10599:54:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          {
                                            "hexValue": "4173736574204220697320616c726561647920636c61696d6564",
                                            "id": 1296,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "10655:28:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_4afd51c36af79ae02be37794b3132d2f4b0302a5fb318f129f7a9ea17bd7a1ac",
                                              "typeString": "literal_string \"Asset B is already claimed\""
                                            },
                                            "value": "Asset B is already claimed"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_4afd51c36af79ae02be37794b3132d2f4b0302a5fb318f129f7a9ea17bd7a1ac",
                                              "typeString": "literal_string \"Asset B is already claimed\""
                                            }
                                          ],
                                          "id": 1289,
                                          "name": "require",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            -18,
                                            -18
                                          ],
                                          "referencedDeclaration": -18,
                                          "src": "10590:7:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (bool,string memory) pure"
                                          }
                                        },
                                        "id": 1297,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10590:95:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1298,
                                      "nodeType": "ExpressionStatement",
                                      "src": "10590:95:4"
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_LockStatus_$300",
                                              "typeString": "enum LockBox.LockStatus"
                                            },
                                            "id": 1305,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 1300,
                                                  "name": "_lockBox",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 877,
                                                  "src": "10713:8:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                                  }
                                                },
                                                "id": 1301,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetB",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 356,
                                                "src": "10713:15:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                  "typeString": "struct LockBox.Asset memory"
                                                }
                                              },
                                              "id": 1302,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "lockStatus",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 334,
                                              "src": "10713:26:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LockStatus_$300",
                                                "typeString": "enum LockBox.LockStatus"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 1303,
                                                "name": "LockStatus",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 300,
                                                "src": "10743:10:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                                  "typeString": "type(enum LockBox.LockStatus)"
                                                }
                                              },
                                              "id": 1304,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "LOCKED",
                                              "nodeType": "MemberAccess",
                                              "src": "10743:17:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LockStatus_$300",
                                                "typeString": "enum LockBox.LockStatus"
                                              }
                                            },
                                            "src": "10713:47:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          {
                                            "hexValue": "41737365742042206973206e6f74206c6f636b6564",
                                            "id": 1306,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "10762:23:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_660be2c4a51de8510740c98b39cd8953e1004b8e550ba6b1eb0753e1388c073b",
                                              "typeString": "literal_string \"Asset B is not locked\""
                                            },
                                            "value": "Asset B is not locked"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_660be2c4a51de8510740c98b39cd8953e1004b8e550ba6b1eb0753e1388c073b",
                                              "typeString": "literal_string \"Asset B is not locked\""
                                            }
                                          ],
                                          "id": 1299,
                                          "name": "require",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            -18,
                                            -18
                                          ],
                                          "referencedDeclaration": -18,
                                          "src": "10704:7:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (bool,string memory) pure"
                                          }
                                        },
                                        "id": 1307,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10704:83:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1308,
                                      "nodeType": "ExpressionStatement",
                                      "src": "10704:83:4"
                                    },
                                    {
                                      "expression": {
                                        "id": 1316,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "expression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 1309,
                                                "name": "lockBoxInfo",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 283,
                                                "src": "10808:11:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                  "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                                }
                                              },
                                              "id": 1311,
                                              "indexExpression": {
                                                "id": 1310,
                                                "name": "_id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 872,
                                                "src": "10820:3:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "10808:16:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                                "typeString": "struct LockBox.LockBoxInfo storage ref"
                                              }
                                            },
                                            "id": 1312,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetB",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 356,
                                            "src": "10808:23:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Asset_$343_storage",
                                              "typeString": "struct LockBox.Asset storage ref"
                                            }
                                          },
                                          "id": 1313,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "memberName": "claimStatus",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 340,
                                          "src": "10808:35:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                            "typeString": "enum LockBox.ClaimStatus"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "expression": {
                                            "id": 1314,
                                            "name": "ClaimStatus",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 297,
                                            "src": "10846:11:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$297_$",
                                              "typeString": "type(enum LockBox.ClaimStatus)"
                                            }
                                          },
                                          "id": 1315,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "CLAIMED",
                                          "nodeType": "MemberAccess",
                                          "src": "10846:19:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                            "typeString": "enum LockBox.ClaimStatus"
                                          }
                                        },
                                        "src": "10808:57:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                          "typeString": "enum LockBox.ClaimStatus"
                                        }
                                      },
                                      "id": 1317,
                                      "nodeType": "ExpressionStatement",
                                      "src": "10808:57:4"
                                    },
                                    {
                                      "expression": {
                                        "id": 1325,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "expression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 1318,
                                                "name": "lockBoxInfo",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 283,
                                                "src": "10884:11:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                  "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                                }
                                              },
                                              "id": 1320,
                                              "indexExpression": {
                                                "id": 1319,
                                                "name": "_id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 872,
                                                "src": "10896:3:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "10884:16:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                                "typeString": "struct LockBox.LockBoxInfo storage ref"
                                              }
                                            },
                                            "id": 1321,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetB",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 356,
                                            "src": "10884:23:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Asset_$343_storage",
                                              "typeString": "struct LockBox.Asset storage ref"
                                            }
                                          },
                                          "id": 1322,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "memberName": "claimedBy",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 342,
                                          "src": "10884:33:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "expression": {
                                            "id": 1323,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "10920:3:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1324,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "10920:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "src": "10884:46:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1326,
                                      "nodeType": "ExpressionStatement",
                                      "src": "10884:46:4"
                                    },
                                    {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_AssetType_$290",
                                          "typeString": "enum LockBox.AssetType"
                                        },
                                        "id": 1332,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 1327,
                                              "name": "_lockBox",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 877,
                                              "src": "10954:8:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                "typeString": "struct LockBox.LockBoxInfo memory"
                                              }
                                            },
                                            "id": 1328,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetB",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 356,
                                            "src": "10954:15:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                              "typeString": "struct LockBox.Asset memory"
                                            }
                                          },
                                          "id": 1329,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetType",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 323,
                                          "src": "10954:25:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_AssetType_$290",
                                            "typeString": "enum LockBox.AssetType"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 1330,
                                            "name": "AssetType",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 290,
                                            "src": "10983:9:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                              "typeString": "type(enum LockBox.AssetType)"
                                            }
                                          },
                                          "id": 1331,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "NFT",
                                          "nodeType": "MemberAccess",
                                          "src": "10983:13:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_AssetType_$290",
                                            "typeString": "enum LockBox.AssetType"
                                          }
                                        },
                                        "src": "10954:42:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_AssetType_$290",
                                            "typeString": "enum LockBox.AssetType"
                                          },
                                          "id": 1356,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 1351,
                                                "name": "_lockBox",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "11169:8:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                                }
                                              },
                                              "id": 1352,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetB",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 356,
                                              "src": "11169:15:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                "typeString": "struct LockBox.Asset memory"
                                              }
                                            },
                                            "id": 1353,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetType",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 323,
                                            "src": "11169:25:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_AssetType_$290",
                                              "typeString": "enum LockBox.AssetType"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 1354,
                                              "name": "AssetType",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 290,
                                              "src": "11198:9:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                                "typeString": "type(enum LockBox.AssetType)"
                                              }
                                            },
                                            "id": 1355,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "TOKEN",
                                            "nodeType": "MemberAccess",
                                            "src": "11198:15:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_AssetType_$290",
                                              "typeString": "enum LockBox.AssetType"
                                            }
                                          },
                                          "src": "11169:44:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_enum$_AssetType_$290",
                                              "typeString": "enum LockBox.AssetType"
                                            },
                                            "id": 1376,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 1371,
                                                  "name": "_lockBox",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 877,
                                                  "src": "11372:8:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                                  }
                                                },
                                                "id": 1372,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetB",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 356,
                                                "src": "11372:15:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                  "typeString": "struct LockBox.Asset memory"
                                                }
                                              },
                                              "id": 1373,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetType",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 323,
                                              "src": "11372:25:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_AssetType_$290",
                                                "typeString": "enum LockBox.AssetType"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 1374,
                                                "name": "AssetType",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 290,
                                                "src": "11401:9:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                                  "typeString": "type(enum LockBox.AssetType)"
                                                }
                                              },
                                              "id": 1375,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "COIN",
                                              "nodeType": "MemberAccess",
                                              "src": "11401:14:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_AssetType_$290",
                                                "typeString": "enum LockBox.AssetType"
                                              }
                                            },
                                            "src": "11372:43:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1390,
                                          "nodeType": "IfStatement",
                                          "src": "11369:161:4",
                                          "trueBody": {
                                            "id": 1389,
                                            "nodeType": "Block",
                                            "src": "11417:113:4",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 1384,
                                                          "name": "_lockBox",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 877,
                                                          "src": "11480:8:4",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                                          }
                                                        },
                                                        "id": 1385,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "assetB",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 356,
                                                        "src": "11480:15:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                          "typeString": "struct LockBox.Asset memory"
                                                        }
                                                      },
                                                      "id": 1386,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "assetQuantity",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 331,
                                                      "src": "11480:29:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "arguments": [
                                                        {
                                                          "expression": {
                                                            "expression": {
                                                              "id": 1379,
                                                              "name": "_lockBox",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 877,
                                                              "src": "11448:8:4",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                                "typeString": "struct LockBox.LockBoxInfo memory"
                                                              }
                                                            },
                                                            "id": 1380,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "assetB",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 356,
                                                            "src": "11448:15:4",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                              "typeString": "struct LockBox.Asset memory"
                                                            }
                                                          },
                                                          "id": 1381,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "owner",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 325,
                                                          "src": "11448:21:4",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        ],
                                                        "id": 1378,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "11440:8:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_address_payable_$",
                                                          "typeString": "type(address payable)"
                                                        },
                                                        "typeName": {
                                                          "id": 1377,
                                                          "name": "address",
                                                          "nodeType": "ElementaryTypeName",
                                                          "src": "11440:8:4",
                                                          "stateMutability": "payable",
                                                          "typeDescriptions": {}
                                                        }
                                                      },
                                                      "id": 1382,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "typeConversion",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "11440:30:4",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                      }
                                                    },
                                                    "id": 1383,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "transfer",
                                                    "nodeType": "MemberAccess",
                                                    "src": "11440:39:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                      "typeString": "function (uint256)"
                                                    }
                                                  },
                                                  "id": 1387,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "11440:70:4",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                  }
                                                },
                                                "id": 1388,
                                                "nodeType": "ExpressionStatement",
                                                "src": "11440:70:4"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 1391,
                                        "nodeType": "IfStatement",
                                        "src": "11166:364:4",
                                        "trueBody": {
                                          "id": 1370,
                                          "nodeType": "Block",
                                          "src": "11215:131:4",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "expression": {
                                                      "id": 1363,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -15,
                                                      "src": "11284:3:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 1364,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "11284:10:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 1365,
                                                        "name": "_lockBox",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 877,
                                                        "src": "11296:8:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                          "typeString": "struct LockBox.LockBoxInfo memory"
                                                        }
                                                      },
                                                      "id": 1366,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "assetB",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 356,
                                                      "src": "11296:15:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                        "typeString": "struct LockBox.Asset memory"
                                                      }
                                                    },
                                                    "id": 1367,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "assetQuantity",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 331,
                                                    "src": "11296:29:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "arguments": [
                                                      {
                                                        "expression": {
                                                          "expression": {
                                                            "id": 1358,
                                                            "name": "_lockBox",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 877,
                                                            "src": "11245:8:4",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                              "typeString": "struct LockBox.LockBoxInfo memory"
                                                            }
                                                          },
                                                          "id": 1359,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "assetB",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 356,
                                                          "src": "11245:15:4",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                            "typeString": "struct LockBox.Asset memory"
                                                          }
                                                        },
                                                        "id": 1360,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "assetAddress",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 327,
                                                        "src": "11245:28:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      ],
                                                      "id": 1357,
                                                      "name": "IERC20",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 147,
                                                      "src": "11238:6:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$147_$",
                                                        "typeString": "type(contract IERC20)"
                                                      }
                                                    },
                                                    "id": 1361,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "11238:36:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_IERC20_$147",
                                                      "typeString": "contract IERC20"
                                                    }
                                                  },
                                                  "id": 1362,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "transfer",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 96,
                                                  "src": "11238:45:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                    "typeString": "function (address,uint256) external returns (bool)"
                                                  }
                                                },
                                                "id": 1368,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11238:88:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "id": 1369,
                                              "nodeType": "ExpressionStatement",
                                              "src": "11238:88:4"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 1392,
                                      "nodeType": "IfStatement",
                                      "src": "10951:579:4",
                                      "trueBody": {
                                        "id": 1350,
                                        "nodeType": "Block",
                                        "src": "10998:145:4",
                                        "statements": [
                                          {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "id": 1341,
                                                      "name": "this",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -28,
                                                      "src": "11080:4:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_LockBox_$1456",
                                                        "typeString": "contract LockBox"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_contract$_LockBox_$1456",
                                                        "typeString": "contract LockBox"
                                                      }
                                                    ],
                                                    "id": 1340,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "11072:7:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_address_$",
                                                      "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                      "id": 1339,
                                                      "name": "address",
                                                      "nodeType": "ElementaryTypeName",
                                                      "src": "11072:7:4",
                                                      "typeDescriptions": {}
                                                    }
                                                  },
                                                  "id": 1342,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "11072:13:4",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                {
                                                  "expression": {
                                                    "id": 1343,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "11087:3:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_message",
                                                      "typeString": "msg"
                                                    }
                                                  },
                                                  "id": 1344,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "sender",
                                                  "nodeType": "MemberAccess",
                                                  "src": "11087:10:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 1345,
                                                      "name": "_lockBox",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 877,
                                                      "src": "11099:8:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                                      }
                                                    },
                                                    "id": 1346,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "assetB",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 356,
                                                    "src": "11099:15:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                      "typeString": "struct LockBox.Asset memory"
                                                    }
                                                  },
                                                  "id": 1347,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "assetID",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 329,
                                                  "src": "11099:23:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 1334,
                                                          "name": "_lockBox",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 877,
                                                          "src": "11029:8:4",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                                          }
                                                        },
                                                        "id": 1335,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "assetB",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 356,
                                                        "src": "11029:15:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                          "typeString": "struct LockBox.Asset memory"
                                                        }
                                                      },
                                                      "id": 1336,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "assetAddress",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 327,
                                                      "src": "11029:28:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "id": 1333,
                                                    "name": "IERC721",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 263,
                                                    "src": "11021:7:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_IERC721_$263_$",
                                                      "typeString": "type(contract IERC721)"
                                                    }
                                                  },
                                                  "id": 1337,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "11021:37:4",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC721_$263",
                                                    "typeString": "contract IERC721"
                                                  }
                                                },
                                                "id": 1338,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "transferFrom",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 216,
                                                "src": "11021:50:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                  "typeString": "function (address,address,uint256) external"
                                                }
                                              },
                                              "id": 1348,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "11021:102:4",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$__$",
                                                "typeString": "tuple()"
                                              }
                                            },
                                            "id": 1349,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11021:102:4"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "id": 1395,
                              "nodeType": "IfStatement",
                              "src": "9361:2186:4",
                              "trueBody": {
                                "id": 1283,
                                "nodeType": "Block",
                                "src": "9399:1112:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                            "typeString": "enum LockBox.ClaimStatus"
                                          },
                                          "id": 1175,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 1170,
                                                "name": "_lockBox",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "9445:8:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                                }
                                              },
                                              "id": 1171,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetA",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 353,
                                              "src": "9445:15:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                "typeString": "struct LockBox.Asset memory"
                                              }
                                            },
                                            "id": 1172,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "claimStatus",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 340,
                                            "src": "9445:27:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                              "typeString": "enum LockBox.ClaimStatus"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 1173,
                                              "name": "ClaimStatus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 297,
                                              "src": "9476:11:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$297_$",
                                                "typeString": "type(enum LockBox.ClaimStatus)"
                                              }
                                            },
                                            "id": 1174,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "NOT_CLAIMED",
                                            "nodeType": "MemberAccess",
                                            "src": "9476:23:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                              "typeString": "enum LockBox.ClaimStatus"
                                            }
                                          },
                                          "src": "9445:54:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "4173736574204120697320616c726561647920636c61696d6564",
                                          "id": 1176,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9501:28:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_9edbab2b2fbac3e8bd595ca8a1f4fc0c7f03cde237fa22d18abf53cbd96f2bb1",
                                            "typeString": "literal_string \"Asset A is already claimed\""
                                          },
                                          "value": "Asset A is already claimed"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_9edbab2b2fbac3e8bd595ca8a1f4fc0c7f03cde237fa22d18abf53cbd96f2bb1",
                                            "typeString": "literal_string \"Asset A is already claimed\""
                                          }
                                        ],
                                        "id": 1169,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "9436:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1177,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9436:95:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1178,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9436:95:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_LockStatus_$300",
                                            "typeString": "enum LockBox.LockStatus"
                                          },
                                          "id": 1185,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 1180,
                                                "name": "_lockBox",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "9559:8:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                                }
                                              },
                                              "id": 1181,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetA",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 353,
                                              "src": "9559:15:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                "typeString": "struct LockBox.Asset memory"
                                              }
                                            },
                                            "id": 1182,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "lockStatus",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 334,
                                            "src": "9559:26:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_LockStatus_$300",
                                              "typeString": "enum LockBox.LockStatus"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 1183,
                                              "name": "LockStatus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 300,
                                              "src": "9589:10:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_LockStatus_$300_$",
                                                "typeString": "type(enum LockBox.LockStatus)"
                                              }
                                            },
                                            "id": 1184,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "LOCKED",
                                            "nodeType": "MemberAccess",
                                            "src": "9589:17:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_LockStatus_$300",
                                              "typeString": "enum LockBox.LockStatus"
                                            }
                                          },
                                          "src": "9559:47:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "41737365742041206973206e6f74206c6f636b6564",
                                          "id": 1186,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9608:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_3af6f5ac4ab1d36cf5a4cda6cb306a6702549521354f61378ee5d39b8c7a50a1",
                                            "typeString": "literal_string \"Asset A is not locked\""
                                          },
                                          "value": "Asset A is not locked"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_3af6f5ac4ab1d36cf5a4cda6cb306a6702549521354f61378ee5d39b8c7a50a1",
                                            "typeString": "literal_string \"Asset A is not locked\""
                                          }
                                        ],
                                        "id": 1179,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "9550:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1187,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9550:83:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1188,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9550:83:4"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                            "typeString": "enum LockBox.ApprovalStatus"
                                          },
                                          "id": 1195,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 1190,
                                                "name": "_lockBox",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "9661:8:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                                }
                                              },
                                              "id": 1191,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetA",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 353,
                                              "src": "9661:15:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                "typeString": "struct LockBox.Asset memory"
                                              }
                                            },
                                            "id": 1192,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "approvalStatus",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 337,
                                            "src": "9661:30:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                              "typeString": "enum LockBox.ApprovalStatus"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 1193,
                                              "name": "ApprovalStatus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 303,
                                              "src": "9695:14:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_ApprovalStatus_$303_$",
                                                "typeString": "type(enum LockBox.ApprovalStatus)"
                                              }
                                            },
                                            "id": 1194,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "APPROVED",
                                            "nodeType": "MemberAccess",
                                            "src": "9695:23:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                              "typeString": "enum LockBox.ApprovalStatus"
                                            }
                                          },
                                          "src": "9661:57:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "41737365742041206973206e6f7420617070726f766564",
                                          "id": 1196,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9720:25:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_5329b3a7babc3bacf72ca712833cec552db3dd068d3e0efc461a6d45eaeef042",
                                            "typeString": "literal_string \"Asset A is not approved\""
                                          },
                                          "value": "Asset A is not approved"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_5329b3a7babc3bacf72ca712833cec552db3dd068d3e0efc461a6d45eaeef042",
                                            "typeString": "literal_string \"Asset A is not approved\""
                                          }
                                        ],
                                        "id": 1189,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "9652:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1197,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9652:95:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1198,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9652:95:4"
                                  },
                                  {
                                    "expression": {
                                      "id": 1206,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1199,
                                              "name": "lockBoxInfo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 283,
                                              "src": "9768:11:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                              }
                                            },
                                            "id": 1201,
                                            "indexExpression": {
                                              "id": 1200,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 872,
                                              "src": "9780:3:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9768:16:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                              "typeString": "struct LockBox.LockBoxInfo storage ref"
                                            }
                                          },
                                          "id": 1202,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetA",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 353,
                                          "src": "9768:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Asset_$343_storage",
                                            "typeString": "struct LockBox.Asset storage ref"
                                          }
                                        },
                                        "id": 1203,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "claimedBy",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 342,
                                        "src": "9768:33:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 1204,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "9804:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1205,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "9804:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "9768:46:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1207,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9768:46:4"
                                  },
                                  {
                                    "expression": {
                                      "id": 1215,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1208,
                                              "name": "lockBoxInfo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 283,
                                              "src": "9833:11:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                                "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                              }
                                            },
                                            "id": 1210,
                                            "indexExpression": {
                                              "id": 1209,
                                              "name": "_id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 872,
                                              "src": "9845:3:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9833:16:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                              "typeString": "struct LockBox.LockBoxInfo storage ref"
                                            }
                                          },
                                          "id": 1211,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetA",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 353,
                                          "src": "9833:23:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Asset_$343_storage",
                                            "typeString": "struct LockBox.Asset storage ref"
                                          }
                                        },
                                        "id": 1212,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "claimStatus",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 340,
                                        "src": "9833:35:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                          "typeString": "enum LockBox.ClaimStatus"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 1213,
                                          "name": "ClaimStatus",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 297,
                                          "src": "9871:11:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_ClaimStatus_$297_$",
                                            "typeString": "type(enum LockBox.ClaimStatus)"
                                          }
                                        },
                                        "id": 1214,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "CLAIMED",
                                        "nodeType": "MemberAccess",
                                        "src": "9871:19:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                          "typeString": "enum LockBox.ClaimStatus"
                                        }
                                      },
                                      "src": "9833:57:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_ClaimStatus_$297",
                                        "typeString": "enum LockBox.ClaimStatus"
                                      }
                                    },
                                    "id": 1216,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9833:57:4"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_AssetType_$290",
                                        "typeString": "enum LockBox.AssetType"
                                      },
                                      "id": 1222,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 1217,
                                            "name": "_lockBox",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 877,
                                            "src": "9914:8:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                              "typeString": "struct LockBox.LockBoxInfo memory"
                                            }
                                          },
                                          "id": 1218,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetA",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 353,
                                          "src": "9914:15:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                            "typeString": "struct LockBox.Asset memory"
                                          }
                                        },
                                        "id": 1219,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assetType",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 323,
                                        "src": "9914:25:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_AssetType_$290",
                                          "typeString": "enum LockBox.AssetType"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1220,
                                          "name": "AssetType",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 290,
                                          "src": "9943:9:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                            "typeString": "type(enum LockBox.AssetType)"
                                          }
                                        },
                                        "id": 1221,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "NFT",
                                        "nodeType": "MemberAccess",
                                        "src": "9943:13:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_AssetType_$290",
                                          "typeString": "enum LockBox.AssetType"
                                        }
                                      },
                                      "src": "9914:42:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_AssetType_$290",
                                          "typeString": "enum LockBox.AssetType"
                                        },
                                        "id": 1246,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 1241,
                                              "name": "_lockBox",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 877,
                                              "src": "10129:8:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                "typeString": "struct LockBox.LockBoxInfo memory"
                                              }
                                            },
                                            "id": 1242,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetA",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 353,
                                            "src": "10129:15:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                              "typeString": "struct LockBox.Asset memory"
                                            }
                                          },
                                          "id": 1243,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "assetType",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 323,
                                          "src": "10129:25:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_AssetType_$290",
                                            "typeString": "enum LockBox.AssetType"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 1244,
                                            "name": "AssetType",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 290,
                                            "src": "10158:9:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                              "typeString": "type(enum LockBox.AssetType)"
                                            }
                                          },
                                          "id": 1245,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "TOKEN",
                                          "nodeType": "MemberAccess",
                                          "src": "10158:15:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_AssetType_$290",
                                            "typeString": "enum LockBox.AssetType"
                                          }
                                        },
                                        "src": "10129:44:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_AssetType_$290",
                                            "typeString": "enum LockBox.AssetType"
                                          },
                                          "id": 1266,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 1261,
                                                "name": "_lockBox",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 877,
                                                "src": "10332:8:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                  "typeString": "struct LockBox.LockBoxInfo memory"
                                                }
                                              },
                                              "id": 1262,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "assetA",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 353,
                                              "src": "10332:15:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                "typeString": "struct LockBox.Asset memory"
                                              }
                                            },
                                            "id": 1263,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "assetType",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 323,
                                            "src": "10332:25:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_AssetType_$290",
                                              "typeString": "enum LockBox.AssetType"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 1264,
                                              "name": "AssetType",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 290,
                                              "src": "10361:9:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_AssetType_$290_$",
                                                "typeString": "type(enum LockBox.AssetType)"
                                              }
                                            },
                                            "id": 1265,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "COIN",
                                            "nodeType": "MemberAccess",
                                            "src": "10361:14:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_AssetType_$290",
                                              "typeString": "enum LockBox.AssetType"
                                            }
                                          },
                                          "src": "10332:43:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 1280,
                                        "nodeType": "IfStatement",
                                        "src": "10329:161:4",
                                        "trueBody": {
                                          "id": 1279,
                                          "nodeType": "Block",
                                          "src": "10377:113:4",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 1274,
                                                        "name": "_lockBox",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 877,
                                                        "src": "10440:8:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                          "typeString": "struct LockBox.LockBoxInfo memory"
                                                        }
                                                      },
                                                      "id": 1275,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "assetA",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 353,
                                                      "src": "10440:15:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                        "typeString": "struct LockBox.Asset memory"
                                                      }
                                                    },
                                                    "id": 1276,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "assetQuantity",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 331,
                                                    "src": "10440:29:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "arguments": [
                                                      {
                                                        "expression": {
                                                          "expression": {
                                                            "id": 1269,
                                                            "name": "_lockBox",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 877,
                                                            "src": "10408:8:4",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                              "typeString": "struct LockBox.LockBoxInfo memory"
                                                            }
                                                          },
                                                          "id": 1270,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "assetB",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 356,
                                                          "src": "10408:15:4",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                            "typeString": "struct LockBox.Asset memory"
                                                          }
                                                        },
                                                        "id": 1271,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "owner",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 325,
                                                        "src": "10408:21:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      ],
                                                      "id": 1268,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "nodeType": "ElementaryTypeNameExpression",
                                                      "src": "10400:8:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                      },
                                                      "typeName": {
                                                        "id": 1267,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "10400:8:4",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                      }
                                                    },
                                                    "id": 1272,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "10400:30:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address_payable",
                                                      "typeString": "address payable"
                                                    }
                                                  },
                                                  "id": 1273,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "transfer",
                                                  "nodeType": "MemberAccess",
                                                  "src": "10400:39:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                    "typeString": "function (uint256)"
                                                  }
                                                },
                                                "id": 1277,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10400:70:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_tuple$__$",
                                                  "typeString": "tuple()"
                                                }
                                              },
                                              "id": 1278,
                                              "nodeType": "ExpressionStatement",
                                              "src": "10400:70:4"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 1281,
                                      "nodeType": "IfStatement",
                                      "src": "10126:364:4",
                                      "trueBody": {
                                        "id": 1260,
                                        "nodeType": "Block",
                                        "src": "10175:131:4",
                                        "statements": [
                                          {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "expression": {
                                                    "id": 1253,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "10244:3:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_message",
                                                      "typeString": "msg"
                                                    }
                                                  },
                                                  "id": 1254,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "sender",
                                                  "nodeType": "MemberAccess",
                                                  "src": "10244:10:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 1255,
                                                      "name": "_lockBox",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 877,
                                                      "src": "10256:8:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                                      }
                                                    },
                                                    "id": 1256,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "assetA",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 353,
                                                    "src": "10256:15:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                      "typeString": "struct LockBox.Asset memory"
                                                    }
                                                  },
                                                  "id": 1257,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "assetQuantity",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 331,
                                                  "src": "10256:29:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 1248,
                                                          "name": "_lockBox",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 877,
                                                          "src": "10205:8:4",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                            "typeString": "struct LockBox.LockBoxInfo memory"
                                                          }
                                                        },
                                                        "id": 1249,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "assetA",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 353,
                                                        "src": "10205:15:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                          "typeString": "struct LockBox.Asset memory"
                                                        }
                                                      },
                                                      "id": 1250,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "assetAddress",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 327,
                                                      "src": "10205:28:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "id": 1247,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 147,
                                                    "src": "10198:6:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$147_$",
                                                      "typeString": "type(contract IERC20)"
                                                    }
                                                  },
                                                  "id": 1251,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "10198:36:4",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$147",
                                                    "typeString": "contract IERC20"
                                                  }
                                                },
                                                "id": 1252,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "transfer",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 96,
                                                "src": "10198:45:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                  "typeString": "function (address,uint256) external returns (bool)"
                                                }
                                              },
                                              "id": 1258,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "10198:88:4",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "id": 1259,
                                            "nodeType": "ExpressionStatement",
                                            "src": "10198:88:4"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 1282,
                                    "nodeType": "IfStatement",
                                    "src": "9911:579:4",
                                    "trueBody": {
                                      "id": 1240,
                                      "nodeType": "Block",
                                      "src": "9958:145:4",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 1231,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -28,
                                                    "src": "10040:4:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_LockBox_$1456",
                                                      "typeString": "contract LockBox"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_LockBox_$1456",
                                                      "typeString": "contract LockBox"
                                                    }
                                                  ],
                                                  "id": 1230,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "10032:7:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 1229,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "10032:7:4",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 1232,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10032:13:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "id": 1233,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "10047:3:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 1234,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "10047:10:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "expression": {
                                                    "id": 1235,
                                                    "name": "_lockBox",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 877,
                                                    "src": "10059:8:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                      "typeString": "struct LockBox.LockBoxInfo memory"
                                                    }
                                                  },
                                                  "id": 1236,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "assetA",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 353,
                                                  "src": "10059:15:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                    "typeString": "struct LockBox.Asset memory"
                                                  }
                                                },
                                                "id": 1237,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "assetID",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 329,
                                                "src": "10059:23:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 1224,
                                                        "name": "_lockBox",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 877,
                                                        "src": "9989:8:4",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                                          "typeString": "struct LockBox.LockBoxInfo memory"
                                                        }
                                                      },
                                                      "id": 1225,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "assetA",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 353,
                                                      "src": "9989:15:4",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                                        "typeString": "struct LockBox.Asset memory"
                                                      }
                                                    },
                                                    "id": 1226,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "assetAddress",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 327,
                                                    "src": "9989:28:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "id": 1223,
                                                  "name": "IERC721",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 263,
                                                  "src": "9981:7:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$263_$",
                                                    "typeString": "type(contract IERC721)"
                                                  }
                                                },
                                                "id": 1227,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "9981:37:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IERC721_$263",
                                                  "typeString": "contract IERC721"
                                                }
                                              },
                                              "id": 1228,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "transferFrom",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 216,
                                              "src": "9981:50:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256) external"
                                              }
                                            },
                                            "id": 1238,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "9981:102:4",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 1239,
                                          "nodeType": "ExpressionStatement",
                                          "src": "9981:102:4"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "d3c2a592",
                  "id": 1399,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimAsset",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 873,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 872,
                        "mutability": "mutable",
                        "name": "_id",
                        "nodeType": "VariableDeclaration",
                        "scope": 1399,
                        "src": "6640:8:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 871,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6640:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6639:10:4"
                  },
                  "returnParameters": {
                    "id": 874,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6658:0:4"
                  },
                  "scope": 1456,
                  "src": "6620:4951:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1454,
                    "nodeType": "Block",
                    "src": "11619:528:4",
                    "statements": [
                      {
                        "assignments": [
                          1406
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1406,
                            "mutability": "mutable",
                            "name": "_lockBox",
                            "nodeType": "VariableDeclaration",
                            "scope": 1454,
                            "src": "11630:27:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                              "typeString": "struct LockBox.LockBoxInfo"
                            },
                            "typeName": {
                              "id": 1405,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1404,
                                "name": "LockBoxInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 357,
                                "src": "11630:11:4"
                              },
                              "referencedDeclaration": 357,
                              "src": "11630:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage_ptr",
                                "typeString": "struct LockBox.LockBoxInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1410,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1407,
                            "name": "lockBoxInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "11660:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                              "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                            }
                          },
                          "id": 1409,
                          "indexExpression": {
                            "id": 1408,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1401,
                            "src": "11672:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11660:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                            "typeString": "struct LockBox.LockBoxInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11630:46:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1412,
                                  "name": "_lockBox",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1406,
                                  "src": "11705:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                  }
                                },
                                "id": 1413,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lockBoxOwner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 345,
                                "src": "11705:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1414,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "11730:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "11730:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "11705:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420616c6c6f776564",
                              "id": 1417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11742:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
                                "typeString": "literal_string \"Not allowed\""
                              },
                              "value": "Not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
                                "typeString": "literal_string \"Not allowed\""
                              }
                            ],
                            "id": 1411,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11697:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11697:59:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1419,
                        "nodeType": "ExpressionStatement",
                        "src": "11697:59:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Status_$294",
                                "typeString": "enum LockBox.Status"
                              },
                              "id": 1425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1421,
                                  "name": "_lockBox",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1406,
                                  "src": "11775:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                    "typeString": "struct LockBox.LockBoxInfo memory"
                                  }
                                },
                                "id": 1422,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 350,
                                "src": "11775:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$294",
                                  "typeString": "enum LockBox.Status"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1423,
                                  "name": "Status",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 294,
                                  "src": "11794:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Status_$294_$",
                                    "typeString": "type(enum LockBox.Status)"
                                  }
                                },
                                "id": 1424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "PENDING",
                                "nodeType": "MemberAccess",
                                "src": "11794:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$294",
                                  "typeString": "enum LockBox.Status"
                                }
                              },
                              "src": "11775:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c6f636b626f78206973206e6f742070656e64696e6720616e796d6f7265",
                              "id": 1426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11811:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_225c82a5e59665ef1f336a75ae448132134308e26aea73f698955973ed9430a8",
                                "typeString": "literal_string \"Lockbox is not pending anymore\""
                              },
                              "value": "Lockbox is not pending anymore"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_225c82a5e59665ef1f336a75ae448132134308e26aea73f698955973ed9430a8",
                                "typeString": "literal_string \"Lockbox is not pending anymore\""
                              }
                            ],
                            "id": 1420,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11767:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11767:77:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1428,
                        "nodeType": "ExpressionStatement",
                        "src": "11767:77:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                  "typeString": "enum LockBox.ApprovalStatus"
                                },
                                "id": 1435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 1430,
                                      "name": "_lockBox",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1406,
                                      "src": "11887:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                      }
                                    },
                                    "id": 1431,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 353,
                                    "src": "11887:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                      "typeString": "struct LockBox.Asset memory"
                                    }
                                  },
                                  "id": 1432,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approvalStatus",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 337,
                                  "src": "11887:30:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                    "typeString": "enum LockBox.ApprovalStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1433,
                                    "name": "ApprovalStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 303,
                                    "src": "11921:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ApprovalStatus_$303_$",
                                      "typeString": "type(enum LockBox.ApprovalStatus)"
                                    }
                                  },
                                  "id": 1434,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "NOT_APPROVED",
                                  "nodeType": "MemberAccess",
                                  "src": "11921:27:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                    "typeString": "enum LockBox.ApprovalStatus"
                                  }
                                },
                                "src": "11887:61:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                  "typeString": "enum LockBox.ApprovalStatus"
                                },
                                "id": 1441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 1436,
                                      "name": "_lockBox",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1406,
                                      "src": "11965:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LockBoxInfo_$357_memory_ptr",
                                        "typeString": "struct LockBox.LockBoxInfo memory"
                                      }
                                    },
                                    "id": 1437,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "assetB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 356,
                                    "src": "11965:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Asset_$343_memory_ptr",
                                      "typeString": "struct LockBox.Asset memory"
                                    }
                                  },
                                  "id": 1438,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approvalStatus",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 337,
                                  "src": "11965:30:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                    "typeString": "enum LockBox.ApprovalStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1439,
                                    "name": "ApprovalStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 303,
                                    "src": "11999:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ApprovalStatus_$303_$",
                                      "typeString": "type(enum LockBox.ApprovalStatus)"
                                    }
                                  },
                                  "id": 1440,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "NOT_APPROVED",
                                  "nodeType": "MemberAccess",
                                  "src": "11999:27:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ApprovalStatus_$303",
                                    "typeString": "enum LockBox.ApprovalStatus"
                                  }
                                },
                                "src": "11965:61:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "11887:139:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f742063616e63656c20746865206c6f636b626f78206e6f77",
                              "id": 1443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12043:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7a7f3bf16a9a6ffa5efb50883f002fbaa38568a5113cab72d8351c9d8f31dd5c",
                                "typeString": "literal_string \"Cannot cancel the lockbox now\""
                              },
                              "value": "Cannot cancel the lockbox now"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7a7f3bf16a9a6ffa5efb50883f002fbaa38568a5113cab72d8351c9d8f31dd5c",
                                "typeString": "literal_string \"Cannot cancel the lockbox now\""
                              }
                            ],
                            "id": 1429,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11865:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11865:220:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1445,
                        "nodeType": "ExpressionStatement",
                        "src": "11865:220:4"
                      },
                      {
                        "expression": {
                          "id": 1452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1446,
                                "name": "lockBoxInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 283,
                                "src": "12098:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LockBoxInfo_$357_storage_$",
                                  "typeString": "mapping(uint256 => struct LockBox.LockBoxInfo storage ref)"
                                }
                              },
                              "id": 1448,
                              "indexExpression": {
                                "id": 1447,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1401,
                                "src": "12110:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12098:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LockBoxInfo_$357_storage",
                                "typeString": "struct LockBox.LockBoxInfo storage ref"
                              }
                            },
                            "id": 1449,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 350,
                            "src": "12098:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$294",
                              "typeString": "enum LockBox.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1450,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 294,
                              "src": "12124:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$294_$",
                                "typeString": "type(enum LockBox.Status)"
                              }
                            },
                            "id": 1451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "FAILED",
                            "nodeType": "MemberAccess",
                            "src": "12124:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$294",
                              "typeString": "enum LockBox.Status"
                            }
                          },
                          "src": "12098:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$294",
                            "typeString": "enum LockBox.Status"
                          }
                        },
                        "id": 1453,
                        "nodeType": "ExpressionStatement",
                        "src": "12098:39:4"
                      }
                    ]
                  },
                  "functionSelector": "d3f29c33",
                  "id": 1455,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cancelLockBox",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1401,
                        "mutability": "mutable",
                        "name": "_id",
                        "nodeType": "VariableDeclaration",
                        "scope": 1455,
                        "src": "11602:8:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1400,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11602:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11601:10:4"
                  },
                  "returnParameters": {
                    "id": 1403,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11619:0:4"
                  },
                  "scope": 1456,
                  "src": "11579:568:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1457,
              "src": "145:18123:4"
            }
          ],
          "src": "35:18233:4"
        },
        "id": 4
      }
    }
  }
}
